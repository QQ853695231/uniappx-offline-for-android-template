@file:Suppress("UNCHECKED_CAST", "USELESS_CAST", "INAPPLICABLE_JVM_NAME", "UNUSED_ANONYMOUS_PARAMETER", "NAME_SHADOWING", "UNNECESSARY_NOT_NULL_ASSERTION")
package uni.UNIBC2A3BF
import io.dcloud.uniapp.*
import io.dcloud.uniapp.extapi.*
import io.dcloud.uniapp.framework.*
import io.dcloud.uniapp.runtime.*
import io.dcloud.uniapp.vue.*
import io.dcloud.uniapp.vue.shared.*
import io.dcloud.uts.*
import io.dcloud.uts.Map
import io.dcloud.uts.Set
import io.dcloud.uts.UTSAndroid
import io.dcloud.uniapp.extapi.`$emit` as uni__emit
import io.dcloud.uniapp.extapi.clearStorageSync as uni_clearStorageSync
import io.dcloud.uniapp.extapi.getAppBaseInfo as uni_getAppBaseInfo
import io.dcloud.uniapp.extapi.getDeviceInfo as uni_getDeviceInfo
import io.dcloud.uniapp.extapi.getImageInfo as uni_getImageInfo
import io.dcloud.uniapp.extapi.getStorageInfoSync as uni_getStorageInfoSync
import io.dcloud.uniapp.extapi.getStorageSync as uni_getStorageSync
import io.dcloud.uniapp.extapi.getSystemInfoSync as uni_getSystemInfoSync
import io.dcloud.uniapp.extapi.getWindowInfo as uni_getWindowInfo
import io.dcloud.uniapp.extapi.hideLoading as uni_hideLoading
import io.dcloud.uniapp.extapi.navigateBack as uni_navigateBack
import io.dcloud.uniapp.extapi.navigateTo as uni_navigateTo
import io.dcloud.uniapp.extapi.onAppThemeChange as uni_onAppThemeChange
import io.dcloud.uniapp.extapi.onOsThemeChange as uni_onOsThemeChange
import io.dcloud.uniapp.extapi.reLaunch as uni_reLaunch
import io.dcloud.uniapp.extapi.redirectTo as uni_redirectTo
import io.dcloud.uniapp.extapi.removeStorageSync as uni_removeStorageSync
import io.dcloud.uniapp.extapi.request as uni_request
import io.dcloud.uniapp.extapi.rpx2px as uni_rpx2px
import io.dcloud.uniapp.extapi.setAppTheme as uni_setAppTheme
import io.dcloud.uniapp.extapi.setStorageSync as uni_setStorageSync
import io.dcloud.uniapp.extapi.showLoading as uni_showLoading
import io.dcloud.uniapp.extapi.switchTab as uni_switchTab
import io.dcloud.uniapp.extapi.uploadFile as uni_uploadFile
import uts.sdk.modules.coolVibrate.vibrate
val runBlock1 = run {
    __uniConfig.getAppStyles = fun(): Map<String, Map<String, Map<String, Any>>> {
        return GenApp.styles
    }
}
typealias Size = String
typealias Type = String
open class PassThroughProps (
    open var className: String? = null,
) : UTSObject()
typealias Justify = String
typealias ClInputType = String
typealias ClTextType = String
typealias ClButtonType = String
open class ClRadioOption (
    open var label: String? = null,
    @JsonNotNull
    open var value: Any,
    open var disabled: Boolean? = null,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return ClRadioOptionReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class ClRadioOptionReactiveObject : ClRadioOption, IUTSReactive<ClRadioOption> {
    override var __v_raw: ClRadioOption
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: ClRadioOption, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(label = __v_raw.label, value = __v_raw.value, disabled = __v_raw.disabled) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): ClRadioOptionReactiveObject {
        return ClRadioOptionReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var label: String?
        get() {
            return _tRG(__v_raw, "label", __v_raw.label, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("label")) {
                return
            }
            val oldValue = __v_raw.label
            __v_raw.label = value
            _tRS(__v_raw, "label", oldValue, value)
        }
    override var value: Any
        get() {
            return _tRG(__v_raw, "value", __v_raw.value, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("value")) {
                return
            }
            val oldValue = __v_raw.value
            __v_raw.value = value
            _tRS(__v_raw, "value", oldValue, value)
        }
    override var disabled: Boolean?
        get() {
            return _tRG(__v_raw, "disabled", __v_raw.disabled, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("disabled")) {
                return
            }
            val oldValue = __v_raw.disabled
            __v_raw.disabled = value
            _tRS(__v_raw, "disabled", oldValue, value)
        }
}
open class ClCheckboxOption (
    open var label: String? = null,
    @JsonNotNull
    open var value: Any,
    open var disabled: Boolean? = null,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return ClCheckboxOptionReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class ClCheckboxOptionReactiveObject : ClCheckboxOption, IUTSReactive<ClCheckboxOption> {
    override var __v_raw: ClCheckboxOption
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: ClCheckboxOption, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(label = __v_raw.label, value = __v_raw.value, disabled = __v_raw.disabled) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): ClCheckboxOptionReactiveObject {
        return ClCheckboxOptionReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var label: String?
        get() {
            return _tRG(__v_raw, "label", __v_raw.label, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("label")) {
                return
            }
            val oldValue = __v_raw.label
            __v_raw.label = value
            _tRS(__v_raw, "label", oldValue, value)
        }
    override var value: Any
        get() {
            return _tRG(__v_raw, "value", __v_raw.value, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("value")) {
                return
            }
            val oldValue = __v_raw.value
            __v_raw.value = value
            _tRS(__v_raw, "value", oldValue, value)
        }
    override var disabled: Boolean?
        get() {
            return _tRG(__v_raw, "disabled", __v_raw.disabled, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("disabled")) {
                return
            }
            val oldValue = __v_raw.disabled
            __v_raw.disabled = value
            _tRS(__v_raw, "disabled", oldValue, value)
        }
}
open class ClSelectOption (
    @JsonNotNull
    open var label: String,
    @JsonNotNull
    open var value: Any,
    open var children: UTSArray<ClSelectOption>? = null,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return ClSelectOptionReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class ClSelectOptionReactiveObject : ClSelectOption, IUTSReactive<ClSelectOption> {
    override var __v_raw: ClSelectOption
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: ClSelectOption, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(label = __v_raw.label, value = __v_raw.value, children = __v_raw.children) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): ClSelectOptionReactiveObject {
        return ClSelectOptionReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var label: String
        get() {
            return _tRG(__v_raw, "label", __v_raw.label, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("label")) {
                return
            }
            val oldValue = __v_raw.label
            __v_raw.label = value
            _tRS(__v_raw, "label", oldValue, value)
        }
    override var value: Any
        get() {
            return _tRG(__v_raw, "value", __v_raw.value, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("value")) {
                return
            }
            val oldValue = __v_raw.value
            __v_raw.value = value
            _tRS(__v_raw, "value", oldValue, value)
        }
    override var children: UTSArray<ClSelectOption>?
        get() {
            return _tRG(__v_raw, "children", __v_raw.children, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("children")) {
                return
            }
            val oldValue = __v_raw.children
            __v_raw.children = value
            _tRS(__v_raw, "children", oldValue, value)
        }
}
typealias ClConfirmAction = String
open class ClConfirmBeforeCloseEvent (
    open var close: () -> Unit,
    open var showLoading: () -> Unit,
    open var hideLoading: () -> Unit,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return ClConfirmBeforeCloseEventReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class ClConfirmBeforeCloseEventReactiveObject : ClConfirmBeforeCloseEvent, IUTSReactive<ClConfirmBeforeCloseEvent> {
    override var __v_raw: ClConfirmBeforeCloseEvent
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: ClConfirmBeforeCloseEvent, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(close = __v_raw.close, showLoading = __v_raw.showLoading, hideLoading = __v_raw.hideLoading) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): ClConfirmBeforeCloseEventReactiveObject {
        return ClConfirmBeforeCloseEventReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class ClConfirmOptions (
    @JsonNotNull
    open var title: String,
    @JsonNotNull
    open var message: String,
    open var callback: ((action: ClConfirmAction) -> Unit)? = null,
    open var beforeClose: ((action: ClConfirmAction, event: ClConfirmBeforeCloseEvent) -> Unit)? = null,
    open var confirmText: String? = null,
    open var showConfirm: Boolean? = null,
    open var cancelText: String? = null,
    open var showCancel: Boolean? = null,
    open var duration: Number? = null,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return ClConfirmOptionsReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class ClConfirmOptionsReactiveObject : ClConfirmOptions, IUTSReactive<ClConfirmOptions> {
    override var __v_raw: ClConfirmOptions
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: ClConfirmOptions, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(title = __v_raw.title, message = __v_raw.message, callback = __v_raw.callback, beforeClose = __v_raw.beforeClose, confirmText = __v_raw.confirmText, showConfirm = __v_raw.showConfirm, cancelText = __v_raw.cancelText, showCancel = __v_raw.showCancel, duration = __v_raw.duration) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): ClConfirmOptionsReactiveObject {
        return ClConfirmOptionsReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var title: String
        get() {
            return _tRG(__v_raw, "title", __v_raw.title, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("title")) {
                return
            }
            val oldValue = __v_raw.title
            __v_raw.title = value
            _tRS(__v_raw, "title", oldValue, value)
        }
    override var message: String
        get() {
            return _tRG(__v_raw, "message", __v_raw.message, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("message")) {
                return
            }
            val oldValue = __v_raw.message
            __v_raw.message = value
            _tRS(__v_raw, "message", oldValue, value)
        }
    override var confirmText: String?
        get() {
            return _tRG(__v_raw, "confirmText", __v_raw.confirmText, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("confirmText")) {
                return
            }
            val oldValue = __v_raw.confirmText
            __v_raw.confirmText = value
            _tRS(__v_raw, "confirmText", oldValue, value)
        }
    override var showConfirm: Boolean?
        get() {
            return _tRG(__v_raw, "showConfirm", __v_raw.showConfirm, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("showConfirm")) {
                return
            }
            val oldValue = __v_raw.showConfirm
            __v_raw.showConfirm = value
            _tRS(__v_raw, "showConfirm", oldValue, value)
        }
    override var cancelText: String?
        get() {
            return _tRG(__v_raw, "cancelText", __v_raw.cancelText, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("cancelText")) {
                return
            }
            val oldValue = __v_raw.cancelText
            __v_raw.cancelText = value
            _tRS(__v_raw, "cancelText", oldValue, value)
        }
    override var showCancel: Boolean?
        get() {
            return _tRG(__v_raw, "showCancel", __v_raw.showCancel, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("showCancel")) {
                return
            }
            val oldValue = __v_raw.showCancel
            __v_raw.showCancel = value
            _tRS(__v_raw, "showCancel", oldValue, value)
        }
    override var duration: Number?
        get() {
            return _tRG(__v_raw, "duration", __v_raw.duration, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("duration")) {
                return
            }
            val oldValue = __v_raw.duration
            __v_raw.duration = value
            _tRS(__v_raw, "duration", oldValue, value)
        }
}
open class ClActionSheetItem (
    @JsonNotNull
    open var label: String,
    open var icon: String? = null,
    open var disabled: Boolean? = null,
    open var color: String? = null,
    open var callback: (() -> Unit)? = null,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return ClActionSheetItemReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class ClActionSheetItemReactiveObject : ClActionSheetItem, IUTSReactive<ClActionSheetItem> {
    override var __v_raw: ClActionSheetItem
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: ClActionSheetItem, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(label = __v_raw.label, icon = __v_raw.icon, disabled = __v_raw.disabled, color = __v_raw.color, callback = __v_raw.callback) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): ClActionSheetItemReactiveObject {
        return ClActionSheetItemReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var label: String
        get() {
            return _tRG(__v_raw, "label", __v_raw.label, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("label")) {
                return
            }
            val oldValue = __v_raw.label
            __v_raw.label = value
            _tRS(__v_raw, "label", oldValue, value)
        }
    override var icon: String?
        get() {
            return _tRG(__v_raw, "icon", __v_raw.icon, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("icon")) {
                return
            }
            val oldValue = __v_raw.icon
            __v_raw.icon = value
            _tRS(__v_raw, "icon", oldValue, value)
        }
    override var disabled: Boolean?
        get() {
            return _tRG(__v_raw, "disabled", __v_raw.disabled, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("disabled")) {
                return
            }
            val oldValue = __v_raw.disabled
            __v_raw.disabled = value
            _tRS(__v_raw, "disabled", oldValue, value)
        }
    override var color: String?
        get() {
            return _tRG(__v_raw, "color", __v_raw.color, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("color")) {
                return
            }
            val oldValue = __v_raw.color
            __v_raw.color = value
            _tRS(__v_raw, "color", oldValue, value)
        }
}
open class ClActionSheetOptions (
    @JsonNotNull
    open var list: UTSArray<ClActionSheetItem>,
    open var title: String? = null,
    open var description: String? = null,
    open var cancelText: String? = null,
    open var showCancel: Boolean? = null,
    open var maskClosable: Boolean? = null,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return ClActionSheetOptionsReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class ClActionSheetOptionsReactiveObject : ClActionSheetOptions, IUTSReactive<ClActionSheetOptions> {
    override var __v_raw: ClActionSheetOptions
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: ClActionSheetOptions, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(list = __v_raw.list, title = __v_raw.title, description = __v_raw.description, cancelText = __v_raw.cancelText, showCancel = __v_raw.showCancel, maskClosable = __v_raw.maskClosable) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): ClActionSheetOptionsReactiveObject {
        return ClActionSheetOptionsReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var list: UTSArray<ClActionSheetItem>
        get() {
            return _tRG(__v_raw, "list", __v_raw.list, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("list")) {
                return
            }
            val oldValue = __v_raw.list
            __v_raw.list = value
            _tRS(__v_raw, "list", oldValue, value)
        }
    override var title: String?
        get() {
            return _tRG(__v_raw, "title", __v_raw.title, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("title")) {
                return
            }
            val oldValue = __v_raw.title
            __v_raw.title = value
            _tRS(__v_raw, "title", oldValue, value)
        }
    override var description: String?
        get() {
            return _tRG(__v_raw, "description", __v_raw.description, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("description")) {
                return
            }
            val oldValue = __v_raw.description
            __v_raw.description = value
            _tRS(__v_raw, "description", oldValue, value)
        }
    override var cancelText: String?
        get() {
            return _tRG(__v_raw, "cancelText", __v_raw.cancelText, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("cancelText")) {
                return
            }
            val oldValue = __v_raw.cancelText
            __v_raw.cancelText = value
            _tRS(__v_raw, "cancelText", oldValue, value)
        }
    override var showCancel: Boolean?
        get() {
            return _tRG(__v_raw, "showCancel", __v_raw.showCancel, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("showCancel")) {
                return
            }
            val oldValue = __v_raw.showCancel
            __v_raw.showCancel = value
            _tRS(__v_raw, "showCancel", oldValue, value)
        }
    override var maskClosable: Boolean?
        get() {
            return _tRG(__v_raw, "maskClosable", __v_raw.maskClosable, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("maskClosable")) {
                return
            }
            val oldValue = __v_raw.maskClosable
            __v_raw.maskClosable = value
            _tRS(__v_raw, "maskClosable", oldValue, value)
        }
}
typealias ClToastPosition = String
typealias ClToastType = String
open class ClToastOptions (
    open var type: ClToastType? = null,
    open var icon: String? = null,
    open var image: String? = null,
    @JsonNotNull
    open var message: String,
    open var position: ClToastPosition? = null,
    open var duration: Number? = null,
    open var clear: Boolean? = null,
) : UTSObject()
open class ClTabsItem (
    @JsonNotNull
    open var label: String,
    @JsonNotNull
    open var value: Any,
    open var disabled: Boolean? = null,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return ClTabsItemReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class ClTabsItemReactiveObject : ClTabsItem, IUTSReactive<ClTabsItem> {
    override var __v_raw: ClTabsItem
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: ClTabsItem, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(label = __v_raw.label, value = __v_raw.value, disabled = __v_raw.disabled) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): ClTabsItemReactiveObject {
        return ClTabsItemReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var label: String
        get() {
            return _tRG(__v_raw, "label", __v_raw.label, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("label")) {
                return
            }
            val oldValue = __v_raw.label
            __v_raw.label = value
            _tRS(__v_raw, "label", oldValue, value)
        }
    override var value: Any
        get() {
            return _tRG(__v_raw, "value", __v_raw.value, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("value")) {
                return
            }
            val oldValue = __v_raw.value
            __v_raw.value = value
            _tRS(__v_raw, "value", oldValue, value)
        }
    override var disabled: Boolean?
        get() {
            return _tRG(__v_raw, "disabled", __v_raw.disabled, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("disabled")) {
                return
            }
            val oldValue = __v_raw.disabled
            __v_raw.disabled = value
            _tRS(__v_raw, "disabled", oldValue, value)
        }
}
open class ClListItem (
    @JsonNotNull
    open var label: String,
    open var content: String? = null,
    open var icon: String? = null,
    open var arrow: Boolean? = null,
    open var hoverable: Boolean? = null,
    open var disabled: Boolean? = null,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return ClListItemReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class ClListItemReactiveObject : ClListItem, IUTSReactive<ClListItem> {
    override var __v_raw: ClListItem
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: ClListItem, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(label = __v_raw.label, content = __v_raw.content, icon = __v_raw.icon, arrow = __v_raw.arrow, hoverable = __v_raw.hoverable, disabled = __v_raw.disabled) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): ClListItemReactiveObject {
        return ClListItemReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var label: String
        get() {
            return _tRG(__v_raw, "label", __v_raw.label, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("label")) {
                return
            }
            val oldValue = __v_raw.label
            __v_raw.label = value
            _tRS(__v_raw, "label", oldValue, value)
        }
    override var content: String?
        get() {
            return _tRG(__v_raw, "content", __v_raw.content, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("content")) {
                return
            }
            val oldValue = __v_raw.content
            __v_raw.content = value
            _tRS(__v_raw, "content", oldValue, value)
        }
    override var icon: String?
        get() {
            return _tRG(__v_raw, "icon", __v_raw.icon, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("icon")) {
                return
            }
            val oldValue = __v_raw.icon
            __v_raw.icon = value
            _tRS(__v_raw, "icon", oldValue, value)
        }
    override var arrow: Boolean?
        get() {
            return _tRG(__v_raw, "arrow", __v_raw.arrow, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("arrow")) {
                return
            }
            val oldValue = __v_raw.arrow
            __v_raw.arrow = value
            _tRS(__v_raw, "arrow", oldValue, value)
        }
    override var hoverable: Boolean?
        get() {
            return _tRG(__v_raw, "hoverable", __v_raw.hoverable, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("hoverable")) {
                return
            }
            val oldValue = __v_raw.hoverable
            __v_raw.hoverable = value
            _tRS(__v_raw, "hoverable", oldValue, value)
        }
    override var disabled: Boolean?
        get() {
            return _tRG(__v_raw, "disabled", __v_raw.disabled, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("disabled")) {
                return
            }
            val oldValue = __v_raw.disabled
            __v_raw.disabled = value
            _tRS(__v_raw, "disabled", oldValue, value)
        }
}
open class ClListViewItem (
    open var label: String? = null,
    open var value: Any? = null,
    open var index: String? = null,
    open var children: UTSArray<ClListViewItem>? = null,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return ClListViewItemReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class ClListViewItemReactiveObject : ClListViewItem, IUTSReactive<ClListViewItem> {
    override var __v_raw: ClListViewItem
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: ClListViewItem, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(label = __v_raw.label, value = __v_raw.value, index = __v_raw.index, children = __v_raw.children) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): ClListViewItemReactiveObject {
        return ClListViewItemReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var label: String?
        get() {
            return _tRG(__v_raw, "label", __v_raw.label, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("label")) {
                return
            }
            val oldValue = __v_raw.label
            __v_raw.label = value
            _tRS(__v_raw, "label", oldValue, value)
        }
    override var value: Any?
        get() {
            return _tRG(__v_raw, "value", __v_raw.value, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("value")) {
                return
            }
            val oldValue = __v_raw.value
            __v_raw.value = value
            _tRS(__v_raw, "value", oldValue, value)
        }
    override var index: String?
        get() {
            return _tRG(__v_raw, "index", __v_raw.index, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("index")) {
                return
            }
            val oldValue = __v_raw.index
            __v_raw.index = value
            _tRS(__v_raw, "index", oldValue, value)
        }
    override var children: UTSArray<ClListViewItem>?
        get() {
            return _tRG(__v_raw, "children", __v_raw.children, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("children")) {
                return
            }
            val oldValue = __v_raw.children
            __v_raw.children = value
            _tRS(__v_raw, "children", oldValue, value)
        }
}
open class ClListViewGroup (
    @JsonNotNull
    open var index: String,
    @JsonNotNull
    open var children: UTSArray<ClListViewItem>,
) : UTSObject()
open class ClListViewVirtualItem (
    @JsonNotNull
    open var key: String,
    @JsonNotNull
    open var type: String,
    @JsonNotNull
    open var index: Number,
    @JsonNotNull
    open var top: Number,
    @JsonNotNull
    open var height: Number,
    @JsonNotNull
    open var data: ClListViewItem,
) : UTSObject()
typealias ClListViewRefresherStatus = String
typealias ClCascaderOption = ClListViewItem
typealias ClPopupDirection = String
typealias ClQrcodeMode = String
open class ClUploadItem (
    @JsonNotNull
    open var uid: String,
    @JsonNotNull
    open var preview: String,
    @JsonNotNull
    open var url: String,
    @JsonNotNull
    open var progress: Number,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return ClUploadItemReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class ClUploadItemReactiveObject : ClUploadItem, IUTSReactive<ClUploadItem> {
    override var __v_raw: ClUploadItem
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: ClUploadItem, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(uid = __v_raw.uid, preview = __v_raw.preview, url = __v_raw.url, progress = __v_raw.progress) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): ClUploadItemReactiveObject {
        return ClUploadItemReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var uid: String
        get() {
            return _tRG(__v_raw, "uid", __v_raw.uid, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("uid")) {
                return
            }
            val oldValue = __v_raw.uid
            __v_raw.uid = value
            _tRS(__v_raw, "uid", oldValue, value)
        }
    override var preview: String
        get() {
            return _tRG(__v_raw, "preview", __v_raw.preview, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("preview")) {
                return
            }
            val oldValue = __v_raw.preview
            __v_raw.preview = value
            _tRS(__v_raw, "preview", oldValue, value)
        }
    override var url: String
        get() {
            return _tRG(__v_raw, "url", __v_raw.url, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("url")) {
                return
            }
            val oldValue = __v_raw.url
            __v_raw.url = value
            _tRS(__v_raw, "url", oldValue, value)
        }
    override var progress: Number
        get() {
            return _tRG(__v_raw, "progress", __v_raw.progress, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("progress")) {
                return
            }
            val oldValue = __v_raw.progress
            __v_raw.progress = value
            _tRS(__v_raw, "progress", oldValue, value)
        }
}
open class ClSelectDateShortcut (
    @JsonNotNull
    open var label: String,
    @JsonNotNull
    open var value: UTSArray<String>,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return ClSelectDateShortcutReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class ClSelectDateShortcutReactiveObject : ClSelectDateShortcut, IUTSReactive<ClSelectDateShortcut> {
    override var __v_raw: ClSelectDateShortcut
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: ClSelectDateShortcut, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(label = __v_raw.label, value = __v_raw.value) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): ClSelectDateShortcutReactiveObject {
        return ClSelectDateShortcutReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var label: String
        get() {
            return _tRG(__v_raw, "label", __v_raw.label, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("label")) {
                return
            }
            val oldValue = __v_raw.label
            __v_raw.label = value
            _tRS(__v_raw, "label", oldValue, value)
        }
    override var value: UTSArray<String>
        get() {
            return _tRG(__v_raw, "value", __v_raw.value, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("value")) {
                return
            }
            val oldValue = __v_raw.value
            __v_raw.value = value
            _tRS(__v_raw, "value", oldValue, value)
        }
}
open class ClFormRule (
    open var required: Boolean? = null,
    open var message: String? = null,
    open var min: Number? = null,
    open var max: Number? = null,
    open var pattern: UTSRegExp? = null,
    open var validator: ((value: Any?) -> Any)? = null,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return ClFormRuleReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class ClFormRuleReactiveObject : ClFormRule, IUTSReactive<ClFormRule> {
    override var __v_raw: ClFormRule
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: ClFormRule, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(required = __v_raw.required, message = __v_raw.message, min = __v_raw.min, max = __v_raw.max, pattern = __v_raw.pattern, validator = __v_raw.validator) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): ClFormRuleReactiveObject {
        return ClFormRuleReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var required: Boolean?
        get() {
            return _tRG(__v_raw, "required", __v_raw.required, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("required")) {
                return
            }
            val oldValue = __v_raw.required
            __v_raw.required = value
            _tRS(__v_raw, "required", oldValue, value)
        }
    override var message: String?
        get() {
            return _tRG(__v_raw, "message", __v_raw.message, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("message")) {
                return
            }
            val oldValue = __v_raw.message
            __v_raw.message = value
            _tRS(__v_raw, "message", oldValue, value)
        }
    override var min: Number?
        get() {
            return _tRG(__v_raw, "min", __v_raw.min, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("min")) {
                return
            }
            val oldValue = __v_raw.min
            __v_raw.min = value
            _tRS(__v_raw, "min", oldValue, value)
        }
    override var max: Number?
        get() {
            return _tRG(__v_raw, "max", __v_raw.max, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("max")) {
                return
            }
            val oldValue = __v_raw.max
            __v_raw.max = value
            _tRS(__v_raw, "max", oldValue, value)
        }
    override var pattern: UTSRegExp?
        get() {
            return _tRG(__v_raw, "pattern", __v_raw.pattern, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("pattern")) {
                return
            }
            val oldValue = __v_raw.pattern
            __v_raw.pattern = value
            _tRS(__v_raw, "pattern", oldValue, value)
        }
}
open class ClFormValidateError (
    @JsonNotNull
    open var field: String,
    @JsonNotNull
    open var message: String,
) : UTSObject()
typealias ClFormLabelPosition = String
open class Config (
    open var fontSize: Number? = null,
    @JsonNotNull
    open var zIndex: Number,
    @JsonNotNull
    open var startDate: String,
    @JsonNotNull
    open var endDate: String,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return ConfigReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class ConfigReactiveObject : Config, IUTSReactive<Config> {
    override var __v_raw: Config
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: Config, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(fontSize = __v_raw.fontSize, zIndex = __v_raw.zIndex, startDate = __v_raw.startDate, endDate = __v_raw.endDate) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): ConfigReactiveObject {
        return ConfigReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var fontSize: Number?
        get() {
            return _tRG(__v_raw, "fontSize", __v_raw.fontSize, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("fontSize")) {
                return
            }
            val oldValue = __v_raw.fontSize
            __v_raw.fontSize = value
            _tRS(__v_raw, "fontSize", oldValue, value)
        }
    override var zIndex: Number
        get() {
            return _tRG(__v_raw, "zIndex", __v_raw.zIndex, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("zIndex")) {
                return
            }
            val oldValue = __v_raw.zIndex
            __v_raw.zIndex = value
            _tRS(__v_raw, "zIndex", oldValue, value)
        }
    override var startDate: String
        get() {
            return _tRG(__v_raw, "startDate", __v_raw.startDate, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("startDate")) {
                return
            }
            val oldValue = __v_raw.startDate
            __v_raw.startDate = value
            _tRS(__v_raw, "startDate", oldValue, value)
        }
    override var endDate: String
        get() {
            return _tRG(__v_raw, "endDate", __v_raw.endDate, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("endDate")) {
                return
            }
            val oldValue = __v_raw.endDate
            __v_raw.endDate = value
            _tRS(__v_raw, "endDate", oldValue, value)
        }
}
@JvmField
val config = reactive<Config>(Config(fontSize = null, zIndex = 600, startDate = "2000-01-01 00:00:00", endDate = "2050-12-31 23:59:59"))
open class ClIconPassThrough (
    open var className: String? = null,
) : UTSObject()
open class ClIconProps (
    open var className: String? = null,
    open var pt: ClIconPassThrough? = null,
    open var name: String? = null,
    open var size: Any? = null,
    open var height: Any? = null,
    open var width: Any? = null,
    open var color: String? = null,
) : UTSObject()
open class ClLoadingPassThrough (
    open var className: String? = null,
    open var icon: ClIconProps? = null,
) : UTSObject()
open class ClLoadingProps (
    open var className: String? = null,
    open var pt: ClLoadingPassThrough? = null,
    open var loading: Boolean? = null,
    open var size: Any? = null,
    open var color: String? = null,
) : UTSObject()
val demo: UTSJSONObject = object : UTSJSONObject() {
    var text = "f201"
    var `image-line` = "ee4b"
    var `price-tag-3-line` = "f023"
    var `price-tag-3-fill` = "f022"
    var `image-fill` = "ee4a"
    var `keyboard-box-line` = "ee73"
    var `keyboard-box-fill` = "ee72"
    var `input-field` = "f47a"
    var `qr-code-fill` = "f03c"
    var `barcode-line` = "eaa2"
    var `barcode-fill` = "eaa1"
    var `checkbox-line` = "eb85"
    var `checkbox-fill` = "eb82"
    var `radio-button-line` = "f050"
    var `radio-button-fill` = "f04f"
    var `equalizer-2-line` = "f405"
    var `equalizer-2-fill` = "f404"
    var `calendar-line` = "eb27"
    var `calendar-fill` = "eb26"
    var `calendar-schedule-fill` = "f3f2"
    var `calendar-schedule-line` = "f3f3"
    var `time-line` = "f20f"
    var `time-fill` = "f20e"
    var `toggle-line` = "f219"
    var `toggle-fill` = "f218"
    var `star-line` = "f18b"
    var `star-fill` = "f186"
    var `list-check` = "eeba"
    var `timeline-view` = "f46f"
    var `multi-image-line` = "f5ee"
    var `timer-fill` = "f212"
    var `timer-line` = "f215"
    var `progress-2-line` = "f47e"
    var `progress-2-fill` = "f47d"
    var `send-plane-line` = "f0da"
    var `send-plane-fill` = "f0d9"
    var `t-box-line` = "f1d3"
    var `t-box-fill` = "f1d2"
    var `edit-2-fill` = "ec7f"
    var `edit-2-line` = "ec80"
    var `layout-2-line` = "ee7f"
    var `layout-2-fill` = "ee7e"
    var `layout-column-fill` = "ee8c"
    var `layout-column-line` = "ee8d"
    var `mouse-line` = "ef7d"
    var `mouse-fill` = "ef7c"
    var `file-upload-line` = "ed15"
    var `file-upload-fill` = "ed14"
    var `page-separator` = "efbd"
    var `carousel-view` = "f42c"
    var `list-view` = "f44c"
    var `text-block` = "f46d"
    var `percent-line` = "efe6"
    var `percent-fill` = "efe5"
    var `navigation-line` = "ef89"
    var `navigation-fill` = "ef88"
    var `menu-line` = "ef3e"
    var `upload-line` = "f250"
    var `upload-fill` = "f24f"
    var `shield-check-fill` = "f0ff"
    var `shield-check-line` = "f100"
    var `loader-4-line` = "eec6"
    var `t-shirt-line` = "f1d9"
    var `t-shirt-fill` = "f1d8"
    var `add-circle-line` = "ea11"
    var `add-circle-fill` = "ea10"
    var `number-1` = "efa0"
    var `check-line` = "eb7b"
    var `check-fill` = "eb7a"
    var `checkbox-multiple-line` = "eb89"
    var `checkbox-multiple-fill` = "eb88"
    var `collapse-vertical-line` = "f52e"
    var `align-top` = "ea29"
    var `notification-badge-line` = "ef98"
    var `notification-badge-fill` = "ef97"
    var `input-method-line` = "ee60"
    var `input-method-fill` = "ee5f"
    var `text-snippet` = "f46e"
    var `window-2-line` = "f2c4"
    var `window-2-fill` = "f2c3"
    var `qr-code-line` = "f03d"
    var `message-2-line` = "ef44"
    var `message-2-fill` = "ef43"
    var `chat-check-line` = "eb55"
    var `chat-check-fill` = "eb54"
    var `chat-4-line` = "eb53"
    var `chat-4-fill` = "eb52"
    var `seo-line` = "f3a4"
    var `seo-fill` = "f3a3"
    var `crop-line` = "ec02"
    var `crop-fill` = "ec01"
    var `shadow-line` = "f45a"
    var `shadow-fill` = "f459"
    var `puzzle-2-line` = "f450"
    var `puzzle-2-fill` = "f44f"
    var `markdown-line` = "ef1e"
    var `markdown-fill` = "ef1d"
    var `stacked-view` = "f464"
    var `dropdown-list` = "f3c3"
    var `increase-decrease-line` = "ee53"
    var `increase-decrease-fill` = "ee52"
    var `timer-2-line` = "f211"
    var `timer-2-fill` = "f210"
    var `parent-line` = "efca"
    var `parent-fill` = "efc9"
    var `function-add-line` = "f4df"
    var `function-add-fill` = "f4de"
    var `error-warning-line` = "eca1"
    var `error-warning-fill` = "eca0"
    var `arrow-up-box-line` = "f562"
    var `arrow-up-box-fill` = "f561"
    var `layout-bottom-fill` = "ee8a"
    var `layout-right-fill` = "ee9a"
    var `layout-right-line` = "ee9b"
    var `layout-top-fill` = "eea0"
    var `layout-top-line` = "eea1"
    var `layout-left-line` = "ee94"
    var `layout-left-fill` = "ee93"
    var `layout-top-2-line` = "ee9f"
    var `layout-top-2-fill` = "ee9e"
    var `layout-right-2-line` = "ee99"
    var `layout-right-2-fill` = "ee98"
    var `layout-bottom-2-line` = "ee89"
    var `layout-bottom-2-fill` = "ee88"
    var `layout-left-2-line` = "ee92"
    var `layout-left-2-fill` = "ee91"
    var `layout-row-fill` = "ee9c"
    var `layout-row-line` = "ee9d"
    var `table-fill` = "f1dd"
    var `table-line` = "f1de"
    var `layout-bottom-line` = "ee8b"
    var `picture-in-picture-line` = "eff4"
    var `picture-in-picture-fill` = "eff3"
}
val iconfont: UTSJSONObject = object : UTSJSONObject() {
    var back = "e6db"
    var yue = "e6bb"
    var wancheng = "e6bc"
    var shibai = "e6bd"
    var bofang = "e6be"
    var pinglun = "e6bf"
    var huatong = "e6c0"
    var dianzan = "e6c1"
    var fuli = "e6c2"
    var jiudian = "e6c3"
    var tupian = "e6c5"
    var dingwei = "e6c6"
    var vip = "e6c8"
    var yunduan = "e6c9"
    var naozhong = "e6ca"
    var jiaoliu = "e6cb"
    var shouru = "e6cc"
    var zhichu = "e6cd"
    var shijian = "e6ce"
    var paizhao = "e6cf"
    var qiche = "e6d0"
    var shuipiao = "e6d1"
    var dingyue = "e6d2"
    var kefu_2 = "e6d3"
    var tuichudenglu = "e6d4"
    var pinglun_2 = "e6d5"
    var qianbao = "e6d6"
    var sousuo_2 = "e6d7"
    var youhuiquan = "e6d8"
    var gouwudai = "e6ea"
    var guanli = "e6fd"
    var qianbi = "e70d"
    var huangguan = "e712"
}
val remixicon: UTSJSONObject = object : UTSJSONObject() {
    var `arrow-left-up-line` = "ea66"
    var `arrow-up-line` = "ea76"
    var `arrow-right-up-line` = "ea70"
    var `arrow-right-line` = "ea6c"
    var `arrow-right-down-line` = "ea6a"
    var `arrow-down-line` = "ea4c"
    var `arrow-left-down-line` = "ea5e"
    var `arrow-left-line` = "ea60"
    var `arrow-up-circle-line` = "ea72"
    var `arrow-right-circle-line` = "ea68"
    var `arrow-down-circle-line` = "ea4a"
    var `arrow-left-circle-line` = "ea5c"
    var `arrow-up-circle-fill` = "ea71"
    var `arrow-right-circle-fill` = "ea67"
    var `arrow-down-circle-fill` = "ea49"
    var `arrow-left-circle-fill` = "ea5b"
    var `arrow-up-s-line` = "ea78"
    var `arrow-right-s-line` = "ea6e"
    var `arrow-down-s-line` = "ea4e"
    var `arrow-left-s-line` = "ea64"
    var `arrow-left-s-fill` = "ea63"
    var `arrow-down-s-fill` = "ea4d"
    var `arrow-right-s-fill` = "ea6d"
    var `arrow-up-s-fill` = "ea77"
    var `arrow-up-down-line` = "ea74"
    var `arrow-left-right-line` = "ea62"
    var `arrow-right-double-line` = "f2e5"
    var `arrow-up-double-line` = "f2eb"
    var `skip-up-line` = "f367"
    var `expand-up-down-line` = "f327"
    var `expand-left-right-line` = "f323"
    var `expand-left-line` = "f321"
    var `expand-right-line` = "f325"
    var `arrow-go-back-line` = "ea58"
    var `arrow-go-forward-line` = "ea5a"
    var `home-2-line` = "ee19"
    var `home-2-fill` = "ee18"
    var `store-2-line` = "f1a5"
    var `store-2-fill` = "f1a4"
    var `store-3-fill` = "f1a6"
    var `store-3-line` = "f1a7"
    var `ancient-pavilion-line` = "ea34"
    var `ancient-pavilion-fill` = "ea33"
    var `tent-line` = "f3df"
    var `tent-fill` = "f3de"
    var `hospital-fill` = "ee36"
    var `hospital-line` = "ee37"
    var `ancient-gate-line` = "ea32"
    var `ancient-gate-fill` = "ea31"
    var `mail-line` = "eef6"
    var `mail-fill` = "eef3"
    var `mail-send-line` = "eefc"
    var `mail-send-fill` = "eefb"
    var `mail-unread-fill` = "ef01"
    var `mail-unread-line` = "ef02"
    var `mail-add-fill` = "eeeb"
    var `mail-add-line` = "eeec"
    var `mail-ai-line` = "f585"
    var `mail-ai-fill` = "f584"
    var `inbox-line` = "ee4f"
    var `inbox-fill` = "ee4e"
    var `inbox-archive-line` = "ee4d"
    var `inbox-archive-fill` = "ee4c"
    var `inbox-unarchive-line` = "ee51"
    var `inbox-unarchive-fill` = "ee50"
    var `cloud-line` = "eb9d"
    var `cloud-fill` = "eb9c"
    var `cloud-off-line` = "eb9f"
    var `cloud-off-fill` = "eb9e"
    var `archive-line` = "ea48"
    var `archive-fill` = "ea47"
    var `profile-fill` = "f02c"
    var `profile-line` = "f02d"
    var `award-line` = "ea8a"
    var `award-fill` = "ea89"
    var `at-line` = "ea83"
    var `at-fill` = "ea82"
    var `medal-fill` = "ef27"
    var `medal-line` = "ef28"
    var `verified-badge-line` = "f3e9"
    var `verified-badge-fill` = "f3e8"
    var `bar-chart-line` = "ea9e"
    var `bar-chart-horizontal-line` = "ea9d"
    var `bar-chart-2-line` = "ea96"
    var `pie-chart-line` = "effa"
    var `bubble-chart-line` = "eb03"
    var `bar-chart-grouped-line` = "ea9b"
    var `donut-chart-line` = "ec42"
    var `line-chart-line` = "eeab"
    var `bookmark-fill` = "eae4"
    var `bookmark-line` = "eae5"
    var `briefcase-fill` = "eaf4"
    var `briefcase-line` = "eaf5"
    var `donut-chart-fill` = "ec41"
    var `line-chart-fill` = "eeaa"
    var `calendar-line` = "eb27"
    var `calendar-fill` = "eb26"
    var `calculator-fill` = "eb1e"
    var `calculator-line` = "eb1f"
    var `customer-service-line` = "ec0e"
    var `customer-service-fill` = "ec0d"
    var `flag-fill` = "ed3a"
    var `flag-line` = "ed3b"
    var `flag-off-line` = "f577"
    var `flag-off-fill` = "f576"
    var `global-line` = "edcf"
    var `global-fill` = "edce"
    var `links-fill` = "eeb7"
    var `links-line` = "eeb8"
    var `printer-line` = "f029"
    var `printer-fill` = "f028"
    var `reply-line` = "f07a"
    var `reply-fill` = "f079"
    var `send-plane-line` = "f0da"
    var `send-plane-fill` = "f0d9"
    var `slideshow-fill` = "f157"
    var `slideshow-line` = "f158"
    var `window-line` = "f2c6"
    var `window-fill` = "f2c5"
    var `stack-fill` = "f180"
    var `stack-line` = "f181"
    var `service-fill` = "f0e1"
    var `service-line` = "f0e2"
    var `registered-fill` = "f069"
    var `registered-line` = "f06a"
    var `trademark-fill` = "f21e"
    var `trademark-line` = "f21f"
    var `advertisement-fill` = "ea16"
    var `advertisement-line` = "ea17"
    var `copyright-line` = "ebe2"
    var `copyright-fill` = "ebe1"
    var `creative-commons-nd-line` = "ebf8"
    var `creative-commons-nd-fill` = "ebf7"
    var `id-card-line` = "f4e9"
    var `id-card-fill` = "f4e8"
    var `info-card-line` = "f57f"
    var `info-card-fill` = "f57e"
    var `pass-pending-fill` = "f388"
    var `pass-pending-line` = "f389"
    var `pass-expired-fill` = "f386"
    var `pass-expired-line` = "f387"
    var `pass-valid-fill` = "f38a"
    var `pass-valid-line` = "f38b"
    var `megaphone-fill` = "f384"
    var `megaphone-line` = "f385"
    var `creative-commons-by-fill` = "ebf1"
    var `creative-commons-by-line` = "ebf2"
    var `creative-commons-fill` = "ebf3"
    var `creative-commons-line` = "ebf4"
    var `creative-commons-nc-line` = "ebf6"
    var `creative-commons-nc-fill` = "ebf5"
    var `copyleft-fill` = "ebdf"
    var `copyleft-line` = "ebe0"
    var `message-2-line` = "ef44"
    var `message-2-fill` = "ef43"
    var `chat-check-line` = "eb55"
    var `chat-check-fill` = "eb54"
    var `chat-unread-fill` = "f529"
    var `chat-unread-line` = "f52a"
    var `chat-new-line` = "eb63"
    var `chat-new-fill` = "eb62"
    var `chat-delete-fill` = "eb56"
    var `chat-delete-line` = "eb57"
    var `message-fill` = "ef47"
    var `message-line` = "ef48"
    var `chat-4-line` = "eb53"
    var `chat-4-fill` = "eb52"
    var `chat-settings-fill` = "eb6c"
    var `chat-settings-line` = "eb6d"
    var `chat-download-fill` = "eb58"
    var `chat-download-line` = "eb59"
    var `chat-upload-line` = "eb75"
    var `chat-upload-fill` = "eb74"
    var `chat-forward-fill` = "eb5c"
    var `chat-forward-line` = "eb5d"
    var `chat-heart-line` = "eb5f"
    var `chat-heart-fill` = "eb5e"
    var `chat-off-line` = "eb65"
    var `chat-off-fill` = "eb64"
    var `feedback-line` = "ecc1"
    var `feedback-fill` = "ecc0"
    var `question-answer-line` = "f043"
    var `question-answer-fill` = "f042"
    var `questionnaire-line` = "f048"
    var `questionnaire-fill` = "f047"
    var `speak-fill` = "f36e"
    var `speak-line` = "f36f"
    var `chat-thread-line` = "f473"
    var `chat-thread-fill` = "f472"
    var `chat-history-fill` = "eb60"
    var `chat-history-line` = "eb61"
    var `chat-private-line` = "eb69"
    var `chat-private-fill` = "eb68"
    var `emoji-sticker-line` = "f37f"
    var `emoji-sticker-fill` = "f37e"
    var `edit-line` = "ec86"
    var `edit-fill` = "ec85"
    var `markup-line` = "ef20"
    var `markup-fill` = "ef1f"
    var `edit-box-fill` = "ec81"
    var `edit-box-line` = "ec82"
    var `computer-line` = "ebca"
    var `computer-fill` = "ebc9"
    var `tv-line` = "f237"
    var `tv-fill` = "f236"
    var `smartphone-line` = "f15a"
    var `smartphone-fill` = "f159"
    var `device-fill` = "ec2d"
    var `device-line` = "ec2e"
    var `phone-line` = "efec"
    var `phone-fill` = "efe9"
    var `instance-fill` = "f382"
    var `instance-line` = "f383"
    var `database-2-line` = "ec16"
    var `database-2-fill` = "ec15"
    var `keyboard-box-fill` = "ee72"
    var `keyboard-box-line` = "ee73"
    var `shut-down-line` = "f126"
    var `shut-down-fill` = "f125"
    var `fingerprint-line` = "ed31"
    var `fingerprint-fill` = "ed30"
    var `barcode-box-line` = "eaa0"
    var `barcode-box-fill` = "ea9f"
    var `qr-code-line` = "f03d"
    var `qr-code-fill` = "f03c"
    var `qr-scan-fill` = "f040"
    var `qr-scan-line` = "f041"
    var `draft-line` = "ec5c"
    var `draft-fill` = "ec5b"
    var `file-paper-line` = "ecfb"
    var `file-paper-fill` = "ecfa"
    var `file-line` = "eceb"
    var `file-fill` = "ece0"
    var `sticky-note-fill` = "f19a"
    var `sticky-note-line` = "f19b"
    var `file-edit-line` = "ecdb"
    var `file-edit-fill` = "ecda"
    var `file-copy-fill` = "ecd4"
    var `file-copy-line` = "ecd5"
    var `bill-fill` = "eac1"
    var `bill-line` = "eac2"
    var `article-fill` = "ea7d"
    var `article-line` = "ea7e"
    var `survey-fill` = "f1c6"
    var `survey-line` = "f1c7"
    var `clipboard-line` = "eb91"
    var `clipboard-fill` = "eb90"
    var `news-fill` = "f417"
    var `news-line` = "f418"
    var `file-zip-fill` = "ed1e"
    var `file-zip-line` = "ed1f"
    var `todo-fill` = "f216"
    var `todo-line` = "f217"
    var `book-marked-line` = "ead9"
    var `book-marked-fill` = "ead8"
    var `task-fill` = "f1e7"
    var `task-line` = "f1e8"
    var `double-quotes-l` = "ec51"
    var `double-quotes-r` = "ec52"
    var `single-quotes-l` = "f13b"
    var `single-quotes-r` = "f13c"
    var `list-check` = "eeba"
    var `list-ordered` = "eebb"
    var `list-radio` = "f39b"
    var `sort-asc` = "f15f"
    var `sort-desc` = "f160"
    var `send-backward` = "f0d6"
    var `bring-forward` = "eaf6"
    var `wallet-line` = "f2ae"
    var `wallet-fill` = "f2ad"
    var `bank-card-line` = "ea92"
    var `bank-card-fill` = "ea91"
    var `refund-line` = "f068"
    var `refund-fill` = "f067"
    var `safe-fill` = "f0aa"
    var `safe-line` = "f0ab"
    var `price-tag-line` = "f025"
    var `price-tag-fill` = "f024"
    var `ticket-line` = "f20d"
    var `ticket-fill` = "f20c"
    var `coupon-line` = "ebee"
    var `coupon-fill` = "ebed"
    var `shopping-bag-line` = "f118"
    var `shopping-bag-fill` = "f117"
    var `shopping-cart-line` = "f120"
    var `shopping-cart-fill` = "f11f"
    var `vip-line` = "f292"
    var `vip-fill` = "f291"
    var `vip-crown-2-line` = "f28c"
    var `vip-crown-2-fill` = "f28b"
    var `vip-diamond-fill` = "f28f"
    var `vip-diamond-line` = "f290"
    var `exchange-fill` = "ecaa"
    var `exchange-line` = "ecad"
    var `trophy-fill` = "f22e"
    var `trophy-line` = "f22f"
    var `swap-line` = "f1cb"
    var `swap-fill` = "f1ca"
    var `exchange-cny-line` = "eca7"
    var `exchange-dollar-line` = "eca9"
    var `exchange-funds-line` = "ecac"
    var `copper-coin-line` = "ebdc"
    var `copper-coin-fill` = "ebdb"
    var `money-cny-box-line` = "ef5f"
    var `money-cny-box-fill` = "ef5e"
    var `money-cny-circle-line` = "ef61"
    var `money-cny-circle-fill` = "ef60"
    var `money-dollar-circle-line` = "ef65"
    var `money-dollar-circle-fill` = "ef64"
    var `increase-decrease-fill` = "ee52"
    var `increase-decrease-line` = "ee53"
    var `red-packet-fill` = "f05f"
    var `red-packet-line` = "f060"
    var `auction-fill` = "ea87"
    var `auction-line` = "ea88"
    var `gift-line` = "edbb"
    var `gift-fill` = "edba"
    var `24-hours-line` = "ea02"
    var `nft-line` = "f347"
    var `nft-fill` = "f346"
    var `heart-fill` = "ee0e"
    var `heart-line` = "ee0f"
    var `heart-add-line` = "ee0d"
    var `heart-add-fill` = "ee0c"
    var `rest-time-fill` = "f07d"
    var `rest-time-line` = "f07e"
    var `apple-line` = "ea40"
    var `apple-fill` = "ea3f"
    var `alipay-fill` = "ea2b"
    var `alipay-line` = "ea2c"
    var `wechat-fill` = "f2b5"
    var `wechat-line` = "f2b6"
    var `wechat-pay-line` = "f2b8"
    var `wechat-pay-fill` = "f2b7"
    var `mini-program-fill` = "ef5a"
    var `mini-program-line` = "ef5b"
    var `android-line` = "ea36"
    var `android-fill` = "ea35"
    var `map-pin-line` = "ef14"
    var `map-pin-fill` = "ef13"
    var `map-pin-time-fill` = "ef17"
    var `map-pin-time-line` = "ef18"
    var `pushpin-fill` = "f038"
    var `pushpin-line` = "f039"
    var `unpin-line` = "f377"
    var `unpin-fill` = "f376"
    var `compass-fill` = "ebc3"
    var `compass-line` = "ebc4"
    var `earth-line` = "ec7a"
    var `earth-fill` = "ec79"
    var `parking-box-fill` = "efcd"
    var `parking-box-line` = "efce"
    var `navigation-fill` = "ef88"
    var `navigation-line` = "ef89"
    var `image-line` = "ee4b"
    var `image-fill` = "ee4a"
    var `multi-image-line` = "f5ee"
    var `multi-image-fill` = "f5ed"
    var `video-on-line` = "f51e"
    var `video-on-fill` = "f51d"
    var `clapperboard-line` = "eb8f"
    var `clapperboard-fill` = "eb8e"
    var `film-fill` = "ed20"
    var `film-line` = "ed21"
    var `movie-fill` = "ef80"
    var `movie-line` = "ef81"
    var `live-line` = "eec0"
    var `live-fill` = "eebf"
    var `vidicon-line` = "f288"
    var `vidicon-fill` = "f287"
    var `video-off-line` = "f51c"
    var `video-off-fill` = "f51b"
    var `camera-fill` = "eb2e"
    var `camera-line` = "eb31"
    var `camera-off-fill` = "eb32"
    var `camera-off-line` = "eb33"
    var `camera-lens-fill` = "eb2f"
    var `camera-lens-line` = "eb30"
    var `mv-line` = "ef87"
    var `mv-fill` = "ef86"
    var `music-2-fill` = "ef82"
    var `music-2-line` = "ef83"
    var `headphone-fill` = "ee04"
    var `headphone-line` = "ee05"
    var `mic-line` = "ef50"
    var `mic-fill` = "ef4f"
    var `mic-off-line` = "ef52"
    var `mic-off-fill` = "ef51"
    var `volume-down-fill` = "f29b"
    var `volume-down-line` = "f29c"
    var `volume-mute-line` = "f29e"
    var `volume-mute-fill` = "f29d"
    var `notification-4-line` = "ef96"
    var `notification-4-fill` = "ef95"
    var `notification-off-fill` = "ef9b"
    var `notification-off-line` = "ef9c"
    var `play-circle-line` = "f009"
    var `play-circle-fill` = "f008"
    var `pause-circle-line` = "efd6"
    var `pause-circle-fill` = "efd5"
    var `record-circle-line` = "f05a"
    var `record-circle-fill` = "f059"
    var `stop-circle-fill` = "f19e"
    var `stop-circle-line` = "f19f"
    var `fullscreen-line` = "ed9c"
    var `fullscreen-exit-line` = "ed9a"
    var `equalizer-2-line` = "f405"
    var `equalizer-2-fill` = "f404"
    var `apps-line` = "ea44"
    var `apps-fill` = "ea43"
    var `function-line` = "ed9e"
    var `function-fill` = "ed9d"
    var `dashboard-horizontal-line` = "f4ce"
    var `dashboard-horizontal-fill` = "f4cd"
    var `menu-line` = "ef3e"
    var `menu-add-line` = "ef3a"
    var `star-line` = "f18b"
    var `star-fill` = "f186"
    var `star-off-line` = "f59b"
    var `star-off-fill` = "f59a"
    var `more-line` = "ef79"
    var `more-fill` = "ef78"
    var `more-2-line` = "ef77"
    var `more-2-fill` = "ef76"
    var `settings-fill` = "f0ed"
    var `settings-line` = "f0ee"
    var `forbid-fill` = "ed94"
    var `forbid-line` = "ed95"
    var `prohibited-line` = "f3a1"
    var `prohibited-fill` = "f3a0"
    var `information-2-line` = "f449"
    var `information-2-fill` = "f448"
    var `error-warning-fill` = "eca0"
    var `error-warning-line` = "eca1"
    var `question-fill` = "f044"
    var `question-line` = "f045"
    var `checkbox-blank-circle-line` = "eb7d"
    var `checkbox-blank-circle-fill` = "eb7c"
    var `checkbox-circle-fill` = "eb80"
    var `checkbox-circle-line` = "eb81"
    var `checkbox-blank-line` = "eb7f"
    var `checkbox-blank-fill` = "eb7e"
    var `checkbox-line` = "eb85"
    var `checkbox-fill` = "eb82"
    var `add-circle-line` = "ea11"
    var `add-circle-fill` = "ea10"
    var `indeterminate-circle-fill` = "ee56"
    var `indeterminate-circle-line` = "ee57"
    var `close-circle-line` = "eb97"
    var `close-circle-fill` = "eb96"
    var `radio-button-line` = "f050"
    var `radio-button-fill` = "f04f"
    var `check-line` = "eb7b"
    var `close-line` = "eb99"
    var `add-line` = "ea13"
    var `subtract-line` = "f1af"
    var `divide-line` = "ec40"
    var `equal-line` = "f31f"
    var `upload-line` = "f250"
    var `download-line` = "ec5a"
    var `upload-cloud-2-line` = "f24c"
    var `upload-cloud-2-fill` = "f24b"
    var `download-cloud-2-line` = "ec56"
    var `download-cloud-2-fill` = "ec55"
    var `login-box-line` = "eed4"
    var `login-box-fill` = "eed3"
    var `shield-cross-line` = "f102"
    var `shield-cross-fill` = "f101"
    var `shield-check-fill` = "f0ff"
    var `shield-check-line` = "f100"
    var `delete-bin-fill` = "ec29"
    var `delete-bin-line` = "ec2a"
    var `lock-line` = "eece"
    var `lock-fill` = "eecd"
    var `lock-unlock-line` = "eed2"
    var `lock-unlock-fill` = "eed1"
    var `lock-password-line` = "eed0"
    var `lock-password-fill` = "eecf"
    var `eye-fill` = "ecb4"
    var `eye-line` = "ecb5"
    var `eye-off-line` = "ecb7"
    var `eye-off-fill` = "ecb6"
    var `search-line` = "f0d1"
    var `search-fill` = "f0d0"
    var `share-line` = "f0fe"
    var `share-fill` = "f0f7"
    var `share-box-line` = "f0f4"
    var `share-box-fill` = "f0f3"
    var `share-circle-line` = "f0f6"
    var `share-circle-fill` = "f0f5"
    var `time-fill` = "f20e"
    var `time-line` = "f20f"
    var `thumb-up-line` = "f207"
    var `thumb-up-fill` = "f206"
    var `notification-badge-fill` = "ef97"
    var `notification-badge-line` = "ef98"
    var `toggle-line` = "f219"
    var `toggle-fill` = "f218"
    var `filter-line` = "ed27"
    var `filter-fill` = "ed26"
    var `history-line` = "ee17"
    var `loop-left-line` = "f33d"
    var `loader-2-line` = "eec2"
    var `loader-4-line` = "eec6"
    var `reset-right-line` = "f544"
    var `loader-fill` = "eec9"
    var `user-3-line` = "f256"
    var `user-3-fill` = "f255"
    var `sun-fill` = "f1bc"
    var `sun-line` = "f1bf"
    var `moon-fill` = "ef72"
    var `moon-line` = "ef75"
    var `shining-line` = "f35e"
    var `shining-fill` = "f35d"
    var `fire-fill` = "ed32"
    var `fire-line` = "ed33"
    var `sparkling-line` = "f36d"
    var `sparkling-fill` = "f36c"
    var `box-1-line` = "f2f1"
    var `box-1-fill` = "f2f0"
    var `account-box-line` = "ea07"
    var `account-box-fill` = "ea06"
    var `account-circle-fill` = "ea08"
    var `account-circle-line` = "ea09"
    var `account-pin-box-fill` = "ea0a"
    var `account-pin-box-line` = "ea0b"
    var `skip-up-fill` = "f366"
    var `arrow-left-right-fill` = "ea61"
    var `arrow-up-down-fill` = "ea73"
    var `arrow-up-double-fill` = "f2ea"
    var `arrow-right-double-fill` = "f2e4"
    var `expand-left-fill` = "f320"
    var `expand-right-fill` = "f324"
    var `expand-up-down-fill` = "f326"
    var `expand-left-right-fill` = "f322"
    var `arrow-go-back-fill` = "ea57"
    var `arrow-go-forward-fill` = "ea59"
    var `contract-left-line` = "f2fd"
    var `contract-right-line` = "f301"
    var `contract-right-fill` = "f300"
    var `contract-left-fill` = "f2fc"
    var `drag-move-line` = "ec62"
    var `drag-move-fill` = "ec61"
    var `home-line` = "ee2b"
    var `home-fill` = "ee26"
    var `mail-open-line` = "eefa"
    var `mail-open-fill` = "eef9"
    var `attachment-line` = "ea86"
    var `attachment-fill` = "ea85"
    var `bar-chart-fill` = "ea99"
    var `bar-chart-horizontal-fill` = "ea9c"
    var `bar-chart-2-fill` = "ea95"
    var `bar-chart-grouped-fill` = "ea9a"
    var `bubble-chart-fill` = "eb02"
    var `pie-chart-fill` = "eff9"
    var `calendar-schedule-line` = "f3f3"
    var `calendar-schedule-fill` = "f3f2"
    var `calendar-todo-line` = "eb29"
    var `calendar-todo-fill` = "eb28"
    var `calendar-event-fill` = "eb24"
    var `calendar-event-line` = "eb25"
    var `calendar-close-fill` = "f38d"
    var `calendar-check-fill` = "eb22"
    var `calendar-check-line` = "eb23"
    var `calendar-close-line` = "f38e"
    var `message-3-line` = "ef46"
    var `message-3-fill` = "ef45"
    var `chat-3-fill` = "eb50"
    var `chat-3-line` = "eb51"
    var `chat-1-fill` = "eb4c"
    var `chat-1-line` = "eb4d"
    var `chat-2-fill` = "eb4e"
    var `chat-2-line` = "eb4f"
    var `crop-line` = "ec02"
    var `crop-fill` = "ec01"
    var `palette-line` = "efc5"
    var `palette-fill` = "efc4"
    var `anticlockwise-line` = "ea3c"
    var `anticlockwise-fill` = "ea3b"
    var `clockwise-line` = "eb95"
    var `clockwise-fill` = "eb94"
    var `code-s-slash-fill` = "ebac"
    var `code-s-slash-line` = "ebad"
    var `puzzle-fill` = "f451"
    var `puzzle-line` = "f452"
    var `server-fill` = "f0df"
    var `server-line` = "f0e0"
    var `qr-scan-2-fill` = "f03e"
    var `qr-scan-2-line` = "f03f"
    var `scan-line` = "f0bd"
    var `scan-fill` = "f0bc"
    var `phone-find-fill` = "efea"
    var `phone-find-line` = "efeb"
    var `barcode-line` = "eaa2"
    var `barcode-fill` = "eaa1"
    var `file-list-fill` = "ecf0"
    var `file-list-line` = "ecf1"
    var `file-text-line` = "ed0f"
    var `file-text-fill` = "ed0e"
    var `book-fill` = "ead6"
    var `book-line` = "ead7"
    var text = "f201"
    var `font-family` = "f390"
    var link = "eeb2"
    var translate = "f227"
    var `copper-diamond-fill` = "ebdd"
    var `copper-diamond-line` = "ebde"
    var `dislike-fill` = "ec3b"
    var `dislike-line` = "ec3c"
    var `heart-3-fill` = "ee0a"
    var `heart-3-line` = "ee0b"
    var `hearts-fill` = "ee12"
    var `hearts-line` = "ee13"
    var `map-line` = "ef08"
    var `map-fill` = "ef07"
    var `image-circle-fill` = "f412"
    var `image-circle-line` = "f413"
    var `image-edit-fill` = "ee48"
    var `image-edit-line` = "ee49"
    var `image-add-line` = "ee47"
    var `image-add-fill` = "ee46"
    var `landscape-line` = "ee7d"
    var `landscape-fill` = "ee7c"
    var `check-double-line` = "eb79"
    var `check-double-fill` = "eb78"
    var `close-fill` = "eb98"
    var `add-fill` = "ea12"
    var `subtract-fill` = "f1ae"
    var `divide-fill` = "ec3f"
    var `equal-fill` = "f31e"
    var `logout-circle-line` = "eedc"
    var `logout-circle-fill` = "eedb"
    var `shield-fill` = "f103"
    var `shield-line` = "f108"
    var `timer-line` = "f215"
    var `timer-fill` = "f212"
    var `delete-back-2-line` = "ec1a"
    var `delete-back-2-fill` = "ec19"
    var `volume-vibrate-line` = "f2a4"
    var `volume-vibrate-fill` = "f2a3"
    var `volume-off-vibrate-line` = "f2a0"
    var `volume-off-vibrate-fill` = "f29f"
    var `truck-line` = "f231"
    var `truck-fill` = "f230"
    var `flight-takeoff-line` = "ed43"
    var `flight-takeoff-fill` = "ed42"
    var `road-map-line` = "f08e"
    var `road-map-fill` = "f08d"
    var `pushpin-2-line` = "f037"
    var `pushpin-2-fill` = "f036"
    var `map-pin-2-line` = "ef0a"
    var `map-pin-2-fill` = "ef09"
    var `compass-discover-line` = "ebc2"
    var `compass-discover-fill` = "ebc1"
    var `signpost-fill` = "f48d"
    var `signpost-line` = "f48e"
    var `qq-line` = "f03b"
    var `qq-fill` = "f03a"
    var `tiktok-line` = "f373"
    var `tiktok-fill` = "f372"
    var `user-smile-line` = "f274"
    var `user-smile-fill` = "f273"
    var `user-line` = "f264"
    var `user-fill` = "f25f"
    var `user-add-fill` = "f25d"
    var `user-add-line` = "f25e"
    var `user-minus-line` = "f54c"
    var `user-minus-fill` = "f54b"
    var `user-follow-fill` = "f260"
    var `user-follow-line` = "f261"
    var `user-unfollow-line` = "f278"
    var `user-unfollow-fill` = "f277"
    var `user-shared-fill` = "f271"
    var `user-shared-line` = "f272"
    var `user-received-fill` = "f269"
    var `user-received-line` = "f26a"
    var `user-search-line` = "f26c"
    var `user-search-fill` = "f26b"
    var `user-location-line` = "f266"
    var `user-location-fill` = "f265"
    var `user-star-line` = "f276"
    var `user-star-fill` = "f275"
    var `user-settings-fill` = "f26d"
    var `user-settings-line` = "f26e"
    var `user-heart-line` = "f263"
    var `user-heart-fill` = "f262"
    var `user-forbid-line` = "f3be"
    var `user-forbid-fill` = "f3bd"
    var `group-fill` = "ede2"
    var `group-line` = "ede3"
    var `user-2-fill` = "f253"
    var `user-2-line` = "f254"
    var `shield-user-line` = "f10c"
    var `shield-user-fill` = "f10b"
    var `circle-line` = "f3c2"
    var `circle-fill` = "f3c1"
    var sketching = "f35f"
    var `align-bottom` = "ea24"
    var `restart-line` = "f080"
    var `restart-fill` = "f07f"
    var `refresh-line` = "f064"
    var `refresh-fill` = "f063"
    var `reset-left-line` = "f542"
    var `reset-left-fill` = "f541"
    var `skip-down-line` = "f361"
    var `skip-down-fill` = "f360"
    var `skip-right-line` = "f365"
    var `skip-right-fill` = "f364"
    var `skip-left-fill` = "f362"
    var `skip-left-line` = "f363"
    var `text-snippet` = "f46e"
    var `input-method-line` = "ee60"
    var `input-method-fill` = "ee5f"
    var `font-size` = "ed8d"
    var `font-size-2` = "ed8c"
    var `font-color` = "ed8b"
}
val icons: UTSJSONObject = _uO("demo" to demo, "iconfont" to iconfont, "remixicon" to remixicon)
open class UserAddressEntity (
    open var id: Number? = null,
    open var userId: Number? = null,
    open var contact: String? = null,
    open var phone: String? = null,
    open var province: String? = null,
    open var city: String? = null,
    open var district: String? = null,
    open var address: String? = null,
    open var isDefault: Boolean? = null,
    open var createTime: String? = null,
    open var updateTime: String? = null,
) : UTSObject()
open class UserInfoEntity (
    open var id: Number? = null,
    open var unionid: String? = null,
    open var avatarUrl: String? = null,
    open var nickName: String? = null,
    open var phone: String? = null,
    open var gender: Number? = null,
    open var status: Number? = null,
    open var loginType: Number? = null,
    open var password: String? = null,
    open var description: String? = null,
    open var birthday: String? = null,
    open var province: String? = null,
    open var city: String? = null,
    open var district: String? = null,
    open var createTime: String? = null,
    open var updateTime: String? = null,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return UserInfoEntityReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class UserInfoEntityReactiveObject : UserInfoEntity, IUTSReactive<UserInfoEntity> {
    override var __v_raw: UserInfoEntity
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: UserInfoEntity, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(id = __v_raw.id, unionid = __v_raw.unionid, avatarUrl = __v_raw.avatarUrl, nickName = __v_raw.nickName, phone = __v_raw.phone, gender = __v_raw.gender, status = __v_raw.status, loginType = __v_raw.loginType, password = __v_raw.password, description = __v_raw.description, birthday = __v_raw.birthday, province = __v_raw.province, city = __v_raw.city, district = __v_raw.district, createTime = __v_raw.createTime, updateTime = __v_raw.updateTime) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UserInfoEntityReactiveObject {
        return UserInfoEntityReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var id: Number?
        get() {
            return _tRG(__v_raw, "id", __v_raw.id, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("id")) {
                return
            }
            val oldValue = __v_raw.id
            __v_raw.id = value
            _tRS(__v_raw, "id", oldValue, value)
        }
    override var unionid: String?
        get() {
            return _tRG(__v_raw, "unionid", __v_raw.unionid, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("unionid")) {
                return
            }
            val oldValue = __v_raw.unionid
            __v_raw.unionid = value
            _tRS(__v_raw, "unionid", oldValue, value)
        }
    override var avatarUrl: String?
        get() {
            return _tRG(__v_raw, "avatarUrl", __v_raw.avatarUrl, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("avatarUrl")) {
                return
            }
            val oldValue = __v_raw.avatarUrl
            __v_raw.avatarUrl = value
            _tRS(__v_raw, "avatarUrl", oldValue, value)
        }
    override var nickName: String?
        get() {
            return _tRG(__v_raw, "nickName", __v_raw.nickName, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("nickName")) {
                return
            }
            val oldValue = __v_raw.nickName
            __v_raw.nickName = value
            _tRS(__v_raw, "nickName", oldValue, value)
        }
    override var phone: String?
        get() {
            return _tRG(__v_raw, "phone", __v_raw.phone, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("phone")) {
                return
            }
            val oldValue = __v_raw.phone
            __v_raw.phone = value
            _tRS(__v_raw, "phone", oldValue, value)
        }
    override var gender: Number?
        get() {
            return _tRG(__v_raw, "gender", __v_raw.gender, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("gender")) {
                return
            }
            val oldValue = __v_raw.gender
            __v_raw.gender = value
            _tRS(__v_raw, "gender", oldValue, value)
        }
    override var status: Number?
        get() {
            return _tRG(__v_raw, "status", __v_raw.status, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("status")) {
                return
            }
            val oldValue = __v_raw.status
            __v_raw.status = value
            _tRS(__v_raw, "status", oldValue, value)
        }
    override var loginType: Number?
        get() {
            return _tRG(__v_raw, "loginType", __v_raw.loginType, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("loginType")) {
                return
            }
            val oldValue = __v_raw.loginType
            __v_raw.loginType = value
            _tRS(__v_raw, "loginType", oldValue, value)
        }
    override var password: String?
        get() {
            return _tRG(__v_raw, "password", __v_raw.password, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("password")) {
                return
            }
            val oldValue = __v_raw.password
            __v_raw.password = value
            _tRS(__v_raw, "password", oldValue, value)
        }
    override var description: String?
        get() {
            return _tRG(__v_raw, "description", __v_raw.description, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("description")) {
                return
            }
            val oldValue = __v_raw.description
            __v_raw.description = value
            _tRS(__v_raw, "description", oldValue, value)
        }
    override var birthday: String?
        get() {
            return _tRG(__v_raw, "birthday", __v_raw.birthday, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("birthday")) {
                return
            }
            val oldValue = __v_raw.birthday
            __v_raw.birthday = value
            _tRS(__v_raw, "birthday", oldValue, value)
        }
    override var province: String?
        get() {
            return _tRG(__v_raw, "province", __v_raw.province, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("province")) {
                return
            }
            val oldValue = __v_raw.province
            __v_raw.province = value
            _tRS(__v_raw, "province", oldValue, value)
        }
    override var city: String?
        get() {
            return _tRG(__v_raw, "city", __v_raw.city, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("city")) {
                return
            }
            val oldValue = __v_raw.city
            __v_raw.city = value
            _tRS(__v_raw, "city", oldValue, value)
        }
    override var district: String?
        get() {
            return _tRG(__v_raw, "district", __v_raw.district, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("district")) {
                return
            }
            val oldValue = __v_raw.district
            __v_raw.district = value
            _tRS(__v_raw, "district", oldValue, value)
        }
    override var createTime: String?
        get() {
            return _tRG(__v_raw, "createTime", __v_raw.createTime, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("createTime")) {
                return
            }
            val oldValue = __v_raw.createTime
            __v_raw.createTime = value
            _tRS(__v_raw, "createTime", oldValue, value)
        }
    override var updateTime: String?
        get() {
            return _tRG(__v_raw, "updateTime", __v_raw.updateTime, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("updateTime")) {
                return
            }
            val oldValue = __v_raw.updateTime
            __v_raw.updateTime = value
            _tRS(__v_raw, "updateTime", oldValue, value)
        }
}
open class PagePagination (
    @JsonNotNull
    open var size: Number,
    @JsonNotNull
    open var page: Number,
    @JsonNotNull
    open var total: Number,
) : UTSObject()
open class UserAddressPageResponse (
    @JsonNotNull
    open var pagination: PagePagination,
    @JsonNotNull
    open var list: UTSArray<UserAddressEntity>,
) : UTSObject()
open class BaseComm (
    open var uploadMode: (data: Any?) -> UTSPromise<Any>,
    open var upload: (data: Any?) -> UTSPromise<Any>,
    open var param: (data: Any?) -> UTSPromise<Any>,
    open var eps: (data: Any?) -> UTSPromise<Any>,
) : UTSObject()
open class DictInfo (
    open var types: (data: Any?) -> UTSPromise<Any>,
    open var data: (data: Any?) -> UTSPromise<Any>,
) : UTSObject()
open class UserAddress (
    open var `default`: (data: Any?) -> UTSPromise<Any>,
    open var `delete`: (data: Any?) -> UTSPromise<Any>,
    open var update: (data: Any?) -> UTSPromise<Any>,
    open var info: (data: Any?) -> UTSPromise<UserAddressEntity>,
    open var list: (data: Any?) -> UTSPromise<UTSArray<UserAddressEntity>>,
    open var page: (data: Any?) -> UTSPromise<UserAddressPageResponse>,
    open var add: (data: Any?) -> UTSPromise<Any>,
) : UTSObject()
open class UserComm (
    open var wxMpConfig: (data: Any?) -> UTSPromise<Any>,
) : UTSObject()
open class UserInfo (
    open var updatePassword: (data: Any?) -> UTSPromise<Any>,
    open var updatePerson: (data: Any?) -> UTSPromise<Any>,
    open var bindPhone: (data: Any?) -> UTSPromise<Any>,
    open var miniPhone: (data: Any?) -> UTSPromise<Any>,
    open var person: (data: Any?) -> UTSPromise<Any>,
    open var logoff: (data: Any?) -> UTSPromise<Any>,
) : UTSObject()
open class UserLogin (
    open var refreshToken: (data: Any?) -> UTSPromise<Any>,
    open var miniPhone: (data: Any?) -> UTSPromise<Any>,
    open var uniPhone: (data: Any?) -> UTSPromise<Any>,
    open var password: (data: Any?) -> UTSPromise<Any>,
    open var captcha: (data: Any?) -> UTSPromise<Any>,
    open var smsCode: (data: Any?) -> UTSPromise<Any>,
    open var wxApp: (data: Any?) -> UTSPromise<Any>,
    open var phone: (data: Any?) -> UTSPromise<Any>,
    open var mini: (data: Any?) -> UTSPromise<Any>,
    open var mp: (data: Any?) -> UTSPromise<Any>,
) : UTSObject()
typealias DictKey = String
open class UserInterface (
    @JsonNotNull
    open var address: UserAddress,
    @JsonNotNull
    open var comm: UserComm,
    @JsonNotNull
    open var info: UserInfo,
    @JsonNotNull
    open var login: UserLogin,
) : UTSObject()
open class DictInterface (
    @JsonNotNull
    open var info: DictInfo,
) : UTSObject()
open class BaseInterface (
    @JsonNotNull
    open var comm: BaseComm,
) : UTSObject()
open class Service (
    @JsonNotNull
    open var user: UserInterface,
    @JsonNotNull
    open var dict: DictInterface,
    @JsonNotNull
    open var base: BaseInterface,
) : UTSObject()
typealias PushAnimationType = String
typealias BackAnimationType = String
typealias PushMode = String
open class BackOptions (
    open var delta: Number? = null,
    open var animationType: BackAnimationType? = null,
    open var animationDuration: Number? = null,
    open var success: ((result: Any) -> Unit)? = null,
    open var fail: ((result: Any) -> Unit)? = null,
    open var complete: ((result: Any) -> Unit)? = null,
) : UTSObject()
open class PushOptions (
    @JsonNotNull
    open var path: String,
    open var mode: PushMode? = null,
    open var events: Any? = null,
    open var query: Any? = null,
    open var params: Any? = null,
    open var animationType: PushAnimationType? = null,
    open var animationDuration: Number? = null,
    open var success: ((result: Any) -> Unit)? = null,
    open var fail: ((result: Any) -> Unit)? = null,
    open var complete: ((result: Any) -> Unit)? = null,
) : UTSObject()
open class PageInstance (
    @JsonNotNull
    open var path: String,
    @JsonNotNull
    open var vm: Any,
    open var style: UTSJSONObject? = null,
    @JsonNotNull
    open var query: UTSJSONObject,
    @JsonNotNull
    open var exposed: Any,
    @JsonNotNull
    open var isCustomNavbar: Boolean = false,
) : UTSObject()
val proxy: UTSJSONObject = object : UTSJSONObject() {
    var dev = object : UTSJSONObject() {
        var target = "https://show.cool-admin.com/api"
        var changeOrigin = true
        var rewrite = fun(path: String): String {
            return path.replace("/dev", "")
        }
    }
    var prod = object : UTSJSONObject() {
        var target = "https://show.cool-admin.com"
        var changeOrigin = true
        var rewrite = fun(path: String): String {
            return path.replace("/prod", "/api")
        }
    }
}
val value = "dev"
val DELAY: Number = 500
val REPEAT: Number = 100
open class UseLongPress (
    open var start: (cb: () -> Unit) -> Unit,
    open var stop: () -> Unit,
    open var clear: () -> Unit,
    @JsonNotNull
    open var isPressing: Boolean = false,
) : UTSObject()
val useLongPress = fun(): UseLongPress {
    var pressTimer: Number = 0
    var repeatTimer: Number = 0
    var isPressing = false
    val clear = fun(){
        if (pressTimer != 0) {
            clearTimeout(pressTimer)
            pressTimer = 0
        }
        if (repeatTimer != 0) {
            clearInterval(repeatTimer)
            repeatTimer = 0
        }
        isPressing = false
    }
    val start = fun(cb: () -> Unit){
        clear()
        cb()
        pressTimer = setTimeout(fun(){
            vibrate(1)
            isPressing = true
            repeatTimer = setInterval(fun(){
                cb()
            }
            , REPEAT)
        }
        , DELAY)
    }
    val stop = fun(){
        clear()
    }
    onUnmounted(fun(){
        clear()
    }
    )
    return UseLongPress(start = start, stop = stop, clear = clear, isPressing = isPressing)
}
fun <T> useParent(name: String): T? {
    val proxy = getCurrentInstance()!!.proxy
    var p = proxy?.`$parent`
    while(p != null){
        if (p.`$options`.name == name) {
            return p as T?
        }
        p = p.`$parent`
    }
    return p as T?
}
val zhcn = _uA(
    _uA(
        "加载中",
        "加载中"
    ),
    _uA(
        "上传 / 拍摄",
        "上传 / 拍摄"
    ),
    _uA(
        "请输入",
        "请输入"
    ),
    _uA(
        "请选择",
        "请选择"
    ),
    _uA(
        "小时",
        "小时"
    ),
    _uA(
        "分钟",
        "分钟"
    ),
    _uA(
        "秒数",
        "秒数"
    ),
    _uA(
        "确定",
        "确定"
    ),
    _uA(
        "取消",
        "取消"
    ),
    _uA(
        "年",
        "年"
    ),
    _uA(
        "月",
        "月"
    ),
    _uA(
        "日",
        "日"
    ),
    _uA(
        "时",
        "时"
    ),
    _uA(
        "分",
        "分"
    ),
    _uA(
        "秒",
        "秒"
    ),
    _uA(
        "开始日期",
        "开始日期"
    ),
    _uA(
        "结束日期",
        "结束日期"
    ),
    _uA(
        "至",
        "至"
    ),
    _uA(
        "今天",
        "今天"
    ),
    _uA(
        "近7天",
        "近7天"
    ),
    _uA(
        "近30天",
        "近30天"
    ),
    _uA(
        "近90天",
        "近90天"
    ),
    _uA(
        "近一年",
        "近一年"
    ),
    _uA(
        "请选择完整时间范围",
        "请选择完整时间范围"
    ),
    _uA(
        "开始日期不能大于结束日期",
        "开始日期不能大于结束日期"
    ),
    _uA(
        "提示",
        "提示"
    ),
    _uA(
        "没有更多了",
        "没有更多了"
    ),
    _uA(
        "下拉刷新",
        "下拉刷新"
    ),
    _uA(
        "释放立即刷新",
        "释放立即刷新"
    ),
    _uA(
        "密码键盘",
        "密码键盘"
    ),
    _uA(
        "安全键盘，请放心输入",
        "安全键盘，请放心输入"
    ),
    _uA(
        "请输入内容",
        "请输入内容"
    ),
    _uA(
        "请输入{minlength}到{maxlength}位密码",
        "请输入{minlength}到{maxlength}位密码"
    ),
    _uA(
        "最多输入{maxlength}位",
        "最多输入{maxlength}位"
    ),
    _uA(
        "数字键盘",
        "数字键盘"
    ),
    _uA(
        "身份证号码格式不正确",
        "身份证号码格式不正确"
    ),
    _uA(
        "车牌键盘",
        "车牌键盘"
    ),
    _uA(
        "车牌号格式不正确",
        "车牌号格式不正确"
    ),
    _uA(
        "此字段为必填项",
        "此字段为必填项"
    ),
    _uA(
        "最小值为{min}",
        "最小值为{min}"
    ),
    _uA(
        "最少需要{min}个字符",
        "最少需要{min}个字符"
    ),
    _uA(
        "最大值为{max}",
        "最大值为{max}"
    ),
    _uA(
        "最多允许{max}个字符",
        "最多允许{max}个字符"
    ),
    _uA(
        "格式不正确",
        "格式不正确"
    ),
    _uA(
        "验证失败",
        "验证失败"
    ),
    _uA(
        "暂无数据",
        "暂无数据"
    ),
    _uA(
        "已阅读并同意",
        "已阅读并同意"
    ),
    _uA(
        "用户协议",
        "用户协议"
    ),
    _uA(
        "隐私政策",
        "隐私政策"
    ),
    _uA(
        "请先阅读并同意《用户协议》和《隐私政策》",
        "请先阅读并同意《用户协议》和《隐私政策》"
    ),
    _uA(
        "我的昵称",
        "我的昵称"
    ),
    _uA(
        "简介",
        "简介"
    ),
    _uA(
        "介绍一下自己",
        "介绍一下自己"
    ),
    _uA(
        "性别",
        "性别"
    ),
    _uA(
        "编辑性别",
        "编辑性别"
    ),
    _uA(
        "生日",
        "生日"
    ),
    _uA(
        "选择生日",
        "选择生日"
    ),
    _uA(
        "地区",
        "地区"
    ),
    _uA(
        "选择所在的地区",
        "选择所在的地区"
    ),
    _uA(
        "选择性别",
        "选择性别"
    ),
    _uA(
        "保密",
        "保密"
    ),
    _uA(
        "男",
        "男"
    ),
    _uA(
        "女",
        "女"
    ),
    _uA(
        "性别设置成功",
        "性别设置成功"
    ),
    _uA(
        "生日设置成功",
        "生日设置成功"
    ),
    _uA(
        "地区设置成功",
        "地区设置成功"
    ),
    _uA(
        "头像上传成功",
        "头像上传成功"
    ),
    _uA(
        "编辑昵称",
        "编辑昵称"
    ),
    _uA(
        "请输入昵称",
        "请输入昵称"
    ),
    _uA(
        "请设置2-20个字符，不包括@<>/等无效字符",
        "请设置2-20个字符，不包括@<>/等无效字符"
    ),
    _uA(
        "确认",
        "确认"
    ),
    _uA(
        "昵称长度需在2-20个字符之间",
        "昵称长度需在2-20个字符之间"
    ),
    _uA(
        "昵称不能包含@<>/等特殊字符",
        "昵称不能包含@<>/等特殊字符"
    ),
    _uA(
        "编辑简介",
        "编辑简介"
    ),
    _uA(
        "简介不能为空",
        "简介不能为空"
    ),
    _uA(
        "为提供更好的服务，我们邀请您填写昵称、头像等公开信息",
        "为提供更好的服务，我们邀请您填写昵称、头像等公开信息"
    ),
    _uA(
        "头像",
        "头像"
    ),
    _uA(
        "昵称",
        "昵称"
    ),
    _uA(
        "点击输入昵称",
        "点击输入昵称"
    ),
    _uA(
        "请上传头像",
        "请上传头像"
    ),
    _uA(
        "开发中，敬请期待",
        "开发中，敬请期待"
    ),
    _uA(
        "手机登录",
        "手机登录"
    ),
    _uA(
        "未注册的手机号登录成功后将自动注册",
        "未注册的手机号登录成功后将自动注册"
    ),
    _uA(
        "请输入手机号",
        "请输入手机号"
    ),
    _uA(
        "请输入验证码",
        "请输入验证码"
    ),
    _uA(
        "登录",
        "登录"
    ),
    _uA(
        "开启通知",
        "开启通知"
    ),
    _uA(
        "通用设置",
        "通用设置"
    ),
    _uA(
        "通知设置",
        "通知设置"
    ),
    _uA(
        "隐私设置",
        "隐私设置"
    ),
    _uA(
        "关于{name}",
        "关于{name}"
    ),
    _uA(
        "联系客服",
        "联系客服"
    ),
    _uA(
        "退出登录",
        "退出登录"
    ),
    _uA(
        "确定退出登录吗？",
        "确定退出登录吗？"
    ),
    _uA(
        "深色模式",
        "深色模式"
    ),
    _uA(
        "多语言",
        "多语言"
    ),
    _uA(
        "访问官网",
        "访问官网"
    ),
    _uA(
        "未登录",
        "未登录"
    ),
    _uA(
        "总点击",
        "总点击"
    ),
    _uA(
        "赞",
        "赞"
    ),
    _uA(
        "收藏",
        "收藏"
    ),
    _uA(
        "粉丝",
        "粉丝"
    ),
    _uA(
        "接单模式",
        "接单模式"
    ),
    _uA(
        "已关闭",
        "已关闭"
    ),
    _uA(
        "消息通知",
        "消息通知"
    ),
    _uA(
        "待支付",
        "待支付"
    ),
    _uA(
        "未发货",
        "未发货"
    ),
    _uA(
        "已发货",
        "已发货"
    ),
    _uA(
        "售后 / 退款",
        "售后 / 退款"
    ),
    _uA(
        "我的钱包",
        "我的钱包"
    ),
    _uA(
        "数据看板",
        "数据看板"
    ),
    _uA(
        "历史记录",
        "历史记录"
    ),
    _uA(
        "邀请好友",
        "邀请好友"
    ),
    _uA(
        "设置",
        "设置"
    ),
    _uA(
        "基础组件",
        "基础组件"
    ),
    _uA(
        "文本",
        "文本"
    ),
    _uA(
        "按钮",
        "按钮"
    ),
    _uA(
        "图片",
        "图片"
    ),
    _uA(
        "图标",
        "图标"
    ),
    _uA(
        "标签",
        "标签"
    ),
    _uA(
        "表单组件",
        "表单组件"
    ),
    _uA(
        "表单验证",
        "表单验证"
    ),
    _uA(
        "输入框",
        "输入框"
    ),
    _uA(
        "文本域",
        "文本域"
    ),
    _uA(
        "计数器",
        "计数器"
    ),
    _uA(
        "口令输入",
        "口令输入"
    ),
    _uA(
        "键盘",
        "键盘"
    ),
    _uA(
        "单选框",
        "单选框"
    ),
    _uA(
        "多选框",
        "多选框"
    ),
    _uA(
        "开关",
        "开关"
    ),
    _uA(
        "评分",
        "评分"
    ),
    _uA(
        "滑块",
        "滑块"
    ),
    _uA(
        "选择器",
        "选择器"
    ),
    _uA(
        "日期选择器",
        "日期选择器"
    ),
    _uA(
        "时间选择器",
        "时间选择器"
    ),
    _uA(
        "级联选择器",
        "级联选择器"
    ),
    _uA(
        "文件上传",
        "文件上传"
    ),
    _uA(
        "布局组件",
        "布局组件"
    ),
    _uA(
        "弹性布局",
        "弹性布局"
    ),
    _uA(
        "标签页",
        "标签页"
    ),
    _uA(
        "折叠面板",
        "折叠面板"
    ),
    _uA(
        "吸顶",
        "吸顶"
    ),
    _uA(
        "导航栏",
        "导航栏"
    ),
    _uA(
        "底部视图",
        "底部视图"
    ),
    _uA(
        "悬浮视图",
        "悬浮视图"
    ),
    _uA(
        "数据展示",
        "数据展示"
    ),
    _uA(
        "列表",
        "列表"
    ),
    _uA(
        "列表视图",
        "列表视图"
    ),
    _uA(
        "列表刷新",
        "列表刷新"
    ),
    _uA(
        "瀑布流",
        "瀑布流"
    ),
    _uA(
        "轮播图",
        "轮播图"
    ),
    _uA(
        "分页",
        "分页"
    ),
    _uA(
        "时间轴",
        "时间轴"
    ),
    _uA(
        "拖拽",
        "拖拽"
    ),
    _uA(
        "状态组件",
        "状态组件"
    ),
    _uA(
        "角标",
        "角标"
    ),
    _uA(
        "通知栏",
        "通知栏"
    ),
    _uA(
        "倒计时",
        "倒计时"
    ),
    _uA(
        "数字滚动",
        "数字滚动"
    ),
    _uA(
        "进度条",
        "进度条"
    ),
    _uA(
        "圆形进度条",
        "圆形进度条"
    ),
    _uA(
        "骨架图",
        "骨架图"
    ),
    _uA(
        "加载更多",
        "加载更多"
    ),
    _uA(
        "反馈组件",
        "反馈组件"
    ),
    _uA(
        "操作菜单",
        "操作菜单"
    ),
    _uA(
        "弹窗",
        "弹窗"
    ),
    _uA(
        "确认框",
        "确认框"
    ),
    _uA(
        "提示框",
        "提示框"
    ),
    _uA(
        "签名",
        "签名"
    ),
    _uA(
        "图片裁剪",
        "图片裁剪"
    ),
    _uA(
        "富文本",
        "富文本"
    ),
    _uA(
        "该功能正在开发中",
        "该功能正在开发中"
    ),
    _uA(
        "圆形",
        "圆形"
    ),
    _uA(
        "组合",
        "组合"
    ),
    _uA(
        "基础用法",
        "基础用法"
    ),
    _uA(
        "自定义",
        "自定义"
    ),
    _uA(
        "加快滚动速度",
        "加快滚动速度"
    ),
    _uA(
        "显示小数位数",
        "显示小数位数"
    ),
    _uA(
        "自定义样式",
        "自定义样式"
    ),
    _uA(
        "自定义颜色",
        "自定义颜色"
    ),
    _uA(
        "自定义宽度",
        "自定义宽度"
    ),
    _uA(
        "不显示文本",
        "不显示文本"
    ),
    _uA(
        "改个颜色",
        "改个颜色"
    ),
    _uA(
        "显示文本",
        "显示文本"
    ),
    _uA(
        "快一些",
        "快一些"
    ),
    _uA(
        "带图标",
        "带图标"
    ),
    _uA(
        "设置速度",
        "设置速度"
    ),
    _uA(
        "垂直方向",
        "垂直方向"
    ),
    _uA(
        "3秒后加载完成",
        "3秒后加载完成"
    ),
    _uA(
        "隐藏为 00 的值",
        "隐藏为 00 的值"
    ),
    _uA(
        "指定天数",
        "指定天数"
    ),
    _uA(
        "自定义模板",
        "自定义模板"
    ),
    _uA(
        "指定小时",
        "指定小时"
    ),
    _uA(
        "指定分钟",
        "指定分钟"
    ),
    _uA(
        "指定秒",
        "指定秒"
    ),
    _uA(
        "完成后提示",
        "完成后提示"
    ),
    _uA(
        "结合按钮",
        "结合按钮"
    ),
    _uA(
        "购买",
        "购买"
    ),
    _uA(
        "消息",
        "消息"
    ),
    _uA(
        "结合图片",
        "结合图片"
    ),
    _uA(
        "结合图标",
        "结合图标"
    ),
    _uA(
        "点击触发",
        "点击触发"
    ),
    _uA(
        "操作",
        "操作"
    ),
    _uA(
        "清空",
        "清空"
    ),
    _uA(
        "预览",
        "预览"
    ),
    _uA(
        "设置高度",
        "设置高度"
    ),
    _uA(
        "毛笔效果",
        "毛笔效果"
    ),
    _uA(
        "添加LOGO",
        "添加LOGO"
    ),
    _uA(
        "圆角定位点",
        "圆角定位点"
    ),
    _uA(
        "内间距",
        "内间距"
    ),
    _uA(
        "导出图片",
        "导出图片"
    ),
    _uA(
        "矩形",
        "矩形"
    ),
    _uA(
        "点",
        "点"
    ),
    _uA(
        "线性",
        "线性"
    ),
    _uA(
        "小方格",
        "小方格"
    ),
    _uA(
        "格式化",
        "格式化"
    ),
    _uA(
        "添加",
        "添加"
    ),
    _uA(
        "减去",
        "减去"
    ),
    _uA(
        "获取某个单位的开始时间",
        "获取某个单位的开始时间"
    ),
    _uA(
        "获取某个单位的结束时间",
        "获取某个单位的结束时间"
    ),
    _uA(
        "是否同一天",
        "是否同一天"
    ),
    _uA(
        "是否早于",
        "是否早于"
    ),
    _uA(
        "是否晚于",
        "是否晚于"
    ),
    _uA(
        "差值",
        "差值"
    ),
    _uA(
        "差值（单位）",
        "差值（单位）"
    ),
    _uA(
        "选择图片",
        "选择图片"
    ),
    _uA(
        "可调节裁剪框大小",
        "可调节裁剪框大小"
    ),
    _uA(
        "标题",
        "标题"
    ),
    _uA(
        "插槽",
        "插槽"
    ),
    _uA(
        "自定义返回图标",
        "自定义返回图标"
    ),
    _uA(
        "自定义返回路径",
        "自定义返回路径"
    ),
    _uA(
        "自定义标题内容",
        "自定义标题内容"
    ),
    _uA(
        "显示滑块",
        "显示滑块"
    ),
    _uA(
        "添加间距",
        "添加间距"
    ),
    _uA(
        "横向填充",
        "横向填充"
    ),
    _uA(
        "适用于标签数量不多的情况",
        "适用于标签数量不多的情况"
    ),
    _uA(
        "居中",
        "居中"
    ),
    _uA(
        "单个禁用",
        "单个禁用"
    ),
    _uA(
        "显示下划线",
        "显示下划线"
    ),
    _uA(
        "禁用",
        "禁用"
    ),
    _uA(
        "取消订单",
        "取消订单"
    ),
    _uA(
        "立即购买",
        "立即购买"
    ),
    _uA(
        "确认收货",
        "确认收货"
    ),
    _uA(
        "评价",
        "评价"
    ),
    _uA(
        "禁用状态，无法拖拽",
        "禁用状态，无法拖拽"
    ),
    _uA(
        "不吸附边缘，任意位置可拖拽",
        "不吸附边缘，任意位置可拖拽"
    ),
    _uA(
        "这是一个提示",
        "这是一个提示"
    ),
    _uA(
        "左间隔",
        "左间隔"
    ),
    _uA(
        "右移动",
        "右移动"
    ),
    _uA(
        "左移动",
        "左移动"
    ),
    _uA(
        "多个数据",
        "多个数据"
    ),
    _uA(
        "点击收起",
        "点击收起"
    ),
    _uA(
        "点击展开",
        "点击展开"
    ),
    _uA(
        "ref 方式调用",
        "ref 方式调用"
    ),
    _uA(
        "自定义图标、文字、大小",
        "自定义图标、文字、大小"
    ),
    _uA(
        "上传证件照",
        "上传证件照"
    ),
    _uA(
        "多选",
        "多选"
    ),
    _uA(
        "限制 3 个",
        "限制 3 个"
    ),
    _uA(
        "边框",
        "边框"
    ),
    _uA(
        "显示字数",
        "显示字数"
    ),
    _uA(
        "自动增高",
        "自动增高"
    ),
    _uA(
        "其他颜色",
        "其他颜色"
    ),
    _uA(
        "大一点",
        "大一点"
    ),
    _uA(
        "正方形",
        "正方形"
    ),
    _uA(
        "范围选择",
        "范围选择"
    ),
    _uA(
        "显示值",
        "显示值"
    ),
    _uA(
        "步长10",
        "步长10"
    ),
    _uA(
        "滑块大点",
        "滑块大点"
    ),
    _uA(
        "换个颜色",
        "换个颜色"
    ),
    _uA(
        "最大50",
        "最大50"
    ),
    _uA(
        "自定义触发器",
        "自定义触发器"
    ),
    _uA(
        "打开选择器",
        "打开选择器"
    ),
    _uA(
        "多列",
        "多列"
    ),
    _uA(
        "通过 children 配置多级数据，并使用 column-count 参数指定显示的列数",
        "通过 children 配置多级数据，并使用 column-count 参数指定显示的列数"
    ),
    _uA(
        "绑定值",
        "绑定值"
    ),
    _uA(
        "下一步",
        "下一步"
    ),
    _uA(
        "关闭",
        "关闭"
    ),
    _uA(
        "显示取消按钮",
        "显示取消按钮"
    ),
    _uA(
        "修改按钮文案",
        "修改按钮文案"
    ),
    _uA(
        "显示绑定值",
        "显示绑定值"
    ),
    _uA(
        "时:分",
        "时:分"
    ),
    _uA(
        "时:分:秒",
        "时:分:秒"
    ),
    _uA(
        "标签格式化",
        "标签格式化"
    ),
    _uA(
        "固定开始、结束日期",
        "固定开始、结束日期"
    ),
    _uA(
        "自定义快捷选项",
        "自定义快捷选项"
    ),
    _uA(
        "只读",
        "只读"
    ),
    _uA(
        "显示分数",
        "显示分数"
    ),
    _uA(
        "允许半星",
        "允许半星"
    ),
    _uA(
        "换个图标",
        "换个图标"
    ),
    _uA(
        "纵向排列",
        "纵向排列"
    ),
    _uA(
        "换个样式",
        "换个样式"
    ),
    _uA(
        "不显示图标",
        "不显示图标"
    ),
    _uA(
        "其他样式",
        "其他样式"
    ),
    _uA(
        "打开键盘",
        "打开键盘"
    ),
    _uA(
        "是否显示输入值",
        "是否显示输入值"
    ),
    _uA(
        "输入即绑定",
        "输入即绑定"
    ),
    _uA(
        "身份证键盘",
        "身份证键盘"
    ),
    _uA(
        "是否加密",
        "是否加密"
    ),
    _uA(
        "车牌号键盘",
        "车牌号键盘"
    ),
    _uA(
        "数字输入",
        "数字输入"
    ),
    _uA(
        "密码输入",
        "密码输入"
    ),
    _uA(
        "可清除",
        "可清除"
    ),
    _uA(
        "左右插槽",
        "左右插槽"
    ),
    _uA(
        "左图标",
        "左图标"
    ),
    _uA(
        "右图标",
        "右图标"
    ),
    _uA(
        "自动聚焦",
        "自动聚焦"
    ),
    _uA(
        "长度为6",
        "长度为6"
    ),
    _uA(
        "步进为10",
        "步进为10"
    ),
    _uA(
        "最小为10",
        "最小为10"
    ),
    _uA(
        "最大为50",
        "最大为50"
    ),
    _uA(
        "可以小数",
        "可以小数"
    ),
    _uA(
        "可以输入",
        "可以输入"
    ),
    _uA(
        "用户名",
        "用户名"
    ),
    _uA(
        "请输入用户名",
        "请输入用户名"
    ),
    _uA(
        "邮箱",
        "邮箱"
    ),
    _uA(
        "请输入邮箱地址",
        "请输入邮箱地址"
    ),
    _uA(
        "身高",
        "身高"
    ),
    _uA(
        "体重",
        "体重"
    ),
    _uA(
        "所在地区",
        "所在地区"
    ),
    _uA(
        "出生年月",
        "出生年月"
    ),
    _uA(
        "个人简介",
        "个人简介"
    ),
    _uA(
        "请输入个人简介",
        "请输入个人简介"
    ),
    _uA(
        "公开状态",
        "公开状态"
    ),
    _uA(
        "重置",
        "重置"
    ),
    _uA(
        "提交",
        "提交"
    ),
    _uA(
        "未知",
        "未知"
    ),
    _uA(
        "篮球",
        "篮球"
    ),
    _uA(
        "足球",
        "足球"
    ),
    _uA(
        "羽毛球",
        "羽毛球"
    ),
    _uA(
        "乒乓球",
        "乒乓球"
    ),
    _uA(
        "游泳",
        "游泳"
    ),
    _uA(
        "用户名不能为空",
        "用户名不能为空"
    ),
    _uA(
        "用户名长度在3-20个字符之间",
        "用户名长度在3-20个字符之间"
    ),
    _uA(
        "邮箱不能为空",
        "邮箱不能为空"
    ),
    _uA(
        "邮箱格式不正确",
        "邮箱格式不正确"
    ),
    _uA(
        "身高不能为空",
        "身高不能为空"
    ),
    _uA(
        "身高在160-190cm之间",
        "身高在160-190cm之间"
    ),
    _uA(
        "体重不能为空",
        "体重不能为空"
    ),
    _uA(
        "体重在40-100kg之间",
        "体重在40-100kg之间"
    ),
    _uA(
        "标签不能为空",
        "标签不能为空"
    ),
    _uA(
        "标签最多选择2个",
        "标签最多选择2个"
    ),
    _uA(
        "性别不能为空",
        "性别不能为空"
    ),
    _uA(
        "所在地区不能为空",
        "所在地区不能为空"
    ),
    _uA(
        "出生年月不能为空",
        "出生年月不能为空"
    ),
    _uA(
        "出生年月不大于2010-01-01",
        "出生年月不大于2010-01-01"
    ),
    _uA(
        "提交成功",
        "提交成功"
    ),
    _uA(
        "单个 true / false",
        "单个 true / false"
    ),
    _uA(
        "带索引、地区选择",
        "带索引、地区选择"
    ),
    _uA(
        "换个分隔符",
        "换个分隔符"
    ),
    _uA(
        "列表高度小一点",
        "列表高度小一点"
    ),
    _uA(
        "打开",
        "打开"
    ),
    _uA(
        "不同位置",
        "不同位置"
    ),
    _uA(
        "顶部",
        "顶部"
    ),
    _uA(
        "中间",
        "中间"
    ),
    _uA(
        "底部",
        "底部"
    ),
    _uA(
        "不同类型",
        "不同类型"
    ),
    _uA(
        "成功",
        "成功"
    ),
    _uA(
        "失败",
        "失败"
    ),
    _uA(
        "警告",
        "警告"
    ),
    _uA(
        "问题",
        "问题"
    ),
    _uA(
        "停止",
        "停止"
    ),
    _uA(
        "自定义图标",
        "自定义图标"
    ),
    _uA(
        "只存在一个",
        "只存在一个"
    ),
    _uA(
        "不同位置提示",
        "不同位置提示"
    ),
    _uA(
        "不同类型提示",
        "不同类型提示"
    ),
    _uA(
        "带图标提示",
        "带图标提示"
    ),
    _uA(
        "移除其他已存在的提示",
        "移除其他已存在的提示"
    ),
    _uA(
        "打开弹窗",
        "打开弹窗"
    ),
    _uA(
        "设置宽度 80%",
        "设置宽度 80%"
    ),
    _uA(
        "无头",
        "无头"
    ),
    _uA(
        "左侧",
        "左侧"
    ),
    _uA(
        "右侧",
        "右侧"
    ),
    _uA(
        "隐藏取消按钮",
        "隐藏取消按钮"
    ),
    _uA(
        "自定义文本",
        "自定义文本"
    ),
    _uA(
        "关闭前钩子",
        "关闭前钩子"
    ),
    _uA(
        "显示时长",
        "显示时长"
    ),
    _uA(
        "确定要删除吗？",
        "确定要删除吗？"
    ),
    _uA(
        "确定要删除吗？3秒后自动关闭",
        "确定要删除吗？3秒后自动关闭"
    ),
    _uA(
        "带标题、描述",
        "带标题、描述"
    ),
    _uA(
        "无法点击遮罩关闭",
        "无法点击遮罩关闭"
    ),
    _uA(
        "不需要取消按钮",
        "不需要取消按钮"
    ),
    _uA(
        "插槽用法",
        "插槽用法"
    ),
    _uA(
        "反馈",
        "反馈"
    ),
    _uA(
        "删除好友会同时删除所有聊天记录",
        "删除好友会同时删除所有聊天记录"
    ),
    _uA(
        "删除好友",
        "删除好友"
    ),
    _uA(
        "确定要删除好友吗？",
        "确定要删除好友吗？"
    ),
    _uA(
        "删除成功",
        "删除成功"
    ),
    _uA(
        "点我关闭",
        "点我关闭"
    ),
    _uA(
        "确定要关闭吗？",
        "确定要关闭吗？"
    ),
    _uA(
        "支付成功",
        "支付成功"
    ),
    _uA(
        "支付宝",
        "支付宝"
    ),
    _uA(
        "微信",
        "微信"
    ),
    _uA(
        "开通账号",
        "开通账号"
    ),
    _uA(
        "赠送500元",
        "赠送500元"
    ),
    _uA(
        "完成实名认证",
        "完成实名认证"
    ),
    _uA(
        "通过身份证认证",
        "通过身份证认证"
    ),
    _uA(
        "绑定银行卡",
        "绑定银行卡"
    ),
    _uA(
        "绑定招商银行储蓄卡",
        "绑定招商银行储蓄卡"
    ),
    _uA(
        "首次充值",
        "首次充值"
    ),
    _uA(
        "充值1000元",
        "充值1000元"
    ),
    _uA(
        "完成首笔交易",
        "完成首笔交易"
    ),
    _uA(
        "优选灵活配置混合A",
        "优选灵活配置混合A"
    ),
    _uA(
        "1000元起",
        "1000元起"
    ),
    _uA(
        "多页数",
        "多页数"
    ),
    _uA(
        "上一页",
        "上一页"
    ),
    _uA(
        "下一页",
        "下一页"
    ),
    _uA(
        "内容靠左",
        "内容靠左"
    ),
    _uA(
        "QQ",
        "QQ"
    ),
    _uA(
        "带箭头",
        "带箭头"
    ),
    _uA(
        "余额",
        "余额"
    ),
    _uA(
        "折叠",
        "折叠"
    ),
    _uA(
        "可滑动",
        "可滑动"
    ),
    _uA(
        "左滑编辑",
        "左滑编辑"
    ),
    _uA(
        "编辑",
        "编辑"
    ),
    _uA(
        "右滑删除",
        "右滑删除"
    ),
    _uA(
        "删除",
        "删除"
    ),
    _uA(
        "账号",
        "账号"
    ),
    _uA(
        "我的订单",
        "我的订单"
    ),
    _uA(
        "我的收藏",
        "我的收藏"
    ),
    _uA(
        "单列排序",
        "单列排序"
    ),
    _uA(
        "结合列表使用",
        "结合列表使用"
    ),
    _uA(
        "多列排序",
        "多列排序"
    ),
    _uA(
        "结合图片使用",
        "结合图片使用"
    ),
    _uA(
        "禁用手势",
        "禁用手势"
    ),
    _uA(
        "自定义样式2",
        "自定义样式2"
    ),
    _uA(
        "无图片",
        "无图片"
    ),
    _uA(
        "圆角",
        "圆角"
    ),
    _uA(
        "自定义大小",
        "自定义大小"
    ),
    _uA(
        "手机号脱敏",
        "手机号脱敏"
    ),
    _uA(
        "姓名脱敏",
        "姓名脱敏"
    ),
    _uA(
        "邮箱脱敏",
        "邮箱脱敏"
    ),
    _uA(
        "银行卡脱敏",
        "银行卡脱敏"
    ),
    _uA(
        "金额",
        "金额"
    ),
    _uA(
        "自定义脱敏字符",
        "自定义脱敏字符"
    ),
    _uA(
        "省略号",
        "省略号"
    ),
    _uA(
        "主要",
        "主要"
    ),
    _uA(
        "危险",
        "危险"
    ),
    _uA(
        "信息",
        "信息"
    ),
    _uA(
        "邮件",
        "邮件"
    ),
    _uA(
        "日历",
        "日历"
    ),
    _uA(
        "文件",
        "文件"
    ),
    _uA(
        "可关闭",
        "可关闭"
    ),
    _uA(
        "镂空",
        "镂空"
    ),
    _uA(
        "自定义无圆角",
        "自定义无圆角"
    ),
    _uA(
        "不同裁剪",
        "不同裁剪"
    ),
    _uA(
        "点击可预览",
        "点击可预览"
    ),
    _uA(
        "失败时显示",
        "失败时显示"
    ),
    _uA(
        "自定义圆角",
        "自定义圆角"
    ),
    _uA(
        "设置颜色",
        "设置颜色"
    ),
    _uA(
        "设置大小",
        "设置大小"
    ),
    _uA(
        "集成 iconfont 与 remixicon 图标库，展示部分示例",
        "集成 iconfont 与 remixicon 图标库，展示部分示例"
    ),
    _uA(
        "iconfont",
        "iconfont"
    ),
    _uA(
        "remixicon",
        "remixicon"
    ),
    _uA(
        "复制成功",
        "复制成功"
    ),
    _uA(
        "普通",
        "普通"
    ),
    _uA(
        "浅色",
        "浅色"
    ),
    _uA(
        "深色",
        "深色"
    ),
    _uA(
        "只显示图标",
        "只显示图标"
    ),
    _uA(
        "文本模式",
        "文本模式"
    ),
    _uA(
        "带边框",
        "带边框"
    ),
    _uA(
        "圆角按钮",
        "圆角按钮"
    ),
    _uA(
        "带左侧图标",
        "带左侧图标"
    ),
    _uA(
        "小",
        "小"
    ),
    _uA(
        "默认",
        "默认"
    ),
    _uA(
        "大",
        "大"
    ),
    _uA(
        "无权限",
        "无权限"
    ),
    _uA(
        "服务异常",
        "服务异常"
    ),
    _uA(
        "获取短信验证码",
        "获取短信验证码"
    ),
    _uA(
        "验证码",
        "验证码"
    ),
    _uA(
        "发送短信",
        "发送短信"
    ),
    _uA(
        "{n}s后重新获取",
        "{n}s后重新获取"
    ),
    _uA(
        "获取验证码",
        "获取验证码"
    ),
    _uA(
        "短信已发送，请查收",
        "短信已发送，请查收"
    ),
    _uA(
        "请填写验证码",
        "请填写验证码"
    ),
    _uA(
        "请填写正确的手机号格式",
        "请填写正确的手机号格式"
    ),
    _uA(
        "全局字号",
        "全局字号"
    ),
    _uA(
        "这是一段示例文字，用于预览不同字号的效果。",
        "这是一段示例文字，用于预览不同字号的效果。"
    ),
    _uA(
        "默认 1.0",
        "默认 1.0"
    ),
    _uA(
        "切换语言",
        "切换语言"
    ),
    _uA(
        "page.设置",
        "设置"
    ),
    _uA(
        "page.通用设置",
        "通用设置"
    ),
    _uA(
        "page.通知设置",
        "通知设置"
    ),
    _uA(
        "page.联系客服",
        "联系客服"
    ),
    _uA(
        "page.编辑资料",
        "编辑资料"
    ),
    _uA(
        "首页",
        "首页"
    ),
    _uA(
        "我的",
        "我的"
    )
)
val en = _uA(
    _uA(
        "page.通用设置",
        "General Settings"
    ),
    _uA(
        "page.通知设置",
        "Notification Settings"
    ),
    _uA(
        "page.联系客服",
        "Contact Customer Service"
    ),
    _uA(
        "page.编辑资料",
        "Edit Profile"
    ),
    _uA(
        "首页",
        "Home Page"
    ),
    _uA(
        "我的",
        "Mine"
    ),
    _uA(
        "加载中",
        "Loading"
    ),
    _uA(
        "上传 / 拍摄",
        "Upload / Shoot"
    ),
    _uA(
        "请输入",
        "Please enter"
    ),
    _uA(
        "请选择",
        "Please select"
    ),
    _uA(
        "小时",
        "Hour"
    ),
    _uA(
        "分钟",
        "Minute"
    ),
    _uA(
        "秒数",
        "Seconds"
    ),
    _uA(
        "确定",
        "OK"
    ),
    _uA(
        "取消",
        "Cancel"
    ),
    _uA(
        "年",
        "Year"
    ),
    _uA(
        "月",
        "Month"
    ),
    _uA(
        "日",
        "Day"
    ),
    _uA(
        "时",
        "Hour"
    ),
    _uA(
        "分",
        "Minute"
    ),
    _uA(
        "秒",
        "Second"
    ),
    _uA(
        "开始日期",
        "Start date"
    ),
    _uA(
        "结束日期",
        "End date"
    ),
    _uA(
        "至",
        "To"
    ),
    _uA(
        "今天",
        "Today"
    ),
    _uA(
        "近7天",
        "Last 7 days"
    ),
    _uA(
        "个人简介",
        "Personal Profile"
    ),
    _uA(
        "请输入个人简介",
        "Please enter your personal profile"
    ),
    _uA(
        "公开状态",
        "Public Status"
    ),
    _uA(
        "重置",
        "Reset"
    ),
    _uA(
        "提交",
        "Submit"
    ),
    _uA(
        "未知",
        "Unknown"
    ),
    _uA(
        "篮球",
        "Basketball"
    ),
    _uA(
        "足球",
        "Football"
    ),
    _uA(
        "羽毛球",
        "Badminton"
    ),
    _uA(
        "乒乓球",
        "Table Tennis"
    ),
    _uA(
        "游泳",
        "Swimming"
    ),
    _uA(
        "用户名不能为空",
        "Username cannot be empty"
    ),
    _uA(
        "用户名长度在3-20个字符之间",
        "Username should be between 3 and 20 characters"
    ),
    _uA(
        "邮箱不能为空",
        "Email cannot be empty"
    ),
    _uA(
        "邮箱格式不正确",
        "Invalid email format"
    ),
    _uA(
        "身高不能为空",
        "Height cannot be empty"
    ),
    _uA(
        "身高在160-190cm之间",
        "Height should be between 160 and 190 cm"
    ),
    _uA(
        "体重不能为空",
        "Weight cannot be empty"
    ),
    _uA(
        "体重在40-100kg之间",
        "Weight should be between 40 and 100 kg"
    ),
    _uA(
        "标签不能为空",
        "Tags cannot be empty"
    ),
    _uA(
        "标签最多选择2个",
        "Select at most 2 tags"
    ),
    _uA(
        "性别不能为空",
        "Gender cannot be empty"
    ),
    _uA(
        "所在地区不能为空",
        "Region cannot be empty"
    ),
    _uA(
        "出生年月不能为空",
        "Date of birth cannot be empty"
    ),
    _uA(
        "出生年月不大于2010-01-01",
        "Date of birth should not be later than 2010-01-01"
    ),
    _uA(
        "提交成功",
        "Submission successful"
    ),
    _uA(
        "单个 true / false",
        "Single true/false"
    ),
    _uA(
        "带索引、地区选择",
        "With index, region selection"
    ),
    _uA(
        "换个分隔符",
        "Change the delimiter"
    ),
    _uA(
        "列表高度小一点",
        "Make the list height smaller"
    ),
    _uA(
        "打开",
        "Open"
    ),
    _uA(
        "不同位置",
        "Different positions"
    ),
    _uA(
        "顶部",
        "Top"
    ),
    _uA(
        "中间",
        "Middle"
    ),
    _uA(
        "底部",
        "Bottom"
    ),
    _uA(
        "不同类型",
        "Different types"
    ),
    _uA(
        "成功",
        "Success"
    ),
    _uA(
        "失败",
        "Failure"
    ),
    _uA(
        "警告",
        "Warning"
    ),
    _uA(
        "问题",
        "Problem"
    ),
    _uA(
        "表单组件",
        "Form components"
    ),
    _uA(
        "表单验证",
        "Form validation"
    ),
    _uA(
        "输入框",
        "Input box"
    ),
    _uA(
        "文本域",
        "Text area"
    ),
    _uA(
        "计数器",
        "Counter"
    ),
    _uA(
        "口令输入",
        "Password input"
    ),
    _uA(
        "键盘",
        "Keyboard"
    ),
    _uA(
        "单选框",
        "Radio box"
    ),
    _uA(
        "多选框",
        "Checkbox"
    ),
    _uA(
        "开关",
        "Switch"
    ),
    _uA(
        "评分",
        "Rating"
    ),
    _uA(
        "滑块",
        "Slider"
    ),
    _uA(
        "选择器",
        "Selector"
    ),
    _uA(
        "日期选择器",
        "Date selector"
    ),
    _uA(
        "时间选择器",
        "Time selector"
    ),
    _uA(
        "级联选择器",
        "Cascading selector"
    ),
    _uA(
        "文件上传",
        "File upload"
    ),
    _uA(
        "布局组件",
        "Layout components"
    ),
    _uA(
        "弹性布局",
        "Flexible layout"
    ),
    _uA(
        "标签页",
        "Tab page"
    ),
    _uA(
        "取消订单",
        "Cancel order"
    ),
    _uA(
        "立即购买",
        "Buy now"
    ),
    _uA(
        "确认收货",
        "Confirm receipt"
    ),
    _uA(
        "评价",
        "Evaluate"
    ),
    _uA(
        "禁用状态，无法拖拽",
        "Disabled state, cannot be dragged"
    ),
    _uA(
        "不吸附边缘，任意位置可拖拽",
        "Does not adhere to the edge, can be dragged to any position"
    ),
    _uA(
        "这是一个提示",
        "This is a prompt"
    ),
    _uA(
        "左间隔",
        "Left interval"
    ),
    _uA(
        "右移动",
        "Right move"
    ),
    _uA(
        "左移动",
        "Left move"
    ),
    _uA(
        "多个数据",
        "Multiple data"
    ),
    _uA(
        "点击收起",
        "Click to collapse"
    ),
    _uA(
        "点击展开",
        "Click to expand"
    ),
    _uA(
        "ref 方式调用",
        "Call by ref method"
    ),
    _uA(
        "自定义图标、文字、大小",
        "Customize icon, text, size"
    ),
    _uA(
        "上传证件照",
        "Upload ID photo"
    ),
    _uA(
        "多选",
        "Multiple selection"
    ),
    _uA(
        "限制 3 个",
        "Limit 3"
    ),
    _uA(
        "边框",
        "Border"
    ),
    _uA(
        "显示字数",
        "Display number of characters"
    ),
    _uA(
        "收藏",
        "Collection"
    ),
    _uA(
        "粉丝",
        "Fans"
    ),
    _uA(
        "接单模式",
        "Order Receiving Mode"
    ),
    _uA(
        "已关闭",
        "Closed"
    ),
    _uA(
        "消息通知",
        "Message Notification"
    ),
    _uA(
        "待支付",
        "Pending Payment"
    ),
    _uA(
        "未发货",
        "Not Shipped"
    ),
    _uA(
        "已发货",
        "Shipped"
    ),
    _uA(
        "售后 / 退款",
        "After-sales / Refund"
    ),
    _uA(
        "我的钱包",
        "My Wallet"
    ),
    _uA(
        "数据看板",
        "Data Dashboard"
    ),
    _uA(
        "历史记录",
        "History"
    ),
    _uA(
        "邀请好友",
        "Invite Friends"
    ),
    _uA(
        "设置",
        "Settings"
    ),
    _uA(
        "基础组件",
        "Basic Components"
    ),
    _uA(
        "文本",
        "Text"
    ),
    _uA(
        "按钮",
        "Button"
    ),
    _uA(
        "图片",
        "Image"
    ),
    _uA(
        "图标",
        "Icon"
    ),
    _uA(
        "标签",
        "Label"
    ),
    _uA(
        "停止",
        "Stop"
    ),
    _uA(
        "自定义图标",
        "Custom Icon"
    ),
    _uA(
        "只存在一个",
        "Only One Exists"
    ),
    _uA(
        "不同位置提示",
        "Different Location Hints"
    ),
    _uA(
        "不同类型提示",
        "Different Type Hints"
    ),
    _uA(
        "带图标提示",
        "Icon Hints"
    ),
    _uA(
        "移除其他已存在的提示",
        "Remove Other Existing Hints"
    ),
    _uA(
        "打开弹窗",
        "Open Pop-up Window"
    ),
    _uA(
        "设置宽度 80%",
        "Set Width to 80%"
    ),
    _uA(
        "无头",
        "Headless"
    ),
    _uA(
        "左侧",
        "Left"
    ),
    _uA(
        "右侧",
        "Right"
    ),
    _uA(
        "隐藏取消按钮",
        "Hide Cancel Button"
    ),
    _uA(
        "自定义文本",
        "Custom Text"
    ),
    _uA(
        "关闭前钩子",
        "Before Close Hook"
    ),
    _uA(
        "显示时长",
        "Display Duration"
    ),
    _uA(
        "确定要删除吗？",
        "Are you sure you want to delete?"
    ),
    _uA(
        "确定要删除吗？3秒后自动关闭",
        "Are you sure you want to delete? Automatically close after 3 seconds"
    ),
    _uA(
        "带标题、描述",
        "With Title and Description"
    ),
    _uA(
        "无法点击遮罩关闭",
        "Cannot close by clicking on the mask"
    ),
    _uA(
        "结合图标",
        "Combine icons"
    ),
    _uA(
        "点击触发",
        "Click to trigger"
    ),
    _uA(
        "操作",
        "Operation"
    ),
    _uA(
        "清空",
        "Empty"
    ),
    _uA(
        "预览",
        "Preview"
    ),
    _uA(
        "设置高度",
        "Set height"
    ),
    _uA(
        "毛笔效果",
        "Brush effect"
    ),
    _uA(
        "添加LOGO",
        "Add LOGO"
    ),
    _uA(
        "圆角定位点",
        "Rounded corner positioning point"
    ),
    _uA(
        "内间距",
        "Inner spacing"
    ),
    _uA(
        "导出图片",
        "Export image"
    ),
    _uA(
        "矩形",
        "Rectangle"
    ),
    _uA(
        "点",
        "Point"
    ),
    _uA(
        "线性",
        "Linear"
    ),
    _uA(
        "小方格",
        "Small square"
    ),
    _uA(
        "格式化",
        "Format"
    ),
    _uA(
        "添加",
        "Add"
    ),
    _uA(
        "减去",
        "Subtract"
    ),
    _uA(
        "获取某个单位的开始时间",
        "Get the start time of a certain unit"
    ),
    _uA(
        "获取某个单位的结束时间",
        "Get the end time of a certain unit"
    ),
    _uA(
        "密码输入",
        "Password input"
    ),
    _uA(
        "可清除",
        "Clearable"
    ),
    _uA(
        "左右插槽",
        "Left and right slots"
    ),
    _uA(
        "左图标",
        "Left icon"
    ),
    _uA(
        "右图标",
        "Right icon"
    ),
    _uA(
        "自动聚焦",
        "Auto focus"
    ),
    _uA(
        "长度为6",
        "Length is 6"
    ),
    _uA(
        "步进为10",
        "Step is 10"
    ),
    _uA(
        "最小为10",
        "Minimum is 10"
    ),
    _uA(
        "最大为50",
        "Maximum is 50"
    ),
    _uA(
        "可以小数",
        "Can be decimal"
    ),
    _uA(
        "可以输入",
        "Can be input"
    ),
    _uA(
        "用户名",
        "Username"
    ),
    _uA(
        "请输入用户名",
        "Please enter username"
    ),
    _uA(
        "邮箱",
        "Email"
    ),
    _uA(
        "请输入邮箱地址",
        "Please enter email address"
    ),
    _uA(
        "身高",
        "Height"
    ),
    _uA(
        "体重",
        "Weight"
    ),
    _uA(
        "所在地区",
        "Region"
    ),
    _uA(
        "出生年月",
        "Date of birth"
    ),
    _uA(
        "自动增高",
        "Auto increase"
    ),
    _uA(
        "其他颜色",
        "Other colors"
    ),
    _uA(
        "大一点",
        "Bigger"
    ),
    _uA(
        "正方形",
        "Square"
    ),
    _uA(
        "范围选择",
        "Range selection"
    ),
    _uA(
        "显示值",
        "Display value"
    ),
    _uA(
        "步长10",
        "Step 10"
    ),
    _uA(
        "滑块大点",
        "Bigger slider"
    ),
    _uA(
        "换个颜色",
        "Change color"
    ),
    _uA(
        "最大50",
        "Maximum 50"
    ),
    _uA(
        "自定义触发器",
        "Custom trigger"
    ),
    _uA(
        "打开选择器",
        "Open selector"
    ),
    _uA(
        "多列",
        "Multiple columns"
    ),
    _uA(
        "通过 children 配置多级数据，并使用 column-count 参数指定显示的列数",
        "Configure multi-level data through children and use the column-count parameter to specify the number of columns to display"
    ),
    _uA(
        "绑定值",
        "Bind value"
    ),
    _uA(
        "下一步",
        "Next step"
    ),
    _uA(
        "关闭",
        "Close"
    ),
    _uA(
        "显示取消按钮",
        "Show cancel button"
    ),
    _uA(
        "修改按钮文案",
        "Modify button text"
    ),
    _uA(
        "显示绑定值",
        "Show bound value"
    ),
    _uA(
        "折叠面板",
        "Collapsible Panel"
    ),
    _uA(
        "吸顶",
        "Sticky"
    ),
    _uA(
        "导航栏",
        "Navigation Bar"
    ),
    _uA(
        "底部视图",
        "Bottom View"
    ),
    _uA(
        "悬浮视图",
        "Floating View"
    ),
    _uA(
        "数据展示",
        "Data Display"
    ),
    _uA(
        "列表",
        "List"
    ),
    _uA(
        "列表视图",
        "ListView"
    ),
    _uA(
        "列表刷新",
        "List Refresh"
    ),
    _uA(
        "瀑布流",
        "Waterfall Flow"
    ),
    _uA(
        "轮播图",
        "Carousel"
    ),
    _uA(
        "分页",
        "Pagination"
    ),
    _uA(
        "时间轴",
        "Timeline"
    ),
    _uA(
        "拖拽",
        "Drag"
    ),
    _uA(
        "状态组件",
        "Status Component"
    ),
    _uA(
        "角标",
        "Badge"
    ),
    _uA(
        "通知栏",
        "Notification Bar"
    ),
    _uA(
        "倒计时",
        "Countdown"
    ),
    _uA(
        "数字滚动",
        "Digital Scrolling"
    ),
    _uA(
        "进度条",
        "Progress Bar"
    ),
    _uA(
        "圆形进度条",
        "Circular progress bar"
    ),
    _uA(
        "骨架图",
        "Skeleton diagram"
    ),
    _uA(
        "加载更多",
        "Load more"
    ),
    _uA(
        "反馈组件",
        "Feedback component"
    ),
    _uA(
        "操作菜单",
        "Operation menu"
    ),
    _uA(
        "弹窗",
        "Pop-up window"
    ),
    _uA(
        "确认框",
        "Confirmation box"
    ),
    _uA(
        "提示框",
        "Prompt box"
    ),
    _uA(
        "签名",
        "Signature"
    ),
    _uA(
        "图片裁剪",
        "Image cropping"
    ),
    _uA(
        "富文本",
        "Rich text"
    ),
    _uA(
        "该功能正在开发中",
        "This function is under development"
    ),
    _uA(
        "圆形",
        "Circle"
    ),
    _uA(
        "组合",
        "Combination"
    ),
    _uA(
        "基础用法",
        "Basic usage"
    ),
    _uA(
        "自定义",
        "Customize"
    ),
    _uA(
        "加快滚动速度",
        "Speed up scrolling"
    ),
    _uA(
        "显示小数位数",
        "Display decimal places"
    ),
    _uA(
        "自定义样式",
        "Custom style"
    ),
    _uA(
        "自定义颜色",
        "Custom color"
    ),
    _uA(
        "结合列表使用",
        "Use in combination with list"
    ),
    _uA(
        "多列排序",
        "Multi-column sorting"
    ),
    _uA(
        "结合图片使用",
        "Use in combination with picture"
    ),
    _uA(
        "禁用手势",
        "Disable gestures"
    ),
    _uA(
        "自定义样式2",
        "Custom style 2"
    ),
    _uA(
        "无图片",
        "No picture"
    ),
    _uA(
        "圆角",
        "Rounded corners"
    ),
    _uA(
        "自定义大小",
        "Custom size"
    ),
    _uA(
        "手机号脱敏",
        "Mobile number desensitization"
    ),
    _uA(
        "姓名脱敏",
        "Name desensitization"
    ),
    _uA(
        "邮箱脱敏",
        "Email desensitization"
    ),
    _uA(
        "银行卡脱敏",
        "Bank card desensitization"
    ),
    _uA(
        "金额",
        "Amount"
    ),
    _uA(
        "自定义脱敏字符",
        "Custom desensitization character"
    ),
    _uA(
        "省略号",
        "Ellipsis"
    ),
    _uA(
        "主要",
        "Main"
    ),
    _uA(
        "危险",
        "Dangerous"
    ),
    _uA(
        "信息",
        "Information"
    ),
    _uA(
        "邮件",
        "Mail"
    ),
    _uA(
        "日历",
        "Calendar"
    ),
    _uA(
        "文件",
        "File"
    ),
    _uA(
        "可关闭",
        "Closable"
    ),
    _uA(
        "镂空",
        "Hollowed out"
    ),
    _uA(
        "自定义无圆角",
        "Custom without rounded corners"
    ),
    _uA(
        "不同裁剪",
        "Different cropping"
    ),
    _uA(
        "点击可预览",
        "Click to preview"
    ),
    _uA(
        "失败时显示",
        "Show when failed"
    ),
    _uA(
        "自定义圆角",
        "Custom rounded corners"
    ),
    _uA(
        "设置颜色",
        "Set color"
    ),
    _uA(
        "设置大小",
        "Set size"
    ),
    _uA(
        "集成 iconfont 与 remixicon 图标库，展示部分示例",
        "Integrate iconfont and remixicon icon libraries and show some examples"
    ),
    _uA(
        "iconfont",
        "iconfont"
    ),
    _uA(
        "remixicon",
        "remixicon"
    ),
    _uA(
        "复制成功",
        "Copy successful"
    ),
    _uA(
        "普通",
        "Normal"
    ),
    _uA(
        "浅色",
        "Light color"
    ),
    _uA(
        "深色",
        "Dark color"
    ),
    _uA(
        "只显示图标",
        "Only show icons"
    ),
    _uA(
        "文本模式",
        "Text mode"
    ),
    _uA(
        "带边框",
        "With border"
    ),
    _uA(
        "自定义宽度",
        "Custom width"
    ),
    _uA(
        "不显示文本",
        "Do not display text"
    ),
    _uA(
        "改个颜色",
        "Change the color"
    ),
    _uA(
        "显示文本",
        "Display text"
    ),
    _uA(
        "快一些",
        "Faster"
    ),
    _uA(
        "带图标",
        "With icon"
    ),
    _uA(
        "设置速度",
        "Set speed"
    ),
    _uA(
        "垂直方向",
        "Vertical direction"
    ),
    _uA(
        "3秒后加载完成",
        "Load completed after 3 seconds"
    ),
    _uA(
        "隐藏为 00 的值",
        "Hide the value of 00"
    ),
    _uA(
        "指定天数",
        "Specify days"
    ),
    _uA(
        "自定义模板",
        "Custom template"
    ),
    _uA(
        "指定小时",
        "Specify hours"
    ),
    _uA(
        "指定分钟",
        "Specify minutes"
    ),
    _uA(
        "指定秒",
        "Specify seconds"
    ),
    _uA(
        "完成后提示",
        "Prompt after completion"
    ),
    _uA(
        "结合按钮",
        "Combine buttons"
    ),
    _uA(
        "购买",
        "Purchase"
    ),
    _uA(
        "消息",
        "Message"
    ),
    _uA(
        "结合图片",
        "Combine pictures"
    ),
    _uA(
        "完成首笔交易",
        "Complete the first transaction"
    ),
    _uA(
        "优选灵活配置混合A",
        "Preferred Flexible Allocation Hybrid A"
    ),
    _uA(
        "1000元起",
        "Starting from 1000 yuan"
    ),
    _uA(
        "多页数",
        "Multiple pages"
    ),
    _uA(
        "上一页",
        "Previous page"
    ),
    _uA(
        "下一页",
        "Next page"
    ),
    _uA(
        "内容靠左",
        "Content aligned to the left"
    ),
    _uA(
        "QQ",
        "QQ"
    ),
    _uA(
        "带箭头",
        "With arrow"
    ),
    _uA(
        "余额",
        "Balance"
    ),
    _uA(
        "折叠",
        "Fold"
    ),
    _uA(
        "可滑动",
        "Scrollable"
    ),
    _uA(
        "左滑编辑",
        "Swipe left to edit"
    ),
    _uA(
        "编辑",
        "Edit"
    ),
    _uA(
        "右滑删除",
        "Swipe right to delete"
    ),
    _uA(
        "删除",
        "Delete"
    ),
    _uA(
        "账号",
        "Account"
    ),
    _uA(
        "我的订单",
        "My orders"
    ),
    _uA(
        "我的收藏",
        "My favorites"
    ),
    _uA(
        "单列排序",
        "Single-column sorting"
    ),
    _uA(
        "开发中，敬请期待",
        "Under development, please stay tuned"
    ),
    _uA(
        "手机登录",
        "Mobile login"
    ),
    _uA(
        "未注册的手机号登录成功后将自动注册",
        "Automatically register when logging in with an unregistered mobile number"
    ),
    _uA(
        "请输入手机号",
        "Please enter your mobile number"
    ),
    _uA(
        "请输入验证码",
        "Please enter the verification code"
    ),
    _uA(
        "登录",
        "Login"
    ),
    _uA(
        "开启通知",
        "Enable notifications"
    ),
    _uA(
        "通用设置",
        "General settings"
    ),
    _uA(
        "通知设置",
        "Notification settings"
    ),
    _uA(
        "隐私设置",
        "Privacy settings"
    ),
    _uA(
        "关于{name}",
        "About {name}"
    ),
    _uA(
        "联系客服",
        "Contact customer service"
    ),
    _uA(
        "退出登录",
        "Logout"
    ),
    _uA(
        "确定退出登录吗？",
        "Are you sure you want to log out?"
    ),
    _uA(
        "深色模式",
        "Dark mode"
    ),
    _uA(
        "多语言",
        "Multi-language"
    ),
    _uA(
        "访问官网",
        "Visit official website"
    ),
    _uA(
        "未登录",
        "Not logged in"
    ),
    _uA(
        "总点击",
        "Total clicks"
    ),
    _uA(
        "赞",
        "Like"
    ),
    _uA(
        "是否同一天",
        "Whether on the same day"
    ),
    _uA(
        "是否早于",
        "Whether earlier than"
    ),
    _uA(
        "是否晚于",
        "Whether later than"
    ),
    _uA(
        "差值",
        "Difference"
    ),
    _uA(
        "差值（单位）",
        "Difference (unit)"
    ),
    _uA(
        "选择图片",
        "Select picture"
    ),
    _uA(
        "可调节裁剪框大小",
        "Adjustable crop box size"
    ),
    _uA(
        "标题",
        "Title"
    ),
    _uA(
        "插槽",
        "Slot"
    ),
    _uA(
        "自定义返回图标",
        "Custom return icon"
    ),
    _uA(
        "自定义返回路径",
        "Custom return path"
    ),
    _uA(
        "自定义标题内容",
        "Custom title content"
    ),
    _uA(
        "显示滑块",
        "Show slider"
    ),
    _uA(
        "添加间距",
        "Add spacing"
    ),
    _uA(
        "横向填充",
        "Horizontal fill"
    ),
    _uA(
        "适用于标签数量不多的情况",
        "Suitable for the case of few labels"
    ),
    _uA(
        "居中",
        "Center"
    ),
    _uA(
        "单个禁用",
        "Single disable"
    ),
    _uA(
        "显示下划线",
        "Show underline"
    ),
    _uA(
        "禁用",
        "Disable"
    ),
    _uA(
        "圆角按钮",
        "Rounded corner button"
    ),
    _uA(
        "带左侧图标",
        "With left icon"
    ),
    _uA(
        "小",
        "Small"
    ),
    _uA(
        "默认",
        "Default"
    ),
    _uA(
        "大",
        "Large"
    ),
    _uA(
        "无权限",
        "No permission"
    ),
    _uA(
        "服务异常",
        "Service exception"
    ),
    _uA(
        "获取短信验证码",
        "Get SMS verification code"
    ),
    _uA(
        "验证码",
        "Verification code"
    ),
    _uA(
        "发送短信",
        "Send SMS"
    ),
    _uA(
        "{n}s后重新获取",
        "Re-get after {n}s"
    ),
    _uA(
        "获取验证码",
        "Get verification code"
    ),
    _uA(
        "短信已发送，请查收",
        "The SMS has been sent, please check"
    ),
    _uA(
        "请填写验证码",
        "Please fill in the verification code"
    ),
    _uA(
        "请填写正确的手机号格式",
        "Please fill in the correct mobile phone number format"
    ),
    _uA(
        "全局字号",
        "Global font size"
    ),
    _uA(
        "这是一段示例文字，用于预览不同字号的效果。",
        "This is a sample text for previewing the effects of different font sizes."
    ),
    _uA(
        "默认 1.0",
        "Default 1.0"
    ),
    _uA(
        "切换语言",
        "Switch language"
    ),
    _uA(
        "page.设置",
        "Settings"
    ),
    _uA(
        "不需要取消按钮",
        "Do not need cancel button"
    ),
    _uA(
        "插槽用法",
        "Slot usage"
    ),
    _uA(
        "反馈",
        "Feedback"
    ),
    _uA(
        "删除好友会同时删除所有聊天记录",
        "Deleting a friend will also delete all chat records"
    ),
    _uA(
        "删除好友",
        "Delete friend"
    ),
    _uA(
        "确定要删除好友吗？",
        "Are you sure you want to delete a friend?"
    ),
    _uA(
        "删除成功",
        "Delete successfully"
    ),
    _uA(
        "点我关闭",
        "Click me to close"
    ),
    _uA(
        "确定要关闭吗？",
        "Are you sure you want to close?"
    ),
    _uA(
        "支付成功",
        "Payment successful"
    ),
    _uA(
        "支付宝",
        "Alipay"
    ),
    _uA(
        "微信",
        "WeChat"
    ),
    _uA(
        "开通账号",
        "Open an account"
    ),
    _uA(
        "赠送500元",
        "Give 500 yuan"
    ),
    _uA(
        "完成实名认证",
        "Complete real-name authentication"
    ),
    _uA(
        "通过身份证认证",
        "Authenticate through ID card"
    ),
    _uA(
        "绑定银行卡",
        "Bind bank card"
    ),
    _uA(
        "绑定招商银行储蓄卡",
        "Bind China Merchants Bank savings card"
    ),
    _uA(
        "首次充值",
        "First recharge"
    ),
    _uA(
        "充值1000元",
        "Recharge 1000 yuan"
    ),
    _uA(
        "最少需要{min}个字符",
        "At least {min} characters are required"
    ),
    _uA(
        "最大值为{max}",
        "The maximum value is {max}"
    ),
    _uA(
        "最多允许{max}个字符",
        "A maximum of {max} characters are allowed"
    ),
    _uA(
        "格式不正确",
        "The format is incorrect"
    ),
    _uA(
        "验证失败",
        "Verification failed"
    ),
    _uA(
        "暂无数据",
        "No data available"
    ),
    _uA(
        "已阅读并同意",
        "Have read and agreed"
    ),
    _uA(
        "用户协议",
        "User Agreement"
    ),
    _uA(
        "隐私政策",
        "Privacy Policy"
    ),
    _uA(
        "请先阅读并同意《用户协议》和《隐私政策》",
        "Please read and agree to the User Agreement and Privacy Policy first"
    ),
    _uA(
        "我的昵称",
        "My nickname"
    ),
    _uA(
        "简介",
        "Profile"
    ),
    _uA(
        "介绍一下自己",
        "Introduce yourself"
    ),
    _uA(
        "性别",
        "Gender"
    ),
    _uA(
        "编辑性别",
        "Edit gender"
    ),
    _uA(
        "生日",
        "Birthday"
    ),
    _uA(
        "选择生日",
        "Select birthday"
    ),
    _uA(
        "地区",
        "Region"
    ),
    _uA(
        "选择所在的地区",
        "Select your region"
    ),
    _uA(
        "选择性别",
        "Select gender"
    ),
    _uA(
        "时:分",
        "Time:Minute"
    ),
    _uA(
        "时:分:秒",
        "Time:Minute:Second"
    ),
    _uA(
        "标签格式化",
        "Label Formatting"
    ),
    _uA(
        "固定开始、结束日期",
        "Fixed Start and End Dates"
    ),
    _uA(
        "自定义快捷选项",
        "Custom Shortcut Options"
    ),
    _uA(
        "只读",
        "Read Only"
    ),
    _uA(
        "显示分数",
        "Display Fraction"
    ),
    _uA(
        "允许半星",
        "Allow Half Star"
    ),
    _uA(
        "换个图标",
        "Change Icon"
    ),
    _uA(
        "纵向排列",
        "Vertical Arrangement"
    ),
    _uA(
        "换个样式",
        "Change Style"
    ),
    _uA(
        "不显示图标",
        "Hide Icon"
    ),
    _uA(
        "其他样式",
        "Other Styles"
    ),
    _uA(
        "打开键盘",
        "Open Keyboard"
    ),
    _uA(
        "是否显示输入值",
        "Show Input Value"
    ),
    _uA(
        "输入即绑定",
        "Input Binding"
    ),
    _uA(
        "身份证键盘",
        "ID Card Keyboard"
    ),
    _uA(
        "是否加密",
        "Encryption"
    ),
    _uA(
        "车牌号键盘",
        "License Plate Keyboard"
    ),
    _uA(
        "数字输入",
        "Numeric Input"
    ),
    _uA(
        "近30天",
        "Last 30 days"
    ),
    _uA(
        "近90天",
        "Last 90 days"
    ),
    _uA(
        "近一年",
        "Last year"
    ),
    _uA(
        "请选择完整时间范围",
        "Please select a complete time range"
    ),
    _uA(
        "开始日期不能大于结束日期",
        "The start date cannot be greater than the end date"
    ),
    _uA(
        "提示",
        "Tip"
    ),
    _uA(
        "没有更多了",
        "There is no more"
    ),
    _uA(
        "下拉刷新",
        "Pull down to refresh"
    ),
    _uA(
        "释放立即刷新",
        "Release to refresh immediately"
    ),
    _uA(
        "密码键盘",
        "Password keyboard"
    ),
    _uA(
        "安全键盘，请放心输入",
        "Secure keyboard, enter with confidence"
    ),
    _uA(
        "请输入内容",
        "Please enter content"
    ),
    _uA(
        "请输入{minlength}到{maxlength}位密码",
        "Please enter a password of {minlength} to {maxlength} digits"
    ),
    _uA(
        "最多输入{maxlength}位",
        "Maximum input of {maxlength} digits"
    ),
    _uA(
        "数字键盘",
        "Numeric keyboard"
    ),
    _uA(
        "身份证号码格式不正确",
        "Incorrect ID number format"
    ),
    _uA(
        "车牌键盘",
        "License plate keyboard"
    ),
    _uA(
        "车牌号格式不正确",
        "Incorrect license plate number format"
    ),
    _uA(
        "此字段为必填项",
        "This field is required"
    ),
    _uA(
        "最小值为{min}",
        "The minimum value is {min}"
    ),
    _uA(
        "保密",
        "Confidential"
    ),
    _uA(
        "男",
        "Male"
    ),
    _uA(
        "女",
        "Female"
    ),
    _uA(
        "性别设置成功",
        "Gender setting successful"
    ),
    _uA(
        "生日设置成功",
        "Birthday setting successful"
    ),
    _uA(
        "地区设置成功",
        "Region setting successful"
    ),
    _uA(
        "头像上传成功",
        "Avatar upload successful"
    ),
    _uA(
        "编辑昵称",
        "Edit nickname"
    ),
    _uA(
        "请输入昵称",
        "Please enter a nickname"
    ),
    _uA(
        "请设置2-20个字符，不包括@<>/等无效字符",
        "Please set 2-20 characters, excluding invalid characters such as @<>/"
    ),
    _uA(
        "确认",
        "Confirm"
    ),
    _uA(
        "昵称长度需在2-20个字符之间",
        "Nickname length should be between 2-20 characters"
    ),
    _uA(
        "昵称不能包含@<>/等特殊字符",
        "Nickname cannot contain special characters such as @<>/"
    ),
    _uA(
        "编辑简介",
        "Edit profile"
    ),
    _uA(
        "简介不能为空",
        "Profile cannot be empty"
    ),
    _uA(
        "为提供更好的服务，我们邀请您填写昵称、头像等公开信息",
        "To provide better service, we invite you to fill in public information such as nickname, avatar, etc."
    ),
    _uA(
        "头像",
        "Avatar"
    ),
    _uA(
        "昵称",
        "Nickname"
    ),
    _uA(
        "点击输入昵称",
        "Click to enter nickname"
    ),
    _uA(
        "请上传头像",
        "Please upload an avatar"
    )
)
val es = _uA(
    _uA(
        "折叠面板",
        "Panel desplegable"
    ),
    _uA(
        "吸顶",
        "Encima fijo"
    ),
    _uA(
        "导航栏",
        "Barra de navegación"
    ),
    _uA(
        "底部视图",
        "Vista inferior"
    ),
    _uA(
        "悬浮视图",
        "Vista flotante"
    ),
    _uA(
        "数据展示",
        "Presentación de datos"
    ),
    _uA(
        "列表",
        "Lista"
    ),
    _uA(
        "列表视图",
        "Vista de lista"
    ),
    _uA(
        "列表刷新",
        "Actualización de lista"
    ),
    _uA(
        "瀑布流",
        "Flujo de cascada"
    ),
    _uA(
        "轮播图",
        "Carrusel"
    ),
    _uA(
        "分页",
        "Paginación"
    ),
    _uA(
        "时间轴",
        "Eje de tiempo"
    ),
    _uA(
        "拖拽",
        "Arrastre"
    ),
    _uA(
        "状态组件",
        "Componente de estado"
    ),
    _uA(
        "角标",
        "Marcador"
    ),
    _uA(
        "通知栏",
        "Barra de notificaciones"
    ),
    _uA(
        "倒计时",
        "Contador regresivo"
    ),
    _uA(
        "数字滚动",
        "Desplazamiento numérico"
    ),
    _uA(
        "进度条",
        "Barra de progreso"
    ),
    _uA(
        "page.通用设置",
        "Configuración general"
    ),
    _uA(
        "page.通知设置",
        "Configuración de notificaciones"
    ),
    _uA(
        "page.联系客服",
        "Contactar con el servicio al cliente"
    ),
    _uA(
        "page.编辑资料",
        "Editar información"
    ),
    _uA(
        "首页",
        "Página de inicio"
    ),
    _uA(
        "我的",
        "Mío"
    ),
    _uA(
        "标签最多选择2个",
        "Máximo 2 etiquetas seleccionadas"
    ),
    _uA(
        "性别不能为空",
        "El género no puede estar vacío"
    ),
    _uA(
        "所在地区不能为空",
        "La región no puede estar vacía"
    ),
    _uA(
        "出生年月不能为空",
        "La fecha de nacimiento no puede estar vacía"
    ),
    _uA(
        "出生年月不大于2010-01-01",
        "La fecha de nacimiento no puede ser mayor a 2010-01-01"
    ),
    _uA(
        "提交成功",
        "Envío exitoso"
    ),
    _uA(
        "单个 true / false",
        "Individual true / false"
    ),
    _uA(
        "带索引、地区选择",
        "Con índice, selección de región"
    ),
    _uA(
        "换个分隔符",
        "Cambia el separador"
    ),
    _uA(
        "列表高度小一点",
        "Menos altura de lista"
    ),
    _uA(
        "打开",
        "Abrir"
    ),
    _uA(
        "不同位置",
        "Diferentes ubicaciones"
    ),
    _uA(
        "顶部",
        "Arriba"
    ),
    _uA(
        "中间",
        "Medio"
    ),
    _uA(
        "底部",
        "Abajo"
    ),
    _uA(
        "不同类型",
        "Diferentes tipos"
    ),
    _uA(
        "成功",
        "Éxito"
    ),
    _uA(
        "失败",
        "Fallo"
    ),
    _uA(
        "警告",
        "Advertencia"
    ),
    _uA(
        "问题",
        "Problema"
    ),
    _uA(
        "时:分",
        "Hora:Minuto"
    ),
    _uA(
        "时:分:秒",
        "Hora:Minuto:Segundo"
    ),
    _uA(
        "标签格式化",
        "Formato de etiqueta"
    ),
    _uA(
        "固定开始、结束日期",
        "Fecha de inicio y fin fijas"
    ),
    _uA(
        "自定义快捷选项",
        "Opciones rápidas personalizadas"
    ),
    _uA(
        "只读",
        "Solo lectura"
    ),
    _uA(
        "显示分数",
        "Mostrar fracciones"
    ),
    _uA(
        "允许半星",
        "Permitir media estrella"
    ),
    _uA(
        "换个图标",
        "Cambiar el icono"
    ),
    _uA(
        "纵向排列",
        "Arreglo vertical"
    ),
    _uA(
        "换个样式",
        "Cambiar el estilo"
    ),
    _uA(
        "不显示图标",
        "No mostrar icono"
    ),
    _uA(
        "其他样式",
        "Otros estilos"
    ),
    _uA(
        "打开键盘",
        "Abrir el teclado"
    ),
    _uA(
        "是否显示输入值",
        "Mostrar el valor de entrada"
    ),
    _uA(
        "输入即绑定",
        "Asociación al ingresar"
    ),
    _uA(
        "身份证键盘",
        "Teclado de DNI"
    ),
    _uA(
        "是否加密",
        "Encriptado"
    ),
    _uA(
        "车牌号键盘",
        "Teclado de matrícula"
    ),
    _uA(
        "数字输入",
        "Ingreso numérico"
    ),
    _uA(
        "加载中",
        "Cargando"
    ),
    _uA(
        "上传 / 拍摄",
        "Subir / Tomar"
    ),
    _uA(
        "请输入",
        "Por favor, ingrese"
    ),
    _uA(
        "请选择",
        "Por favor, seleccione"
    ),
    _uA(
        "小时",
        "Horas"
    ),
    _uA(
        "分钟",
        "Minutos"
    ),
    _uA(
        "秒数",
        "Segundos"
    ),
    _uA(
        "确定",
        "Aceptar"
    ),
    _uA(
        "取消",
        "Cancelar"
    ),
    _uA(
        "年",
        "Año"
    ),
    _uA(
        "月",
        "Mes"
    ),
    _uA(
        "日",
        "Día"
    ),
    _uA(
        "时",
        "Hora"
    ),
    _uA(
        "分",
        "Minuto"
    ),
    _uA(
        "秒",
        "Segundo"
    ),
    _uA(
        "开始日期",
        "Fecha de inicio"
    ),
    _uA(
        "结束日期",
        "Fecha de fin"
    ),
    _uA(
        "至",
        "Hasta"
    ),
    _uA(
        "今天",
        "Hoy"
    ),
    _uA(
        "近7天",
        "Últimos 7 días"
    ),
    _uA(
        "收藏",
        "Colección"
    ),
    _uA(
        "粉丝",
        "Seguidores"
    ),
    _uA(
        "接单模式",
        "Modelo de recepción de pedidos"
    ),
    _uA(
        "已关闭",
        "Cerrado"
    ),
    _uA(
        "消息通知",
        "Notificaciones de mensajes"
    ),
    _uA(
        "待支付",
        "Pendiente de pago"
    ),
    _uA(
        "未发货",
        "No enviado"
    ),
    _uA(
        "已发货",
        "Enviado"
    ),
    _uA(
        "售后 / 退款",
        "Servicio después de la venta / Reembolso"
    ),
    _uA(
        "我的钱包",
        "Mi billetera"
    ),
    _uA(
        "数据看板",
        "Tablero de datos"
    ),
    _uA(
        "历史记录",
        "Historial"
    ),
    _uA(
        "邀请好友",
        "Invitar amigos"
    ),
    _uA(
        "设置",
        "Configuración"
    ),
    _uA(
        "基础组件",
        "Componentes básicos"
    ),
    _uA(
        "文本",
        "Texto"
    ),
    _uA(
        "按钮",
        "Botón"
    ),
    _uA(
        "图片",
        "Imagen"
    ),
    _uA(
        "图标",
        "Ícono"
    ),
    _uA(
        "标签",
        "Etiqueta"
    ),
    _uA(
        "表单组件",
        "Componentes de formulario"
    ),
    _uA(
        "表单验证",
        "Validación de formulario"
    ),
    _uA(
        "输入框",
        "Campo de entrada"
    ),
    _uA(
        "文本域",
        "Área de texto"
    ),
    _uA(
        "计数器",
        "Contador"
    ),
    _uA(
        "口令输入",
        "Ingreso de contraseña"
    ),
    _uA(
        "键盘",
        "Teclado"
    ),
    _uA(
        "单选框",
        "Checkbox"
    ),
    _uA(
        "多选框",
        "Radiobutton"
    ),
    _uA(
        "开关",
        "Switch"
    ),
    _uA(
        "评分",
        "Evaluación"
    ),
    _uA(
        "滑块",
        "Deslizador"
    ),
    _uA(
        "选择器",
        "Selector"
    ),
    _uA(
        "日期选择器",
        "Selector de fecha"
    ),
    _uA(
        "时间选择器",
        "Selector de hora"
    ),
    _uA(
        "级联选择器",
        "Selector en cascada"
    ),
    _uA(
        "文件上传",
        "Carga de archivo"
    ),
    _uA(
        "布局组件",
        "Componentes de diseño"
    ),
    _uA(
        "弹性布局",
        "Diseño flexible"
    ),
    _uA(
        "标签页",
        "Pestañas"
    ),
    _uA(
        "结合图标",
        "Combinar iconos"
    ),
    _uA(
        "点击触发",
        "Click para activar"
    ),
    _uA(
        "操作",
        "Operación"
    ),
    _uA(
        "清空",
        "Vaciar"
    ),
    _uA(
        "预览",
        "Vista previa"
    ),
    _uA(
        "设置高度",
        "Establecer altura"
    ),
    _uA(
        "毛笔效果",
        "Efecto de pincel"
    ),
    _uA(
        "添加LOGO",
        "Agregar LOGO"
    ),
    _uA(
        "圆角定位点",
        "Punto de posición redondeado"
    ),
    _uA(
        "内间距",
        "Espaciado interior"
    ),
    _uA(
        "导出图片",
        "Exportar imagen"
    ),
    _uA(
        "矩形",
        "Rectángulo"
    ),
    _uA(
        "点",
        "Punto"
    ),
    _uA(
        "线性",
        "Lineal"
    ),
    _uA(
        "小方格",
        "Cuadraditos"
    ),
    _uA(
        "格式化",
        "Formatear"
    ),
    _uA(
        "添加",
        "Agregar"
    ),
    _uA(
        "减去",
        "Restar"
    ),
    _uA(
        "获取某个单位的开始时间",
        "Obtener la hora de inicio de una unidad"
    ),
    _uA(
        "获取某个单位的结束时间",
        "Obtener la hora de finalización de una unidad"
    ),
    _uA(
        "自定义宽度",
        "Ancho personalizado"
    ),
    _uA(
        "不显示文本",
        "No mostrar texto"
    ),
    _uA(
        "改个颜色",
        "Cambiar el color"
    ),
    _uA(
        "显示文本",
        "Mostrar texto"
    ),
    _uA(
        "快一些",
        "Más rápido"
    ),
    _uA(
        "带图标",
        "Con icono"
    ),
    _uA(
        "设置速度",
        "Establecer velocidad"
    ),
    _uA(
        "垂直方向",
        "Dirección vertical"
    ),
    _uA(
        "3秒后加载完成",
        "Se carga completamente después de 3 segundos"
    ),
    _uA(
        "隐藏为 00 的值",
        "Ocultar los valores de 00"
    ),
    _uA(
        "指定天数",
        "Días especificados"
    ),
    _uA(
        "自定义模板",
        "Plantilla personalizada"
    ),
    _uA(
        "指定小时",
        "Horas especificadas"
    ),
    _uA(
        "指定分钟",
        "Minutos especificados"
    ),
    _uA(
        "指定秒",
        "Segundos especificados"
    ),
    _uA(
        "完成后提示",
        "Mensaje de aviso después de completar"
    ),
    _uA(
        "结合按钮",
        "Combinar botones"
    ),
    _uA(
        "购买",
        "Comprar"
    ),
    _uA(
        "消息",
        "Mensaje"
    ),
    _uA(
        "结合图片",
        "Combinar imágenes"
    ),
    _uA(
        "文件",
        "Documento"
    ),
    _uA(
        "可关闭",
        "Cerrarable"
    ),
    _uA(
        "镂空",
        "Perforado"
    ),
    _uA(
        "自定义无圆角",
        "Personalizado sin esquinas redondeadas"
    ),
    _uA(
        "不同裁剪",
        "Diferentes recortes"
    ),
    _uA(
        "点击可预览",
        "Pulsar para visualizar"
    ),
    _uA(
        "失败时显示",
        "Mostrar en caso de error"
    ),
    _uA(
        "自定义圆角",
        "Esquinas redondeadas personalizadas"
    ),
    _uA(
        "设置颜色",
        "Establecer color"
    ),
    _uA(
        "设置大小",
        "Establecer tamaño"
    ),
    _uA(
        "集成 iconfont 与 remixicon 图标库，展示部分示例",
        "Integrar las bibliotecas de iconos iconfont y remixicon y mostrar algunos ejemplos"
    ),
    _uA(
        "iconfont",
        "iconfont"
    ),
    _uA(
        "remixicon",
        "remixicon"
    ),
    _uA(
        "复制成功",
        "Copia exitosa"
    ),
    _uA(
        "普通",
        "Normal"
    ),
    _uA(
        "浅色",
        "Claro"
    ),
    _uA(
        "深色",
        "Oscuro"
    ),
    _uA(
        "只显示图标",
        "Mostrar solo iconos"
    ),
    _uA(
        "文本模式",
        "Modo de texto"
    ),
    _uA(
        "带边框",
        "Con borde"
    ),
    _uA(
        "完成首笔交易",
        "Completar la primera transacción"
    ),
    _uA(
        "优选灵活配置混合A",
        "Mejora de configuración flexible mixta A"
    ),
    _uA(
        "1000元起",
        "A partir de 1000 yuan"
    ),
    _uA(
        "多页数",
        "Múltiples páginas"
    ),
    _uA(
        "上一页",
        "Página anterior"
    ),
    _uA(
        "下一页",
        "Página siguiente"
    ),
    _uA(
        "内容靠左",
        "Contenido alineado a la izquierda"
    ),
    _uA(
        "QQ",
        "QQ"
    ),
    _uA(
        "带箭头",
        "Con flecha"
    ),
    _uA(
        "余额",
        "Saldo"
    ),
    _uA(
        "折叠",
        "Desplegable"
    ),
    _uA(
        "可滑动",
        "Deslizable"
    ),
    _uA(
        "左滑编辑",
        "Deslizar hacia la izquierda para editar"
    ),
    _uA(
        "编辑",
        "Editar"
    ),
    _uA(
        "右滑删除",
        "Deslizar hacia la derecha para eliminar"
    ),
    _uA(
        "删除",
        "Eliminar"
    ),
    _uA(
        "账号",
        "Cuenta"
    ),
    _uA(
        "我的订单",
        "Mis pedidos"
    ),
    _uA(
        "我的收藏",
        "Mis favoritos"
    ),
    _uA(
        "单列排序",
        "Ordenamiento por columna única"
    ),
    _uA(
        "个人简介",
        "Perfil personal"
    ),
    _uA(
        "请输入个人简介",
        "Ingrese su perfil personal"
    ),
    _uA(
        "公开状态",
        "Estado público"
    ),
    _uA(
        "重置",
        "Restablecer"
    ),
    _uA(
        "提交",
        "Enviar"
    ),
    _uA(
        "未知",
        "Desconocido"
    ),
    _uA(
        "篮球",
        "Baloncesto"
    ),
    _uA(
        "足球",
        "Fútbol"
    ),
    _uA(
        "羽毛球",
        "Tenis de mesa"
    ),
    _uA(
        "乒乓球",
        "Ping pong"
    ),
    _uA(
        "游泳",
        "Natación"
    ),
    _uA(
        "用户名不能为空",
        "El nombre de usuario no puede estar vacío"
    ),
    _uA(
        "用户名长度在3-20个字符之间",
        "La longitud del nombre de usuario debe estar entre 3 y 20 caracteres"
    ),
    _uA(
        "邮箱不能为空",
        "El correo electrónico no puede estar vacío"
    ),
    _uA(
        "邮箱格式不正确",
        "El formato del correo electrónico es incorrecto"
    ),
    _uA(
        "身高不能为空",
        "La estatura no puede estar vacía"
    ),
    _uA(
        "身高在160-190cm之间",
        "La estatura debe estar entre 160 y 190 cm"
    ),
    _uA(
        "体重不能为空",
        "El peso no puede estar vacío"
    ),
    _uA(
        "体重在40-100kg之间",
        "El peso debe estar entre 40 y 100 kg"
    ),
    _uA(
        "标签不能为空",
        "La etiqueta no puede estar vacía"
    ),
    _uA(
        "密码输入",
        "Ingreso de contraseña"
    ),
    _uA(
        "可清除",
        "Puede limpiar"
    ),
    _uA(
        "左右插槽",
        "Ranuras izquierda y derecha"
    ),
    _uA(
        "左图标",
        "Ícono izquierdo"
    ),
    _uA(
        "右图标",
        "Ícono derecho"
    ),
    _uA(
        "自动聚焦",
        "Enfoque automático"
    ),
    _uA(
        "长度为6",
        "Tiene una longitud de 6"
    ),
    _uA(
        "步进为10",
        "Incremento de 10"
    ),
    _uA(
        "最小为10",
        "Mínimo de 10"
    ),
    _uA(
        "最大为50",
        "Máximo de 50"
    ),
    _uA(
        "可以小数",
        "Puede ser decimal"
    ),
    _uA(
        "可以输入",
        "Puede ingresar"
    ),
    _uA(
        "用户名",
        "Nombre de usuario"
    ),
    _uA(
        "请输入用户名",
        "Por favor, ingrese el nombre de usuario"
    ),
    _uA(
        "邮箱",
        "Correo electrónico"
    ),
    _uA(
        "请输入邮箱地址",
        "Por favor, ingrese la dirección de correo electrónico"
    ),
    _uA(
        "身高",
        "Altura"
    ),
    _uA(
        "体重",
        "Peso"
    ),
    _uA(
        "所在地区",
        "Región donde se encuentra"
    ),
    _uA(
        "出生年月",
        "Fecha de nacimiento"
    ),
    _uA(
        "是否同一天",
        "¿Es el mismo día?"
    ),
    _uA(
        "是否早于",
        "¿Es anterior a?"
    ),
    _uA(
        "是否晚于",
        "¿Es posterior a?"
    ),
    _uA(
        "差值",
        "Diferencia"
    ),
    _uA(
        "差值（单位）",
        "Unidad de diferencia"
    ),
    _uA(
        "选择图片",
        "Seleccionar imagen"
    ),
    _uA(
        "可调节裁剪框大小",
        "Tamaño del recuadro de recorte ajustable"
    ),
    _uA(
        "标题",
        "Título"
    ),
    _uA(
        "插槽",
        "Ranura"
    ),
    _uA(
        "自定义返回图标",
        "Ícono de retorno personalizado"
    ),
    _uA(
        "自定义返回路径",
        "Ruta de retorno personalizada"
    ),
    _uA(
        "自定义标题内容",
        "Contenido del título personalizado"
    ),
    _uA(
        "显示滑块",
        "Mostrar control deslizante"
    ),
    _uA(
        "添加间距",
        "Agregar espacio"
    ),
    _uA(
        "横向填充",
        "Relleno horizontal"
    ),
    _uA(
        "适用于标签数量不多的情况",
        "Aplicable a casos con pocos etiquetas"
    ),
    _uA(
        "居中",
        "Centrado"
    ),
    _uA(
        "单个禁用",
        "Deshabilitado individualmente"
    ),
    _uA(
        "显示下划线",
        "Mostrar subrayado"
    ),
    _uA(
        "禁用",
        "Deshabilitado"
    ),
    _uA(
        "结合列表使用",
        "Usar en combinación con la lista"
    ),
    _uA(
        "多列排序",
        "Ordenamiento de múltiples columnas"
    ),
    _uA(
        "结合图片使用",
        "Usar en combinación con la imagen"
    ),
    _uA(
        "禁用手势",
        "Deshabilitar gestos"
    ),
    _uA(
        "自定义样式2",
        "Estilo personalizado 2"
    ),
    _uA(
        "无图片",
        "Sin imagen"
    ),
    _uA(
        "圆角",
        "Esquinas redondeadas"
    ),
    _uA(
        "自定义大小",
        "Tamaño personalizado"
    ),
    _uA(
        "手机号脱敏",
        "Desensibilización del número de teléfono móvil"
    ),
    _uA(
        "姓名脱敏",
        "Desensibilización del nombre"
    ),
    _uA(
        "邮箱脱敏",
        "Desensibilización del correo electrónico"
    ),
    _uA(
        "银行卡脱敏",
        "Desensibilización de la tarjeta de banco"
    ),
    _uA(
        "金额",
        "Monto"
    ),
    _uA(
        "自定义脱敏字符",
        "Carácter de desensibilización personalizado"
    ),
    _uA(
        "省略号",
        "Signo de puntos suspensivos"
    ),
    _uA(
        "主要",
        "Principal"
    ),
    _uA(
        "危险",
        "Peligro"
    ),
    _uA(
        "信息",
        "Información"
    ),
    _uA(
        "邮件",
        "Correo electrónico"
    ),
    _uA(
        "日历",
        "Calendario"
    ),
    _uA(
        "不需要取消按钮",
        "No se necesita un botón de cancelación"
    ),
    _uA(
        "插槽用法",
        "Uso de ranuras"
    ),
    _uA(
        "反馈",
        "Retroalimentación"
    ),
    _uA(
        "删除好友会同时删除所有聊天记录",
        "La eliminación de un amigo eliminará todos los registros de chat al mismo tiempo"
    ),
    _uA(
        "删除好友",
        "Eliminar amigo"
    ),
    _uA(
        "确定要删除好友吗？",
        "¿Está seguro de eliminar el amigo?"
    ),
    _uA(
        "删除成功",
        "Eliminación exitosa"
    ),
    _uA(
        "点我关闭",
        "Ház clic en mí para cerrar"
    ),
    _uA(
        "确定要关闭吗？",
        "¿Está seguro de cerrar?"
    ),
    _uA(
        "支付成功",
        "Pago exitoso"
    ),
    _uA(
        "支付宝",
        "Alipay"
    ),
    _uA(
        "微信",
        "WeChat"
    ),
    _uA(
        "开通账号",
        "Abrir una cuenta"
    ),
    _uA(
        "赠送500元",
        "Regalar 500 yuan"
    ),
    _uA(
        "完成实名认证",
        "Completar la autenticación de identidad"
    ),
    _uA(
        "通过身份证认证",
        "Autenticación a través de la cédula de identidad"
    ),
    _uA(
        "绑定银行卡",
        "Asociar una tarjeta de banco"
    ),
    _uA(
        "绑定招商银行储蓄卡",
        "Asociar una tarjeta de débito de China Merchants Bank"
    ),
    _uA(
        "首次充值",
        "Primer recarga"
    ),
    _uA(
        "充值1000元",
        "Recargar 1000 yuan"
    ),
    _uA(
        "最少需要{min}个字符",
        "Se necesitan como mínimo {min} caracteres"
    ),
    _uA(
        "最大值为{max}",
        "El valor máximo es {max}"
    ),
    _uA(
        "最多允许{max}个字符",
        "Se permiten como máximo {max} caracteres"
    ),
    _uA(
        "格式不正确",
        "Formato incorrecto"
    ),
    _uA(
        "验证失败",
        "Validación fallida"
    ),
    _uA(
        "暂无数据",
        "No hay datos disponibles"
    ),
    _uA(
        "已阅读并同意",
        "He leído y aceptado"
    ),
    _uA(
        "用户协议",
        "Términos de usuario"
    ),
    _uA(
        "隐私政策",
        "Política de privacidad"
    ),
    _uA(
        "请先阅读并同意《用户协议》和《隐私政策》",
        "Por favor, lea y acepte los Términos de usuario y la Política de privacidad antes de continuar"
    ),
    _uA(
        "我的昵称",
        "Mi nombre de usuario"
    ),
    _uA(
        "简介",
        "Perfil"
    ),
    _uA(
        "介绍一下自己",
        "Déjanos conocerte"
    ),
    _uA(
        "性别",
        "Género"
    ),
    _uA(
        "编辑性别",
        "Editar género"
    ),
    _uA(
        "生日",
        "Fecha de nacimiento"
    ),
    _uA(
        "选择生日",
        "Seleccionar fecha de nacimiento"
    ),
    _uA(
        "地区",
        "Región"
    ),
    _uA(
        "选择所在的地区",
        "Seleccionar región"
    ),
    _uA(
        "选择性别",
        "Seleccionar género"
    ),
    _uA(
        "开发中，敬请期待",
        "En desarrollo, por favor espere"
    ),
    _uA(
        "手机登录",
        "Inicio de sesión en el móvil"
    ),
    _uA(
        "未注册的手机号登录成功后将自动注册",
        "Al iniciar con éxito un número de teléfono no registrado, se registrará automáticamente"
    ),
    _uA(
        "请输入手机号",
        "Ingrese su número de teléfono"
    ),
    _uA(
        "请输入验证码",
        "Ingrese el código de verificación"
    ),
    _uA(
        "登录",
        "Iniciar sesión"
    ),
    _uA(
        "开启通知",
        "Activar notificaciones"
    ),
    _uA(
        "通用设置",
        "Configuración general"
    ),
    _uA(
        "通知设置",
        "Configuración de notificaciones"
    ),
    _uA(
        "隐私设置",
        "Configuración de privacidad"
    ),
    _uA(
        "关于{name}",
        "Sobre {name}"
    ),
    _uA(
        "联系客服",
        "Contactar con el servicio de atención al cliente"
    ),
    _uA(
        "退出登录",
        "Cerrar sesión"
    ),
    _uA(
        "确定退出登录吗？",
        "¿Está seguro de cerrar la sesión?"
    ),
    _uA(
        "深色模式",
        "Modo oscuro"
    ),
    _uA(
        "多语言",
        "Multiidioma"
    ),
    _uA(
        "访问官网",
        "Acceder a la página web oficial"
    ),
    _uA(
        "未登录",
        "No iniciado"
    ),
    _uA(
        "总点击",
        "Total de clics"
    ),
    _uA(
        "赞",
        "Me gusta"
    ),
    _uA(
        "圆形进度条",
        "Barra de progreso circular"
    ),
    _uA(
        "骨架图",
        "Diagrama esqueleto"
    ),
    _uA(
        "加载更多",
        "Cargar más"
    ),
    _uA(
        "反馈组件",
        "Componente de retroalimentación"
    ),
    _uA(
        "操作菜单",
        "Menú de operaciones"
    ),
    _uA(
        "弹窗",
        "Ventana emergente"
    ),
    _uA(
        "确认框",
        "Cuadro de confirmación"
    ),
    _uA(
        "提示框",
        "Cuadro de advertencia"
    ),
    _uA(
        "签名",
        "Autógrafo"
    ),
    _uA(
        "图片裁剪",
        "Recorte de imágenes"
    ),
    _uA(
        "富文本",
        "Texto rico"
    ),
    _uA(
        "该功能正在开发中",
        "Esta función está en desarrollo"
    ),
    _uA(
        "圆形",
        "Círculo"
    ),
    _uA(
        "组合",
        "Combinación"
    ),
    _uA(
        "基础用法",
        "Uso básico"
    ),
    _uA(
        "自定义",
        "Personalización"
    ),
    _uA(
        "加快滚动速度",
        "Acelerar la velocidad de desplazamiento"
    ),
    _uA(
        "显示小数位数",
        "Mostrar número de decimales"
    ),
    _uA(
        "自定义样式",
        "Estilo personalizado"
    ),
    _uA(
        "自定义颜色",
        "Color personalizado"
    ),
    _uA(
        "停止",
        "Detener"
    ),
    _uA(
        "自定义图标",
        "Icono personalizado"
    ),
    _uA(
        "只存在一个",
        "Solo existe uno"
    ),
    _uA(
        "不同位置提示",
        "Indicación en diferentes ubicaciones"
    ),
    _uA(
        "不同类型提示",
        "Indicación de diferentes tipos"
    ),
    _uA(
        "带图标提示",
        "Indicación con icono"
    ),
    _uA(
        "移除其他已存在的提示",
        "Eliminar otras indicaciones existentes"
    ),
    _uA(
        "打开弹窗",
        "Abrir ventana emergente"
    ),
    _uA(
        "设置宽度 80%",
        "Establecer un ancho del 80%"
    ),
    _uA(
        "无头",
        "Sin cabeza"
    ),
    _uA(
        "左侧",
        "Izquierda"
    ),
    _uA(
        "右侧",
        "Derecha"
    ),
    _uA(
        "隐藏取消按钮",
        "Ocultar el botón de cancelar"
    ),
    _uA(
        "自定义文本",
        "Texto personalizado"
    ),
    _uA(
        "关闭前钩子",
        "Hook antes de cerrar"
    ),
    _uA(
        "显示时长",
        "Duración de visualización"
    ),
    _uA(
        "确定要删除吗？",
        "¿Está seguro de eliminar?"
    ),
    _uA(
        "确定要删除吗？3秒后自动关闭",
        "¿Está seguro de eliminar? Se cerrará automáticamente después de 3 segundos"
    ),
    _uA(
        "带标题、描述",
        "Con título y descripción"
    ),
    _uA(
        "无法点击遮罩关闭",
        "No se puede cerrar al hacer clic en el fondo"
    ),
    _uA(
        "圆角按钮",
        "Botón redondeado"
    ),
    _uA(
        "带左侧图标",
        "Con icono a la izquierda"
    ),
    _uA(
        "小",
        "Pequeño"
    ),
    _uA(
        "默认",
        "Predeterminado"
    ),
    _uA(
        "大",
        "Grande"
    ),
    _uA(
        "无权限",
        "Sin permiso"
    ),
    _uA(
        "服务异常",
        "Error del servicio"
    ),
    _uA(
        "获取短信验证码",
        "Obtener código de verificación de SMS"
    ),
    _uA(
        "验证码",
        "Código de verificación"
    ),
    _uA(
        "发送短信",
        "Enviar SMS"
    ),
    _uA(
        "{n}s后重新获取",
        "Volver a obtener en {n}s"
    ),
    _uA(
        "获取验证码",
        "Obtener código de verificación"
    ),
    _uA(
        "短信已发送，请查收",
        "El SMS se ha enviado, por favor revise."
    ),
    _uA(
        "请填写验证码",
        "Por favor ingrese el código de verificación"
    ),
    _uA(
        "请填写正确的手机号格式",
        "Por favor ingrese el formato correcto de número de teléfono móvil"
    ),
    _uA(
        "全局字号",
        "Tamaño de fuente global"
    ),
    _uA(
        "这是一段示例文字，用于预览不同字号的效果。",
        "Este es un texto de ejemplo para previsualizar los efectos de diferentes tamaños de fuente."
    ),
    _uA(
        "默认 1.0",
        "Predeterminado 1.0"
    ),
    _uA(
        "切换语言",
        "Cambiar idioma"
    ),
    _uA(
        "page.设置",
        "Configuración"
    ),
    _uA(
        "自动增高",
        "Alto automático"
    ),
    _uA(
        "其他颜色",
        "Otros colores"
    ),
    _uA(
        "大一点",
        "Un poco más grande"
    ),
    _uA(
        "正方形",
        "Cuadrado"
    ),
    _uA(
        "范围选择",
        "Selección de rango"
    ),
    _uA(
        "显示值",
        "Valor mostrado"
    ),
    _uA(
        "步长10",
        "Paso de 10"
    ),
    _uA(
        "滑块大点",
        "Slider más grande"
    ),
    _uA(
        "换个颜色",
        "Cambiar de color"
    ),
    _uA(
        "最大50",
        "Máximo 50"
    ),
    _uA(
        "自定义触发器",
        "Disparador personalizado"
    ),
    _uA(
        "打开选择器",
        "Abrir selector"
    ),
    _uA(
        "多列",
        "Múltiples columnas"
    ),
    _uA(
        "通过 children 配置多级数据，并使用 column-count 参数指定显示的列数",
        "Configurar datos jerárquicos a través de children y especificar el número de columnas mostradas con el parámetro column-count"
    ),
    _uA(
        "绑定值",
        "Valor vinculado"
    ),
    _uA(
        "下一步",
        "Siguiente"
    ),
    _uA(
        "关闭",
        "Cerrar"
    ),
    _uA(
        "显示取消按钮",
        "Mostrar botón de cancelación"
    ),
    _uA(
        "修改按钮文案",
        "Modificar el texto del botón"
    ),
    _uA(
        "显示绑定值",
        "Mostrar valor vinculado"
    ),
    _uA(
        "取消订单",
        "Cancelar pedido"
    ),
    _uA(
        "立即购买",
        "Comprar ahora"
    ),
    _uA(
        "确认收货",
        "Confirmar recepción"
    ),
    _uA(
        "评价",
        "Evaluar"
    ),
    _uA(
        "禁用状态，无法拖拽",
        "Estado deshabilitado, no se puede arrastrar"
    ),
    _uA(
        "不吸附边缘，任意位置可拖拽",
        "No se adhiere a los bordes, se puede arrastrar a cualquier posición"
    ),
    _uA(
        "这是一个提示",
        "Este es un mensaje"
    ),
    _uA(
        "左间隔",
        "Espaciado izquierdo"
    ),
    _uA(
        "右移动",
        "Mover hacia la derecha"
    ),
    _uA(
        "左移动",
        "Mover hacia la izquierda"
    ),
    _uA(
        "多个数据",
        "Varios datos"
    ),
    _uA(
        "点击收起",
        "Haga clic para contraer"
    ),
    _uA(
        "点击展开",
        "Haga clic para expandir"
    ),
    _uA(
        "ref 方式调用",
        "Llamada mediante el método ref"
    ),
    _uA(
        "自定义图标、文字、大小",
        "Icono, texto y tamaño personalizados"
    ),
    _uA(
        "上传证件照",
        "Subir foto de documento"
    ),
    _uA(
        "多选",
        "Selección múltiple"
    ),
    _uA(
        "限制 3 个",
        "Límite de 3"
    ),
    _uA(
        "边框",
        "Borde"
    ),
    _uA(
        "显示字数",
        "Número de caracteres mostrados"
    ),
    _uA(
        "近30天",
        "Últimos 30 días"
    ),
    _uA(
        "近90天",
        "Últimos 90 días"
    ),
    _uA(
        "近一年",
        "Último año"
    ),
    _uA(
        "请选择完整时间范围",
        "Seleccione un rango de tiempo completo"
    ),
    _uA(
        "开始日期不能大于结束日期",
        "La fecha de inicio no puede ser mayor que la fecha de finalización"
    ),
    _uA(
        "提示",
        "Sugerencia"
    ),
    _uA(
        "没有更多了",
        "No hay más"
    ),
    _uA(
        "下拉刷新",
        "Refrescar al deslizar hacia abajo"
    ),
    _uA(
        "释放立即刷新",
        "Liberar para actualizar inmediatamente"
    ),
    _uA(
        "密码键盘",
        "Teclado de contraseña"
    ),
    _uA(
        "安全键盘，请放心输入",
        "Teclado seguro, ingrese con confianza"
    ),
    _uA(
        "请输入内容",
        "Ingrese el contenido"
    ),
    _uA(
        "请输入{minlength}到{maxlength}位密码",
        "Ingrese una contraseña de {minlength} a {maxlength} dígitos"
    ),
    _uA(
        "最多输入{maxlength}位",
        "Máximo {maxlength} dígitos"
    ),
    _uA(
        "数字键盘",
        "Teclado numérico"
    ),
    _uA(
        "身份证号码格式不正确",
        "El formato del número de identificación personal es incorrecto"
    ),
    _uA(
        "车牌键盘",
        "Teclado de matrícula"
    ),
    _uA(
        "车牌号格式不正确",
        "El formato de la matrícula es incorrecto"
    ),
    _uA(
        "此字段为必填项",
        "Este campo es obligatorio"
    ),
    _uA(
        "最小值为{min}",
        "El valor mínimo es {min}"
    ),
    _uA(
        "保密",
        "Confidencial"
    ),
    _uA(
        "男",
        "Hombre"
    ),
    _uA(
        "女",
        "Mujer"
    ),
    _uA(
        "性别设置成功",
        "Configuración de género exitosa"
    ),
    _uA(
        "生日设置成功",
        "Configuración de cumpleaños exitosa"
    ),
    _uA(
        "地区设置成功",
        "Configuración de región exitosa"
    ),
    _uA(
        "头像上传成功",
        "Carga de avatar exitosa"
    ),
    _uA(
        "编辑昵称",
        "Editar nombre de usuario"
    ),
    _uA(
        "请输入昵称",
        "Ingrese su nombre de usuario"
    ),
    _uA(
        "请设置2-20个字符，不包括@<>/等无效字符",
        "Por favor, configure 2-20 caracteres, sin caracteres no válidos como @<>/"
    ),
    _uA(
        "确认",
        "Confirmar"
    ),
    _uA(
        "昵称长度需在2-20个字符之间",
        "La longitud del nombre de usuario debe estar entre 2 y 20 caracteres"
    ),
    _uA(
        "昵称不能包含@<>/等特殊字符",
        "El nombre de usuario no puede contener caracteres especiales como @<>/"
    ),
    _uA(
        "编辑简介",
        "Editar biografía"
    ),
    _uA(
        "简介不能为空",
        "La biografía no puede estar vacía"
    ),
    _uA(
        "为提供更好的服务，我们邀请您填写昵称、头像等公开信息",
        "Para brindar un mejor servicio, le invitamos a llenar información pública como nombre de usuario, avatar, etc."
    ),
    _uA(
        "头像",
        "Avatar"
    ),
    _uA(
        "昵称",
        "Nombre de usuario"
    ),
    _uA(
        "点击输入昵称",
        "Haga clic para ingresar su nombre de usuario"
    ),
    _uA(
        "请上传头像",
        "Por favor, cargue un avatar"
    )
)
val light: UTSJSONObject = object : UTSJSONObject() {
    var bgColor = "#f8f8f8"
    var bgContentColor = "#f8f8f8"
    var navBgColor = "#ffffff"
    var navTextStyle = "black"
    var tabColor = "#999999"
    var tabSelectedColor = "#14b8a6"
    var tabBorderStyle = "white"
    var tabBgColor = "#ffffff"
}
val dark: UTSJSONObject = object : UTSJSONObject() {
    var bgColor = "#191919"
    var bgContentColor = "#191919"
    var navBgColor = "#191919"
    var navTextStyle = "white"
    var tabColor = "#cccccc"
    var tabSelectedColor = "#ffffff"
    var tabBorderStyle = "black"
    var tabBgColor = "#191919"
}
val `default`: UTSJSONObject = _uO("light" to light, "dark" to dark)
fun isArray(value: Any): Boolean {
    return UTSArray.isArray(value)
}
fun isObject(value: Any): Boolean {
    return UTSAndroid.`typeof`(value) == "object" && !UTSArray.isArray(value) && !isNull(value)
}
fun isString(value: Any): Boolean {
    return UTSAndroid.`typeof`(value) == "string"
}
fun isFunction(value: Any): Boolean {
    return UTSAndroid.`typeof`(value) == "function"
}
fun isNull(value: Any?): Boolean {
    return value == null
}
fun isEmpty(value: Any): Boolean {
    if (isArray(value)) {
        return (value as UTSArray<Any>).length == 0
    }
    if (isString(value)) {
        return value == ""
    }
    if (isObject(value)) {
        return keys(value).length == 0
    }
    return false
}
fun keys(value: Any): UTSArray<String> {
    return UTSJSONObject.keys(value as UTSJSONObject)
}
fun <T> last(array: UTSArray<T>): T? {
    return if (isArray(array) && array.length > 0) {
        array[array.length - 1]
    } else {
        null
    }
}
fun has(kObject: Any, key: String): Boolean {
    return keys(kObject).includes(key)
}
fun get(kObject: Any, path: String, defaultValue: Any? = null): Any? {
    if (isNull(kObject)) {
        return defaultValue
    }
    val value = UTSJSONObject(kObject).getAny(path)
    if (isNull(value)) {
        return defaultValue
    }
    return value
}
fun <T, U> map(array: UTSArray<T>, iteratee: (item: T, index: Number) -> U): UTSArray<U> {
    val result: UTSArray<U> = _uA()
    if (!isArray(array)) {
        return result
    }
    run {
        var i: Number = 0
        while(i < array.length){
            result.push(iteratee(array[i], i))
            i++
        }
    }
    return result
}
fun assign(vararg spreadItems: Any): UTSJSONObject {
    var items = UTSArray(*spreadItems)
    return UTSJSONObject.assign(*items.map(fun(item): UTSJSONObject {
        return item as UTSJSONObject
    }
    ).toTypedArray())
}
fun <T> pull(array: UTSArray<T>, vararg spreadValues: T): UTSArray<T> {
    var values = UTSArray(*spreadValues)
    if (!isArray(array)) {
        return _uA()
    }
    return array.filter(fun(item): Boolean {
        return !values.includes(item)
    }
    )
}
fun <T> forEach(data: UTSArray<T>, iteratee: (value: T, index: Number) -> Unit): Unit {
    if (isArray(data)) {
        val array = data as UTSArray<T>
        run {
            var i: Number = 0
            while(i < array.length){
                if (array[i] != null) {
                    iteratee(array[i], i)
                }
                i++
            }
        }
    }
}
fun forInObject(data: Any, iteratee: (value: Any, key: String) -> Unit): Unit {
    if (isObject(data)) {
        val objKeys = keys(data)
        run {
            var i: Number = 0
            while(i < objKeys.length){
                val key = objKeys[i]
                iteratee(get(data, key)!!, key)
                i++
            }
        }
    }
}
fun <T> toArray(data: Any, iteratee: (value: Any, key: String) -> T): UTSArray<T> {
    val result: UTSArray<T> = _uA()
    if (isObject(data)) {
        forInObject(data, fun(value, key){
            result.push(iteratee(value, key))
        }
        )
    }
    return result
}
fun uuid(): String {
    var uuid = ""
    var i: Number
    var random: Number
    run {
        i = 0
        while(i < 36){
            if (i == 8 || i == 13 || i == 18 || i == 23) {
                uuid += "-"
            } else if (i == 14) {
                uuid += "4"
            } else if (i == 19) {
                random = (Math.random() * 16) or 0
                uuid += ((random and 0x3) or 0x8).toString(16)
            } else {
                random = (Math.random() * 16) or 0
                uuid += random.toString(16)
            }
            i++
        }
    }
    return uuid
}
fun debounce(func: () -> Unit, delay: Number): () -> Number {
    var timeoutId: Number = 0
    return fun(): Number {
        if (timeoutId != 0) {
            clearTimeout(timeoutId)
        }
        timeoutId = setTimeout(fun(){
            func()
            timeoutId = 0
        }
        , delay)
        return timeoutId
    }
}
fun random(min: Number, max: Number): Number {
    return Math.floor(Math.random() * (max - min + 1)) + min
}
fun isEqual(a: Any, b: Any): Boolean {
    if (isObject(a) && isObject(b)) {
        return isEqual(JSON.stringify(a), JSON.stringify(b))
    } else if (isArray(a) && isArray(b)) {
        return isEqual(JSON.stringify(a), JSON.stringify(b))
    }
    return a == b
}
val isMp = fun(): Boolean {
    return false
}
val isApp = fun(): Boolean {
    return true
}
val isH5 = fun(): Boolean {
    return false
}
val isHarmony = fun(): Boolean {
    return false
}
inline fun <reified T> parse(data: Any): T? {
    return (data as UTSJSONObject).parse<T>()
}
inline fun <reified T> parseObject(data: String): T? {
    return JSON.parseObject<T>(data)
}
inline fun <reified T> parsePt(data: Any): T {
    val genericTypeT = object : io.dcloud.uts.gson.reflect.TypeToken<T>() {
    }.type
    return (data as UTSJSONObject).parse<T>() ?: (UTSObject.toGenericType<T>(UTSJSONObject(), genericTypeT))
}
val parseClass = fun(data: Any): String {
    val names: UTSArray<String> = _uA()
    fun deep(d: Any) {
        if (isArray(d)) {
            forEach(d as UTSArray<Any>, fun(value: Any, _index){
                if (isString(value)) {
                    names.push(value as String)
                } else if (isArray(value)) {
                    val _ref = value as UTSArray<Any>
                    val a = _ref[0]
                    val b = _ref[1]
                    if (a as Boolean) {
                        names.push(b as String)
                    } else {
                        if (value.length > 2) {
                            names.push(value[2] as String)
                        }
                    }
                } else if (isObject(value)) {
                    deep(value)
                }
            }
            )
        }
        if (isObject(d)) {
            forInObject(d, fun(value, key){
                if (value == true && key != "") {
                    names.push(key.trim())
                }
            }
            )
        }
    }
    deep(data)
    return names.join(" ")
}
fun <T> parseToObject(data: T): UTSJSONObject {
    return JSON.parseObject(JSON.stringify(data)!!)!!
}
val parseRpx = fun(kVal: Any): String {
    if (UTSAndroid.`typeof`(kVal) == "number") {
        return (kVal as Number) + "rpx"
    }
    return kVal as String
}
val rpx2px = fun(rpx: Number): Number {
    var px: Number
    px = uni_rpx2px(rpx)
    return px
}
val getPx = fun(kVal: String): Number {
    val num = parseInt(kVal)
    if (kVal.includes("rpx")) {
        return rpx2px(num)
    }
    return Math.floor(num)
}
open class DayUts {
    private var _date: Date
    constructor(date: Any?){
        if (date == null || date == "") {
            this._date = Date()
        } else if (UTSAndroid.`typeof`(date) == "string") {
            this._date = Date(date as String)
        } else if (UTSAndroid.`typeof`(date) == "number") {
            this._date = Date(date as Number)
        } else if (date is Date) {
            this._date = Date((date as Date).getTime())
        } else {
            this._date = Date()
        }
    }
    open fun format(template: String): String {
        var actualTemplate: String = template
        val year = this._date.getFullYear()
        val month = this._date.getMonth() + 1
        val date = this._date.getDate()
        val hours = this._date.getHours()
        val minutes = this._date.getMinutes()
        val seconds = this._date.getSeconds()
        val milliseconds = this._date.getMilliseconds()
        var result: String = actualTemplate
        result = result.replace("YYYY", year.toString(10))
        result = result.replace("YY", year.toString(10).slice(-2))
        result = result.replace("MM", month.toString(10).padStart(2, "0"))
        result = result.replace("M", month.toString(10))
        result = result.replace("DD", date.toString(10).padStart(2, "0"))
        result = result.replace("D", date.toString(10))
        result = result.replace("HH", hours.toString(10).padStart(2, "0"))
        result = result.replace("H", hours.toString(10))
        result = result.replace("mm", minutes.toString(10).padStart(2, "0"))
        result = result.replace("m", minutes.toString(10))
        result = result.replace("ss", seconds.toString(10).padStart(2, "0"))
        result = result.replace("s", seconds.toString(10))
        result = result.replace("SSS", milliseconds.toString(10).padStart(3, "0"))
        return result
    }
    open fun startOf(unit: String): DayUts {
        val newDate = Date(this._date.getTime())
        when (unit) {
            "year" -> 
                {
                    newDate.setMonth(0)
                    newDate.setDate(1)
                    newDate.setHours(0)
                    newDate.setMinutes(0)
                    newDate.setSeconds(0)
                    newDate.setMilliseconds(0)
                }
            "month" -> 
                {
                    newDate.setDate(1)
                    newDate.setHours(0)
                    newDate.setMinutes(0)
                    newDate.setSeconds(0)
                    newDate.setMilliseconds(0)
                }
            "week" -> 
                {
                    newDate.setDate(newDate.getDate() - newDate.getDay())
                    newDate.setHours(0)
                    newDate.setMinutes(0)
                    newDate.setSeconds(0)
                    newDate.setMilliseconds(0)
                }
            "day" -> 
                {
                    newDate.setHours(0)
                    newDate.setMinutes(0)
                    newDate.setSeconds(0)
                    newDate.setMilliseconds(0)
                }
        }
        return DayUts(newDate)
    }
    open fun endOf(unit: String): DayUts {
        val newDate = Date(this._date.getTime())
        when (unit) {
            "year" -> 
                {
                    newDate.setMonth(11)
                    newDate.setDate(31)
                    newDate.setHours(23)
                    newDate.setMinutes(59)
                    newDate.setSeconds(59)
                    newDate.setMilliseconds(999)
                }
            "month" -> 
                {
                    newDate.setMonth(newDate.getMonth() + 1)
                    newDate.setDate(0)
                    newDate.setHours(23)
                    newDate.setMinutes(59)
                    newDate.setSeconds(59)
                    newDate.setMilliseconds(999)
                }
            "week" -> 
                {
                    newDate.setDate(newDate.getDate() + 7)
                    newDate.setHours(23)
                    newDate.setMinutes(59)
                    newDate.setSeconds(59)
                    newDate.setMilliseconds(999)
                }
            "day" -> 
                {
                    newDate.setHours(23)
                    newDate.setMinutes(59)
                    newDate.setSeconds(59)
                    newDate.setMilliseconds(999)
                }
        }
        return DayUts(newDate)
    }
    open fun isBefore(date: Any): Boolean {
        val compareDate = this._parseDate(date)
        return this._date.getTime() < compareDate.getTime()
    }
    open fun isAfter(date: Any): Boolean {
        val compareDate = this._parseDate(date)
        return this._date.getTime() > compareDate.getTime()
    }
    open fun isSame(date: Any): Boolean {
        val compareDate = this._parseDate(date)
        return this._date.getTime() == compareDate.getTime()
    }
    open fun diff(date: Any): Number {
        val compareDate = this._parseDate(date)
        return this._date.getTime() - compareDate.getTime()
    }
    open fun diffUnit(date: Any, unit: String): Number {
        val compareDate = this._parseDate(date)
        val diffMs = this._date.getTime() - compareDate.getTime()
        when (unit) {
            "day" -> 
                return Math.floor(diffMs / 86400000)
            "hour" -> 
                return Math.floor(diffMs / 3600000)
            "minute" -> 
                return Math.floor(diffMs / 60000)
            "second" -> 
                return Math.floor(diffMs / 1000)
            "millisecond" -> 
                return diffMs
            else -> 
                return diffMs
        }
    }
    open fun add(value: Number, unit: String): DayUts {
        val newDate = Date(this._date.getTime())
        when (unit) {
            "year" -> 
                newDate.setFullYear(newDate.getFullYear() + value)
            "month" -> 
                newDate.setMonth(newDate.getMonth() + value)
            "day" -> 
                newDate.setDate(newDate.getDate() + value)
            "hour" -> 
                newDate.setHours(newDate.getHours() + value)
            "minute" -> 
                newDate.setMinutes(newDate.getMinutes() + value)
            "second" -> 
                newDate.setSeconds(newDate.getSeconds() + value)
        }
        return DayUts(newDate)
    }
    open fun subtract(value: Number, unit: String): DayUts {
        return this.add(-value, unit)
    }
    open fun valueOf(): Number {
        return this._date.getTime()
    }
    open fun toDate(): Date {
        return Date(this._date.getTime())
    }
    open fun toArray(): UTSArray<Number> {
        return _uA(
            this._date.getFullYear(),
            this._date.getMonth() + 1,
            this._date.getDate(),
            this._date.getHours(),
            this._date.getMinutes(),
            this._date.getSeconds()
        )
    }
    private fun _parseDate(date: Any): Date {
        if (date is DayUts) {
            return (date as DayUts).toDate()
        } else if (date is Date) {
            return date as Date
        } else if (UTSAndroid.`typeof`(date) == "string") {
            return Date(date as String)
        } else if (UTSAndroid.`typeof`(date) == "number") {
            return Date(date as Number)
        } else {
            return Date()
        }
    }
}
fun dayUts(date: Any? = Date()): DayUts {
    return DayUts(date)
}
val getDevicePixelRatio = fun(): Number {
    val dpr = uni_getDeviceInfo(null).devicePixelRatio ?: 1
    return dpr
}
fun canvasToPng(canvasRef: UniElement): UTSPromise<String> {
    return UTSPromise(fun(resolve, _reject){
        canvasRef.parentElement!!.takeSnapshot(TakeSnapshotOptions(success = fun(res) {
            resolve(res.tempFilePath)
        }
        , fail = fun(err) {
            console.error(err)
            resolve("")
        }
        ))
    }
    )
}
fun filename(path: String): String {
    return basename(path.substring(0, path.lastIndexOf(".")))
}
fun basename(path: String): String {
    var index = path.lastIndexOf("/")
    index = if (index > -1) {
        index
    } else {
        path.lastIndexOf("\\")
    }
    if (index < 0) {
        return path
    }
    return path.substring(index + 1)
}
fun extname(path: String): String {
    var index = path.lastIndexOf(".")
    if (index < 0) {
        return ""
    }
    return path.substring(index + 1)
}
fun pathJoin(vararg spreadParts: String): String {
    var parts = UTSArray(*spreadParts)
    return parts.map(fun(part): String {
        return part.replace(UTSRegExp("(^\\/+|\\/+\$)", "g"), "")
    }
    ).join("/")
}
val EXPIRES_SUFFIX = "_deadtime"
open class Storage {
    open fun get(key: String): Any? {
        return uni_getStorageSync(key)
    }
    open fun info(): UTSJSONObject {
        val info = uni_getStorageInfoSync()
        val d: UTSJSONObject = UTSJSONObject()
        info.keys.forEach(fun(e){
            d[e] = this.get(e)
        }
        )
        return d
    }
    open fun set(key: String, value: Any, expires: Number): Unit {
        uni_setStorageSync(key, value)
        if (expires > 0) {
            val expireTime = Date().getTime() + expires * 1000
            uni_setStorageSync("" + key + EXPIRES_SUFFIX, expireTime)
        }
    }
    open fun isExpired(key: String): Boolean {
        val value = uni_getStorageSync("" + key + EXPIRES_SUFFIX) as Number?
        if (value == null) {
            return true
        }
        return value - Date().getTime() <= 0
    }
    open fun remove(key: String) {
        uni_removeStorageSync(key)
        uni_removeStorageSync("" + key + EXPIRES_SUFFIX)
    }
    open fun clear() {
        uni_clearStorageSync()
    }
    open fun once(key: String): Any? {
        val value = this.get(key)
        this.remove(key)
        return value
    }
}
val storage = Storage()
open class RouteInfo (
    @JsonNotNull
    open var path: String,
) : UTSObject()
typealias BeforeEach = (to: RouteInfo, next: () -> Unit) -> Unit
typealias AfterLogin = () -> Unit
open class Events (
    open var beforeEach: BeforeEach? = null,
    open var afterLogin: AfterLogin? = null,
) : UTSObject()
open class Page (
    @JsonNotNull
    open var path: String,
    open var style: UTSJSONObject? = null,
) : UTSObject()
open class SubPackage (
    @JsonNotNull
    open var root: String,
    @JsonNotNull
    open var pages: UTSArray<Page>,
) : UTSObject()
open class TabBarItem (
    open var text: String? = null,
    @JsonNotNull
    open var pagePath: String,
    open var iconPath: String? = null,
    open var selectedIconPath: String? = null,
    open var visible: Boolean? = null,
) : UTSObject()
open class TabBar (
    open var custom: Boolean? = null,
    open var color: String? = null,
    open var selectedColor: String? = null,
    open var backgroundColor: String? = null,
    open var borderStyle: String? = null,
    open var blurEffect: String? = null,
    open var list: UTSArray<TabBarItem>? = null,
    open var position: String? = null,
    open var fontSize: String? = null,
    open var iconWidth: String? = null,
    open var spacing: String? = null,
    open var height: String? = null,
    open var backgroundImage: String? = null,
    open var backgroundRepeat: String? = null,
    open var redDotColor: String? = null,
) : UTSObject()
open class Ctx (
    @JsonNotNull
    open var appid: String,
    @JsonNotNull
    open var globalStyle: UTSJSONObject,
    @JsonNotNull
    open var pages: UTSArray<Page>,
    @JsonNotNull
    open var uniIdRouter: UTSJSONObject,
    @JsonNotNull
    open var theme: UTSJSONObject,
    @JsonNotNull
    open var tabBar: TabBar,
    @JsonNotNull
    open var subPackages: UTSArray<SubPackage>,
    @JsonNotNull
    open var SAFE_CHAR_MAP_LOCALE: UTSArray<UTSArray<String>>,
    @JsonNotNull
    open var color: UTSJSONObject,
) : UTSObject()
val ctx = Ctx(pages = _uA(
    Page(path = "pages/index/home", style = object : UTSJSONObject() {
        var navigationStyle = "custom"
    }),
    Page(path = "pages/index/my", style = object : UTSJSONObject() {
        var navigationStyle = "custom"
    })
), subPackages = _uA(
    SubPackage(root = "pages/set", pages = _uA(
        Page(path = "index", style = object : UTSJSONObject() {
            var navigationBarTitleText = "%page.设置%"
        }),
        Page(path = "general", style = object : UTSJSONObject() {
            var navigationBarTitleText = "%page.通用设置%"
        }),
        Page(path = "notice", style = object : UTSJSONObject() {
            var navigationBarTitleText = "%page.通知设置%"
        }),
        Page(path = "about", style = object : UTSJSONObject() {
            var navigationBarTitleText = ""
        }),
        Page(path = "cs", style = object : UTSJSONObject() {
            var navigationBarTitleText = "%page.联系客服%"
        })
    )),
    SubPackage(root = "pages/user", pages = _uA(
        Page(path = "edit", style = object : UTSJSONObject() {
            var navigationBarTitleText = "%page.编辑资料%"
        }),
        Page(path = "edit-name", style = object : UTSJSONObject() {
            var navigationStyle = "custom"
        }),
        Page(path = "edit-description", style = object : UTSJSONObject() {
            var navigationStyle = "custom"
        }),
        Page(path = "login", style = object : UTSJSONObject() {
            var navigationStyle = "custom"
            var disableScroll = true
        })
    )),
    SubPackage(root = "pages/demo", pages = _uA(
        Page(path = "basic/text", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Text 文本"
        }),
        Page(path = "basic/button", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Button 按钮"
        }),
        Page(path = "basic/image", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Image 图片"
        }),
        Page(path = "basic/icon", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Icon 图标"
        }),
        Page(path = "basic/tag", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Tag 标签"
        }),
        Page(path = "form/form", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Form 表单验证"
        }),
        Page(path = "form/input", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Input 输入框"
        }),
        Page(path = "form/textarea", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Textarea 文本域"
        }),
        Page(path = "form/input-number", style = object : UTSJSONObject() {
            var navigationBarTitleText = "InputNumber 计数器"
        }),
        Page(path = "form/input-otp", style = object : UTSJSONObject() {
            var navigationBarTitleText = "InputOtp 口令输入"
        }),
        Page(path = "form/keyboard", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Keyboard 键盘"
        }),
        Page(path = "form/radio", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Radio 单选框"
        }),
        Page(path = "form/checkbox", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Checkbox 多选框"
        }),
        Page(path = "form/switch", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Switch 开关"
        }),
        Page(path = "form/rate", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Rate 评分"
        }),
        Page(path = "form/slider", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Slider 滑块"
        }),
        Page(path = "form/select", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Select 选择器"
        }),
        Page(path = "form/select-date", style = object : UTSJSONObject() {
            var navigationBarTitleText = "SelectDate 日期选择器"
        }),
        Page(path = "form/select-time", style = object : UTSJSONObject() {
            var navigationBarTitleText = "SelectTime 时间选择器"
        }),
        Page(path = "form/cascader", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Cascader 级联选择器"
        }),
        Page(path = "form/upload", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Upload 文件上传"
        }),
        Page(path = "layout/flex", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Flex 弹性布局"
        }),
        Page(path = "layout/tabs", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Tabs 标签页"
        }),
        Page(path = "layout/collapse", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Collapse 折叠面板"
        }),
        Page(path = "layout/sticky", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Sticky 吸顶"
        }),
        Page(path = "layout/topbar", style = object : UTSJSONObject() {
            var navigationBarTitleText = "TopBar 导航栏"
        }),
        Page(path = "layout/float-view", style = object : UTSJSONObject() {
            var navigationBarTitleText = "FloatView 悬浮视图"
        }),
        Page(path = "layout/footer", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Footer 底部视图"
        }),
        Page(path = "data/list", style = object : UTSJSONObject() {
            var navigationBarTitleText = "List 列表"
        }),
        Page(path = "data/list-view", style = object : UTSJSONObject() {
            var navigationBarTitleText = "ListView 列表视图"
        }),
        Page(path = "data/list-view-refresh", style = object : UTSJSONObject() {
            var navigationBarTitleText = "ListViewRefresh 列表刷新"
        }),
        Page(path = "data/waterfall", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Waterfall 瀑布流"
        }),
        Page(path = "data/banner", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Banner 轮播图"
        }),
        Page(path = "data/pagination", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Pagination 分页"
        }),
        Page(path = "data/timeline", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Timeline 时间轴"
        }),
        Page(path = "data/avatar", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Avatar 头像"
        }),
        Page(path = "data/draggable", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Draggable 拖拽"
        }),
        Page(path = "status/badge", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Badge 角标"
        }),
        Page(path = "status/noticebar", style = object : UTSJSONObject() {
            var navigationBarTitleText = "NoticeBar 通知栏"
        }),
        Page(path = "status/countdown", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Countdown 倒计时"
        }),
        Page(path = "status/progress", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Progress 进度条"
        }),
        Page(path = "status/progress-circle", style = object : UTSJSONObject() {
            var navigationBarTitleText = "ProgressCircle 圆形进度条"
        }),
        Page(path = "status/skeleton", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Skeleton 骨架图"
        }),
        Page(path = "status/loadmore", style = object : UTSJSONObject() {
            var navigationBarTitleText = "LoadMore 加载更多"
        }),
        Page(path = "status/rolling-number", style = object : UTSJSONObject() {
            var navigationBarTitleText = "RollingNumber 数字滚动"
        }),
        Page(path = "feedback/action-sheet", style = object : UTSJSONObject() {
            var navigationBarTitleText = "ActionSheet 操作菜单"
        }),
        Page(path = "feedback/popup", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Popup 弹窗"
        }),
        Page(path = "feedback/confirm", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Confirm 确认框"
        }),
        Page(path = "feedback/toast", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Toast 提示框"
        }),
        Page(path = "other/qrcode", style = object : UTSJSONObject() {
            var navigationBarTitleText = "QRCode 二维码"
        }),
        Page(path = "other/sign", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Sign 签名"
        }),
        Page(path = "other/day-uts", style = object : UTSJSONObject() {
            var navigationBarTitleText = "DayUts 日期"
        }),
        Page(path = "other/vibrate", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Vibrate 震动"
        }),
        Page(path = "other/cropper", style = object : UTSJSONObject() {
            var navigationBarTitleText = "Cropper 图片裁剪"
        })
    ))
), globalStyle = object : UTSJSONObject() {
    var navigationBarTitleText = "cool-unix"
    var navigationBarTextStyle = "@navTextStyle"
    var backgroundColorContent = "@bgContentColor"
    var backgroundColor = "@bgColor"
    var navigationBarBackgroundColor = "@navBgColor"
}, tabBar = TabBar(custom = true, color = "@tabColor", selectedColor = "@tabSelectedColor", backgroundColor = "@tabBgColor", borderStyle = "@tabBorderStyle", height = "60px", list = _uA(
    TabBarItem(pagePath = "pages/index/home", iconPath = "/static/icon/tabbar/home.png", selectedIconPath = "/static/icon/tabbar/home2.png", text = "%首页%"),
    TabBarItem(pagePath = "pages/index/my", iconPath = "/static/icon/tabbar/my.png", selectedIconPath = "/static/icon/tabbar/my2.png", text = "%我的%")
)), uniIdRouter = UTSJSONObject(), appid = "__UNI__BC2A3BF", theme = object : UTSJSONObject() {
    var light = object : UTSJSONObject() {
        var bgColor = "#f8f8f8"
        var bgContentColor = "#f8f8f8"
        var navBgColor = "#ffffff"
        var navTextStyle = "black"
        var tabColor = "#999999"
        var tabSelectedColor = "#14b8a6"
        var tabBorderStyle = "white"
        var tabBgColor = "#ffffff"
    }
    var dark = object : UTSJSONObject() {
        var bgColor = "#191919"
        var bgContentColor = "#191919"
        var navBgColor = "#191919"
        var navTextStyle = "white"
        var tabColor = "#cccccc"
        var tabSelectedColor = "#ffffff"
        var tabBorderStyle = "black"
        var tabBgColor = "#191919"
    }
}, color = object : UTSJSONObject() {
    var `primary-50` = "#f0fdfa"
    var `primary-100` = "#ccfbf1"
    var `primary-200` = "#99f6e4"
    var `primary-300` = "#5eead4"
    var `primary-400` = "#2dd4bf"
    var `primary-500` = "#14b8a6"
    var `primary-600` = "#0d9488"
    var `primary-700` = "#0f766e"
    var `primary-800` = "#115e59"
    var `primary-900` = "#134e4a"
    var `primary-950` = "#042f2e"
    var surface = "#ffffff"
    var `surface-50` = "#fafafa"
    var `surface-100` = "#f4f4f5"
    var `surface-200` = "#e4e4e7"
    var `surface-300` = "#d4d4d8"
    var `surface-400` = "#a1a1aa"
    var `surface-500` = "#71717a"
    var `surface-600` = "#52525b"
    var `surface-700` = "#3f3f46"
    var `surface-800` = "#27272a"
    var `surface-900` = "#18181b"
    var `surface-950` = "#09090b"
}, SAFE_CHAR_MAP_LOCALE = _uA(
    _uA(
        "[",
        "-bracket-start-"
    ),
    _uA(
        "]",
        "-bracket-end-"
    ),
    _uA(
        "(",
        "-paren-start-"
    ),
    _uA(
        ")",
        "-paren-end-"
    ),
    _uA(
        "{",
        "-brace-start-"
    ),
    _uA(
        "}",
        "-brace-end-"
    ),
    _uA(
        "\$",
        "-dollar-"
    ),
    _uA(
        "#",
        "-hash-"
    ),
    _uA(
        "!",
        "-important-"
    ),
    _uA(
        "/",
        "-slash-"
    ),
    _uA(
        ":",
        "-colon-"
    ),
    _uA(
        " ",
        "-space-"
    ),
    _uA(
        "<",
        "-lt-"
    ),
    _uA(
        ">",
        "-gt-"
    ),
    _uA(
        "&",
        "-amp-"
    ),
    _uA(
        "|",
        "-pipe-"
    ),
    _uA(
        "^",
        "-caret-"
    ),
    _uA(
        "~",
        "-tilde-"
    ),
    _uA(
        "`",
        "-backtick-"
    ),
    _uA(
        "'",
        "-single-quote-"
    ),
    _uA(
        ".",
        "-dot-"
    ),
    _uA(
        "?",
        "-question-"
    ),
    _uA(
        "*",
        "-star-"
    ),
    _uA(
        "+",
        "-plus-"
    ),
    _uA(
        "-",
        "-dash-"
    ),
    _uA(
        "_",
        "-underscore-"
    ),
    _uA(
        "=",
        "-equal-"
    ),
    _uA(
        "%",
        "-percent-"
    ),
    _uA(
        "@",
        "-at-"
    )
))
var PAGES: UTSArray<Page> = ctx.pages.slice()
val runBlock2 = run {
    if (isArray(ctx.subPackages)) {
        ctx.subPackages.forEach(fun(a){
            a.pages.forEach(fun(b){
                PAGES.push(Page(path = a.root + "/" + b.path, style = b.style))
            }
            )
        }
        )
    }
    PAGES.forEach(fun(e){
        if (!e.path.startsWith("/")) {
            e.path = "/" + e.path
        }
    }
    )
}
var TABS: UTSArray<TabBarItem> = _uA()
open class Router {
    private var _events = Events()
    open fun params(): UTSJSONObject {
        val data = storage.get("router-params") as UTSJSONObject
        if (isNull(data)) {
            return UTSJSONObject()
        }
        return data
    }
    open fun defaultPath(name: String): String {
        val paths: UTSJSONObject = object : UTSJSONObject() {
            var home = PAGES[0].path
            var login = "/pages/user/login"
        }
        return get(paths, name) as String
    }
    open fun getPages(): UTSArray<PageInstance> {
        return map(getCurrentPages(), fun(e, _index): PageInstance {
            var path = e.route!!
            if (path == "/") {
                path = this.defaultPath("home")
            }
            if (!path.startsWith("/")) {
                path = "/" + path
            }
            val style = PAGES.find(fun(e): Boolean {
                return e.path == path
            }
            )?.style
            var exposed = e.vm as Any
            val query = (get(e, "options") ?: UTSJSONObject()) as UTSJSONObject
            return PageInstance(path = path, vm = e.vm!!, exposed = exposed, style = style, query = query, isCustomNavbar = style?.get("navigationStyle") == "custom")
        }
        )
    }
    open fun getPage(path: String): PageInstance? {
        return this.getPages().find(fun(e): Boolean {
            return e.path == path
        }
        )
    }
    open fun route(): PageInstance? {
        return last(this.getPages())
    }
    open fun path(): String {
        return this.route()?.path ?: ""
    }
    open fun to(path: String) {
        this.push(PushOptions(path = path))
    }
    open fun push(options: PushOptions) {
        var _options_query = options.query
        var query = if (_options_query == null) {
            UTSJSONObject()
        } else {
            _options_query
        }
        var _options_params = options.params
        var params = if (_options_params == null) {
            UTSJSONObject()
        } else {
            _options_params
        }
        var _options_mode = options.mode
        var mode = if (_options_mode == null) {
            "navigateTo"
        } else {
            _options_mode
        }
        var path = options.path
        var success = options.success
        var fail = options.fail
        var complete = options.complete
        var animationType = options.animationType
        var animationDuration = options.animationDuration
        var events = options.events
        if (!isEmpty(query)) {
            val arr = toArray(query, fun(v, k): String {
                return "" + k + "=" + v
            }
            )
            path += "?" + arr.join("&")
        }
        if (!isEmpty(params)) {
            storage.set("router-params", params, 0)
        }
        if (this.isTabPage(path)) {
            mode = "switchTab"
        }
        val next = fun(){
            when (mode) {
                "navigateTo" -> 
                    uni_navigateTo(NavigateToOptions(url = path, success = success, events = events, fail = fail, complete = complete, animationType = animationType, animationDuration = animationDuration))
                "redirectTo" -> 
                    uni_redirectTo(RedirectToOptions(url = path, success = success, fail = fail, complete = complete))
                "reLaunch" -> 
                    uni_reLaunch(ReLaunchOptions(url = path, success = success, fail = fail, complete = complete))
                "switchTab" -> 
                    uni_switchTab(SwitchTabOptions(url = path, success = success, fail = fail, complete = complete))
            }
        }
        if (isFunction(this._events["beforeEach"])) {
            (this._events["beforeEach"] as BeforeEach)(RouteInfo(path = path), next)
        } else {
            next()
        }
    }
    open fun home() {
        this.push(PushOptions(path = this.defaultPath("home")))
    }
    open fun back(options: BackOptions? = null) {
        if (this.isFirstPage()) {
            this.home()
        } else {
            uni_navigateBack(UTSJSONObject.assign<NavigateBackOptions>(UTSJSONObject(), (options ?: NavigateBackOptions())) as NavigateBackOptions)
        }
    }
    open fun callMethod(name: String, data: Any?): Any? {
        val fn = get(this.route()!!, "\$vm.\$.exposed." + name) as (d: Any?) -> Any?
        if (isFunction(fn)) {
            return fn(data)
        }
        return null
    }
    open fun isFirstPage(): Boolean {
        return getCurrentPages().length == 1
    }
    open fun isHomePage(): Boolean {
        return this.path() == this.defaultPath("home")
    }
    open fun isCustomNavbarPage(): Boolean {
        return this.route()?.isCustomNavbar ?: false
    }
    open fun isCurrentPage(path: String): Boolean {
        return this.path() == path
    }
    open fun isTabPage(reassignedPath: String? = null): Boolean {
        var path = reassignedPath
        if (path == null) {
            path = this.path()
        }
        if (path == "/") {
            path = this.defaultPath("home")
        }
        return !isNull(TABS.find(fun(e): Boolean {
            return path == e.pagePath
        }
        ))
    }
    open fun isLoginPage(path: String): Boolean {
        return path == this.defaultPath("login")
    }
    open var login = debounce(fun(){
        if (!this.isLoginPage(this.path())) {
            this.push(PushOptions(path = "/pages/user/login", mode = "reLaunch"))
        }
    }
    , 300)
    open fun nextLogin() {
        val pages = this.getPages()
        val index = pages.findIndex(fun(e): Boolean {
            return this.defaultPath("login").includes(e.path)
        }
        )
        if (index < 0) {
            this.home()
        } else {
            this.back(BackOptions(delta = pages.length - index))
        }
        if (isFunction(this._events["afterLogin"])) {
            (this._events["afterLogin"] as AfterLogin)()
        }
        uni__emit("afterLogin", null)
    }
    open fun beforeEach(callback: BeforeEach) {
        this._events["beforeEach"] = callback
    }
    open fun afterLogin(callback: AfterLogin) {
        this._events["afterLogin"] = callback
    }
}
val router = Router()
open class Scroller {
    open var list: Map<String, UTSArray<((top: Number) -> Unit)>> = Map()
    open fun emit(top: Number) {
        val cbs = this.list.get(router.path()) ?: _uA()
        cbs.forEach(fun(cb){
            cb(top)
        }
        )
    }
    open fun on(callback: (top: Number) -> Unit) {
        val path = router.path()
        val cbs = this.list.get(path) ?: _uA()
        cbs.push(callback)
        this.list.set(path, cbs)
    }
}
val scroller = Scroller()
typealias Theme = String
val isAuto = ref(true)
fun getStyle(key: String): String? {
    val style = router.route()?.style
    val names: UTSJSONObject = object : UTSJSONObject() {
        var bgColor = "backgroundColor"
        var bgContentColor = "backgroundColorContent"
        var navBgColor = "navigationBarBackgroundColor"
        var navTextStyle = "navigationBarTextStyle"
    }
    if (style != null) {
        if (names[key] != null) {
            val kVal = style[names[key]!!] as String?
            if (kVal != null) {
                return kVal
            }
        }
    }
    return null
}
val getColor = fun(name: String): String {
    if (isNull(ctx.color)) {
        return ""
    }
    return ctx.color[name] as String
}
fun getConfig(key: String): String {
    val themeVal = (if (isDark.value) {
        `default`["dark"]
    } else {
        `default`["light"]
    }
     as UTSJSONObject)[key] as String?
    val styleVal = getStyle(key)
    return styleVal ?: themeVal ?: ""
}
val getTheme = fun(): String {
    var value: String?
    val appInfo = uni_getAppBaseInfo(null)
    val appTheme = appInfo.appTheme as String
    val osTheme = uni_getSystemInfoSync().osTheme!!
    value = if (appTheme == "auto") {
        osTheme
    } else {
        appTheme
    }
    isAuto.value = appTheme == "auto"
    return value as Theme
}
val theme = ref<Theme>(getTheme())
val isDark = computed(fun(): Boolean {
    return theme.value == "dark"
}
)
val setTheme = fun(value: Theme){
    if (theme.value == value) {
        return
    }
    isAuto.value = false
    uni_setAppTheme(SetAppThemeOptions(theme = value, success = fun(_){
        theme.value = value
    }
    ))
}
val toggleTheme = fun(){
    if (isDark.value) {
        setTheme("light")
    } else {
        setTheme("dark")
    }
}
val initTheme = fun(){
    uni_onOsThemeChange(fun(res){
        if (isAuto.value) {
            setTimeout(fun(){
                uni_setAppTheme(SetAppThemeOptions(theme = res.osTheme, success = fun(_){
                    theme.value = res.osTheme
                }
                ))
            }
            , 100)
        }
    }
    )
    uni_onAppThemeChange(fun(res){
        theme.value = res.appTheme
    }
    )
}
val messages: UTSJSONObject = _uO("zh-cn" to zhcn, "en" to en, "es" to es)
val locale = ref<String>("")
val setLocale = fun(value: String){
    locale.value = value
    storage.set("locale", value, 0)
}
val dev = fun(): UTSJSONObject {
    val host = get(proxy, "" + value + ".target") as String
    var baseUrl: String
    baseUrl = host + ""
    return _uO("host" to host, "baseUrl" to baseUrl)
}
val prod = fun(): UTSJSONObject {
    val host = get(proxy, "prod.target") as String
    var baseUrl: String
    baseUrl = host + "/api"
    return _uO("host" to host, "baseUrl" to baseUrl)
}
val isDev = "production" == "development"
val ignoreTokens: UTSArray<String> = _uA()
open class Config1 (
    @JsonNotNull
    open var name: String,
    @JsonNotNull
    open var version: String,
    @JsonNotNull
    open var locale: String,
    @JsonNotNull
    open var website: String,
    @JsonNotNull
    open var host: String,
    @JsonNotNull
    open var baseUrl: String,
    @JsonNotNull
    open var showDarkButton: Boolean = false,
    @JsonNotNull
    open var isCustomTabBar: Boolean = false,
    @JsonNotNull
    open var backTop: Boolean = false,
) : UTSObject()
val config1 = UTSJSONObject.assign<Config1>(object : UTSJSONObject() {
    var name = "Cool Unix"
    var version = "1.0.0"
    var locale = "zh"
    var website = "https://cool-js.com"
    var showDarkButton = if (isMp()) {
        false
    } else {
        true
    }
    var isCustomTabBar = true
    var backTop = true
}, if (isDev) {
    dev()
} else {
    prod()
}
) as Config1
val getLocale = fun(): String {
    var value: String
    val _locale = storage.get("locale") as String?
    if (_locale != null && !isEmpty(_locale)) {
        value = _locale
    } else {
        value = uni_getDeviceInfo(null).osLanguage as String
    }
    if (isNull(value) || isEmpty(value)) {
        value = config1.locale
    }
    return value
}
val t = fun(name: String): String {
    var data = messages[locale.value] as UTSArray<UTSArray<String>>?
    if (data == null) {
        return name
    }
    return data.find(fun(e): Boolean {
        return e[0] == name
    }
    )?.get(1) ?: name
}
val `$t` = fun(name: String, data: Any): String {
    var text = t(name)
    if (!isNull(data)) {
        forInObject(data, fun(reassignedValue, key){
            var value = reassignedValue
            if (UTSAndroid.`typeof`(value) === "number") {
                value = (value as Number).toString()
            }
            text = text.replaceAll("{" + key + "}", value as String)
        }
        )
    }
    return text
}
val initLocale = fun(){
    locale.value = getLocale()
}
fun cool(app: VueApp) {
    initTheme()
    initLocale()
    console.log(app)
}
fun hasCustomTabBar(): Boolean {
    if (router.isTabPage()) {
        if (isHarmony()) {
            return false
        }
        return config1.isCustomTabBar || isH5()
    }
    return false
}
typealias Instance = ComponentPublicInstance?
open class Pagination (
    @JsonNotNull
    open var page: Number,
    @JsonNotNull
    open var size: Number,
    @JsonNotNull
    open var total: Number,
) : UTSObject()
fun useListView(data: UTSArray<UTSJSONObject>): UTSArray<ClListViewItem> {
    return data.map(fun(e): ClListViewItem {
        return parse<ClListViewItem>(UTSJSONObject.assign(UTSJSONObject(), e, object : UTSJSONObject() {
            var value = e
        }))!!
    }
    )
}
open class RequestOptions1 (
    @JsonNotNull
    open var url: String,
    open var method: RequestMethod? = null,
    open var data: Any? = null,
    open var params: Any? = null,
    open var header: Any? = null,
    open var timeout: Number? = null,
    open var withCredentials: Boolean? = null,
    open var firstIpv4: Boolean? = null,
    open var enableChunked: Boolean? = null,
) : UTSObject()
open class Store (
    @JsonNotNull
    open var user: User,
    @JsonNotNull
    open var dict: Dict,
) : UTSObject()
open class DictItem (
    @JsonNotNull
    open var id: Number,
    @JsonNotNull
    open var typeId: Number,
    @JsonNotNull
    open var label: String,
    @JsonNotNull
    open var name: String,
    @JsonNotNull
    open var value: Any,
    @JsonNotNull
    open var orderNum: Number,
    open var parentId: Number? = null,
) : UTSObject()
open class OnProgressUpdateResult (
    @JsonNotNull
    open var progress: Number,
    @JsonNotNull
    open var totalBytesSent: Number,
    @JsonNotNull
    open var totalBytesExpectedToSend: Number,
) : UTSObject()
open class Token (
    @JsonNotNull
    open var token: String,
    @JsonNotNull
    open var expire: Number,
    @JsonNotNull
    open var refreshToken: String,
    @JsonNotNull
    open var refreshExpire: Number,
) : UTSObject()
open class Form {
    open var formRef = ref<ClFormComponentPublicInstance?>(null)
    open var disabled: ComputedRef<Boolean>
    constructor(){
        if (this.formRef.value == null) {
            val ClForm = useParent<ClFormComponentPublicInstance>("cl-form")
            if (ClForm != null) {
                this.formRef.value = ClForm
            }
        }
        this.disabled = computed<Boolean>(fun(): Boolean {
            if (this.formRef.value == null) {
                return false
            }
            return this.formRef.value!!.disabled
        }
        )
    }
    open var addField = fun(prop: String): Unit {
        this.formRef.value!!.addField(prop)
    }
    open var removeField = fun(prop: String): Unit {
        this.formRef.value!!.removeField(prop)
    }
    open var getValue = fun(prop: String): Any? {
        return this.formRef.value!!.getValue(prop)
    }
    open var setError = fun(prop: String, error: String): Unit {
        this.formRef.value!!.setError(prop, error)
    }
    open var getError = fun(prop: String): String {
        return this.formRef.value!!.getError(prop)
    }
    open var removeError = fun(prop: String): Unit {
        this.formRef.value!!.removeError(prop)
    }
    open var clearErrors = fun(): Unit {
        this.formRef.value!!.clearErrors()
    }
    open var getRule = fun(prop: String): UTSArray<ClFormRule> {
        return this.formRef.value!!.getRule(prop)
    }
    open var validateRule = fun(value: Any?, rule: ClFormRule): String? {
        return this.formRef.value!!.validateRule(value, rule)
    }
    open var clearValidate = fun(): Unit {
        this.formRef.value!!.clearValidate()
    }
    open var validateField = fun(prop: String): String? {
        return this.formRef.value!!.validateField(prop)
    }
    open var validate = fun(callback: (valid: Boolean, errors: UTSArray<ClFormValidateError>) -> Unit): Unit {
        this.formRef.value!!.validate(callback)
    }
    open var isError = fun(prop: String): Boolean {
        return this.formRef.value!!.getError(prop) != ""
    }
}
open class PassThrough (
    open var className: String? = null,
) : UTSObject()
open class Page1 {
    open var pageRef: ClPageComponentPublicInstance? = null
    constructor(){
        this.pageRef = useParent<ClPageComponentPublicInstance>("cl-page")
    }
    open var path = fun(): String {
        return router.path()
    }
    open var getScrollTop = fun(): Number {
        return this.pageRef!!.scrollTop as Number
    }
    open var scrollTo = fun(top: Number){
        this.pageRef!!.scrollTo(top)
    }
    open var scrollToTop = fun(){
        this.pageRef!!.scrollToTop()
    }
    open var onScroll = fun(callback: (top: Number) -> Unit){
        scroller.on(callback)
    }
}
fun usePage(): Page1 {
    return Page1()
}
fun getSafeAreaHeight(type: String): Number {
    val safeAreaInsets = uni_getWindowInfo().safeAreaInsets
    var h: Number
    if (type == "top") {
        h = safeAreaInsets.top
    } else {
        h = safeAreaInsets.bottom
        if (h == 0) {
            h = 16
        }
    }
    return h
}
fun getTabBarHeight(): Number {
    var h = if (ctx.tabBar.height == null) {
        50
    } else {
        getPx(ctx.tabBar.height!!)
    }
    if (hasCustomTabBar()) {
        h += getSafeAreaHeight("bottom")
    }
    return h
}
open class PassThrough1 (
    open var className: String? = null,
) : UTSObject()
open class Icon (
    @JsonNotNull
    open var font: String,
    @JsonNotNull
    open var text: String,
) : UTSObject()
open class CacheData (
    @JsonNotNull
    open var key: Number,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return CacheDataReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class CacheDataReactiveObject : CacheData, IUTSReactive<CacheData> {
    override var __v_raw: CacheData
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: CacheData, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(key = __v_raw.key) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): CacheDataReactiveObject {
        return CacheDataReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var key: Number
        get() {
            return _tRG(__v_raw, "key", __v_raw.key, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("key")) {
                return
            }
            val oldValue = __v_raw.key
            __v_raw.key = value
            _tRS(__v_raw, "key", oldValue, value)
        }
}
open class UseCache (
    @JsonNotNull
    open var cache: CacheData,
) : UTSObject()
val useCache = fun(source: () -> UTSArray<Any>): UseCache {
    val cache = reactive<CacheData>(CacheData(key = 0))
    watch(source, fun(){
        cache.key++
    }
    )
    watch(isDark, fun(){
        cache.key++
    }
    )
    return UseCache(cache = cache)
}
open class Size1 {
    open var names = _uA(
        "text-xs",
        "text-sm",
        "text-md",
        "text-lg",
        "text-xl",
        "text-2xl",
        "text-3xl",
        "text-4xl",
        "text-5xl",
        "text-6xl",
        "text-7xl",
        "text-8xl",
        "text-9xl"
    )
    open var sizes: UTSArray<Number> = _uA(
        20,
        24,
        28,
        32,
        36,
        44,
        52,
        60,
        72,
        84,
        96,
        120,
        152
    )
    open var lineHeights: UTSArray<Number> = _uA(
        28,
        36,
        44,
        52,
        52,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1
    )
    open var className: ComputedRef<String> = computed(fun(): String {
        return ""
    }
    )
    open var ptClassName: ComputedRef<String>
    constructor(cb: (() -> String)?){
        this.className = computed(cb ?: (fun(): String {
            return ""
        }
        ))
        this.ptClassName = computed(fun(): String {
            if (config.fontSize == null) {
                return this.className.value
            }
            val name = this.names[this.getIndex()]
            return this.className.value.replace("-important-" + name, "").replace(name, "")
        }
        )
    }
    open var getScale = fun(): Number {
        return config.fontSize ?: 1
    }
    open var getRpx = fun(kVal: Any): String {
        val scale = this.getScale()
        if (UTSAndroid.`typeof`(kVal) == "number") {
            return (kVal as Number) * scale + "rpx"
        } else {
            val num = parseFloat(kVal as String)
            val unit = (kVal as String).replace("" + num, "")
            return num * scale + unit
        }
    }
    open var getIndex = fun(): Number {
        var index = this.names.findIndex(fun(name): Boolean {
            if (this.className.value.includes(name)) {
                return true
            }
            return false
        }
        )
        if (index < 0) {
            index = 2
        }
        return index
    }
    open var getSize = fun(size: Any?): String? {
        if (config.fontSize == null) {
            return null
        }
        return this.getRpx(size ?: this.sizes[this.getIndex()])
    }
    open var getLineHeight = fun(): String? {
        if (config.fontSize == null) {
            return null
        }
        val lineHeight = this.lineHeights[this.getIndex()]
        return if (lineHeight == 1) {
            "1"
        } else {
            this.getRpx(lineHeight)
        }
    }
}
fun useSize(cb: (() -> String)? = null): Size1 {
    return Size1(cb)
}
val GenUniModulesCoolUiComponentsClIconClIconClass = CreateVueComponent(GenUniModulesCoolUiComponentsClIconClIcon::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClIconClIcon.name, inheritAttrs = GenUniModulesCoolUiComponentsClIconClIcon.inheritAttrs, inject = GenUniModulesCoolUiComponentsClIconClIcon.inject, props = GenUniModulesCoolUiComponentsClIconClIcon.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClIconClIcon.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClIconClIcon.emits, components = GenUniModulesCoolUiComponentsClIconClIcon.components, styles = GenUniModulesCoolUiComponentsClIconClIcon.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClIconClIcon.setup(props as GenUniModulesCoolUiComponentsClIconClIcon)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClIconClIcon {
    return GenUniModulesCoolUiComponentsClIconClIcon(instance)
}
)
val GenUniModulesCoolUiComponentsClBackTopClBackTopClass = CreateVueComponent(GenUniModulesCoolUiComponentsClBackTopClBackTop::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClBackTopClBackTop.name, inheritAttrs = GenUniModulesCoolUiComponentsClBackTopClBackTop.inheritAttrs, inject = GenUniModulesCoolUiComponentsClBackTopClBackTop.inject, props = GenUniModulesCoolUiComponentsClBackTopClBackTop.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClBackTopClBackTop.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClBackTopClBackTop.emits, components = GenUniModulesCoolUiComponentsClBackTopClBackTop.components, styles = GenUniModulesCoolUiComponentsClBackTopClBackTop.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClBackTopClBackTop.setup(props as GenUniModulesCoolUiComponentsClBackTopClBackTop)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClBackTopClBackTop {
    return GenUniModulesCoolUiComponentsClBackTopClBackTop(instance)
}
)
open class Position (
    @JsonNotNull
    open var x: Number,
    @JsonNotNull
    open var y: Number,
    @JsonNotNull
    open var isDragging: Boolean = false,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return PositionReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class PositionReactiveObject : Position, IUTSReactive<Position> {
    override var __v_raw: Position
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: Position, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(x = __v_raw.x, y = __v_raw.y, isDragging = __v_raw.isDragging) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): PositionReactiveObject {
        return PositionReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var x: Number
        get() {
            return _tRG(__v_raw, "x", __v_raw.x, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("x")) {
                return
            }
            val oldValue = __v_raw.x
            __v_raw.x = value
            _tRS(__v_raw, "x", oldValue, value)
        }
    override var y: Number
        get() {
            return _tRG(__v_raw, "y", __v_raw.y, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("y")) {
                return
            }
            val oldValue = __v_raw.y
            __v_raw.y = value
            _tRS(__v_raw, "y", oldValue, value)
        }
    override var isDragging: Boolean
        get() {
            return _tRG(__v_raw, "isDragging", __v_raw.isDragging, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("isDragging")) {
                return
            }
            val oldValue = __v_raw.isDragging
            __v_raw.isDragging = value
            _tRS(__v_raw, "isDragging", oldValue, value)
        }
}
open class DragState (
    @JsonNotNull
    open var startX: Number,
    @JsonNotNull
    open var startY: Number,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return DragStateReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class DragStateReactiveObject : DragState, IUTSReactive<DragState> {
    override var __v_raw: DragState
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: DragState, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(startX = __v_raw.startX, startY = __v_raw.startY) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): DragStateReactiveObject {
        return DragStateReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var startX: Number
        get() {
            return _tRG(__v_raw, "startX", __v_raw.startX, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("startX")) {
                return
            }
            val oldValue = __v_raw.startX
            __v_raw.startX = value
            _tRS(__v_raw, "startX", oldValue, value)
        }
    override var startY: Number
        get() {
            return _tRG(__v_raw, "startY", __v_raw.startY, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("startY")) {
                return
            }
            val oldValue = __v_raw.startY
            __v_raw.startY = value
            _tRS(__v_raw, "startY", oldValue, value)
        }
}
val GenUniModulesCoolUiComponentsClFloatViewClFloatViewClass = CreateVueComponent(GenUniModulesCoolUiComponentsClFloatViewClFloatView::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClFloatViewClFloatView.name, inheritAttrs = GenUniModulesCoolUiComponentsClFloatViewClFloatView.inheritAttrs, inject = GenUniModulesCoolUiComponentsClFloatViewClFloatView.inject, props = GenUniModulesCoolUiComponentsClFloatViewClFloatView.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClFloatViewClFloatView.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClFloatViewClFloatView.emits, components = GenUniModulesCoolUiComponentsClFloatViewClFloatView.components, styles = GenUniModulesCoolUiComponentsClFloatViewClFloatView.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClFloatViewClFloatView.setup(props as GenUniModulesCoolUiComponentsClFloatViewClFloatView)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClFloatViewClFloatView {
    return GenUniModulesCoolUiComponentsClFloatViewClFloatView(instance)
}
)
val GenUniModulesCoolUiComponentsClPageThemeClass = CreateVueComponent(GenUniModulesCoolUiComponentsClPageTheme::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClPageTheme.name, inheritAttrs = GenUniModulesCoolUiComponentsClPageTheme.inheritAttrs, inject = GenUniModulesCoolUiComponentsClPageTheme.inject, props = GenUniModulesCoolUiComponentsClPageTheme.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClPageTheme.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClPageTheme.emits, components = GenUniModulesCoolUiComponentsClPageTheme.components, styles = GenUniModulesCoolUiComponentsClPageTheme.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClPageTheme.setup(props as GenUniModulesCoolUiComponentsClPageTheme)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClPageTheme {
    return GenUniModulesCoolUiComponentsClPageTheme(instance)
}
)
open class UiInstance (
    open var showConfirm: (options: ClConfirmOptions) -> Unit,
    open var showTips: (message: String, callback: (action: ClConfirmAction) -> Unit) -> Unit,
    open var showToast: (options: ClToastOptions) -> Unit,
) : UTSObject()
val list = Map<String, UiInstance>()
open class Ui {
    open fun getInstance(): UiInstance? {
        return list.get(router.path())
    }
    open fun showConfirm(options: ClConfirmOptions): Unit {
        val instance = this.getInstance()
        if (instance != null) {
            instance.showConfirm(options)
        }
    }
    open fun showTips(message: String, callback: (action: ClConfirmAction) -> Unit): Unit {
        val instance = this.getInstance()
        if (instance != null) {
            instance.showTips(message, callback)
        }
    }
    open fun showToast(options: ClToastOptions): Unit {
        val instance = this.getInstance()
        if (instance != null) {
            instance.showToast(options)
        }
    }
    open fun showLoading(title: String? = null, mask: Boolean? = null): Unit {
        uni_showLoading(ShowLoadingOptions(title = title ?: t("加载中"), mask = mask ?: true))
    }
    open fun hideLoading(): Unit {
        uni_hideLoading()
    }
}
val ui = Ui()
fun useUi(): Ui {
    return ui
}
fun createUi(instance: UiInstance): Unit {
    list.set(router.path(), instance)
}
open class PassThrough2 (
    open var className: String? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClTextClTextClass = CreateVueComponent(GenUniModulesCoolUiComponentsClTextClText::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClTextClText.name, inheritAttrs = GenUniModulesCoolUiComponentsClTextClText.inheritAttrs, inject = GenUniModulesCoolUiComponentsClTextClText.inject, props = GenUniModulesCoolUiComponentsClTextClText.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClTextClText.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClTextClText.emits, components = GenUniModulesCoolUiComponentsClTextClText.components, styles = GenUniModulesCoolUiComponentsClTextClText.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClTextClText.setup(props as GenUniModulesCoolUiComponentsClTextClText)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClTextClText {
    return GenUniModulesCoolUiComponentsClTextClText(instance)
}
)
open class PassThrough3 (
    open var className: String? = null,
    open var label: PassThroughProps? = null,
    open var icon: ClIconProps? = null,
    open var loading: ClLoadingProps? = null,
) : UTSObject()
open class PassThrough4 (
    open var className: String? = null,
    open var icon: ClIconProps? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClLoadingClLoadingClass = CreateVueComponent(GenUniModulesCoolUiComponentsClLoadingClLoading::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClLoadingClLoading.name, inheritAttrs = GenUniModulesCoolUiComponentsClLoadingClLoading.inheritAttrs, inject = GenUniModulesCoolUiComponentsClLoadingClLoading.inject, props = GenUniModulesCoolUiComponentsClLoadingClLoading.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClLoadingClLoading.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClLoadingClLoading.emits, components = GenUniModulesCoolUiComponentsClLoadingClLoading.components, styles = GenUniModulesCoolUiComponentsClLoadingClLoading.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClLoadingClLoading.setup(props as GenUniModulesCoolUiComponentsClLoadingClLoading)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClLoadingClLoading {
    return GenUniModulesCoolUiComponentsClLoadingClLoading(instance)
}
)
val GenUniModulesCoolUiComponentsClButtonClButtonClass = CreateVueComponent(GenUniModulesCoolUiComponentsClButtonClButton::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClButtonClButton.name, inheritAttrs = GenUniModulesCoolUiComponentsClButtonClButton.inheritAttrs, inject = GenUniModulesCoolUiComponentsClButtonClButton.inject, props = GenUniModulesCoolUiComponentsClButtonClButton.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClButtonClButton.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClButtonClButton.emits, components = GenUniModulesCoolUiComponentsClButtonClButton.components, styles = GenUniModulesCoolUiComponentsClButtonClButton.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClButtonClButton.setup(props as GenUniModulesCoolUiComponentsClButtonClButton)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClButtonClButton {
    return GenUniModulesCoolUiComponentsClButtonClButton(instance)
}
)
open class HeaderPassThrough (
    open var className: String? = null,
    open var text: PassThroughProps? = null,
) : UTSObject()
open class PassThrough5 (
    open var className: String? = null,
    open var inner: PassThroughProps? = null,
    open var header: HeaderPassThrough? = null,
    open var container: PassThroughProps? = null,
    open var mask: PassThroughProps? = null,
    open var draw: PassThroughProps? = null,
) : UTSObject()
open class Swipe (
    @JsonNotNull
    open var isMove: Boolean = false,
    @JsonNotNull
    open var isTouch: Boolean = false,
    @JsonNotNull
    open var startY: Number,
    @JsonNotNull
    open var offsetY: Number,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return SwipeReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class SwipeReactiveObject : Swipe, IUTSReactive<Swipe> {
    override var __v_raw: Swipe
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: Swipe, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(isMove = __v_raw.isMove, isTouch = __v_raw.isTouch, startY = __v_raw.startY, offsetY = __v_raw.offsetY) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): SwipeReactiveObject {
        return SwipeReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var isMove: Boolean
        get() {
            return _tRG(__v_raw, "isMove", __v_raw.isMove, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("isMove")) {
                return
            }
            val oldValue = __v_raw.isMove
            __v_raw.isMove = value
            _tRS(__v_raw, "isMove", oldValue, value)
        }
    override var isTouch: Boolean
        get() {
            return _tRG(__v_raw, "isTouch", __v_raw.isTouch, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("isTouch")) {
                return
            }
            val oldValue = __v_raw.isTouch
            __v_raw.isTouch = value
            _tRS(__v_raw, "isTouch", oldValue, value)
        }
    override var startY: Number
        get() {
            return _tRG(__v_raw, "startY", __v_raw.startY, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("startY")) {
                return
            }
            val oldValue = __v_raw.startY
            __v_raw.startY = value
            _tRS(__v_raw, "startY", oldValue, value)
        }
    override var offsetY: Number
        get() {
            return _tRG(__v_raw, "offsetY", __v_raw.offsetY, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("offsetY")) {
                return
            }
            val oldValue = __v_raw.offsetY
            __v_raw.offsetY = value
            _tRS(__v_raw, "offsetY", oldValue, value)
        }
}
val GenUniModulesCoolUiComponentsClPopupClPopupClass = CreateVueComponent(GenUniModulesCoolUiComponentsClPopupClPopup::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClPopupClPopup.name, inheritAttrs = GenUniModulesCoolUiComponentsClPopupClPopup.inheritAttrs, inject = GenUniModulesCoolUiComponentsClPopupClPopup.inject, props = GenUniModulesCoolUiComponentsClPopupClPopup.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClPopupClPopup.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClPopupClPopup.emits, components = GenUniModulesCoolUiComponentsClPopupClPopup.components, styles = GenUniModulesCoolUiComponentsClPopupClPopup.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenUniModulesCoolUiComponentsClPopupClPopup.setup(props as GenUniModulesCoolUiComponentsClPopupClPopup, ctx)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClPopupClPopup {
    return GenUniModulesCoolUiComponentsClPopupClPopup(instance)
}
)
val GenUniModulesCoolUiComponentsClConfirmClConfirmClass = CreateVueComponent(GenUniModulesCoolUiComponentsClConfirmClConfirm::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = "", inheritAttrs = GenUniModulesCoolUiComponentsClConfirmClConfirm.inheritAttrs, inject = GenUniModulesCoolUiComponentsClConfirmClConfirm.inject, props = GenUniModulesCoolUiComponentsClConfirmClConfirm.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClConfirmClConfirm.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClConfirmClConfirm.emits, components = GenUniModulesCoolUiComponentsClConfirmClConfirm.components, styles = GenUniModulesCoolUiComponentsClConfirmClConfirm.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenUniModulesCoolUiComponentsClConfirmClConfirm.setup(props as GenUniModulesCoolUiComponentsClConfirmClConfirm, ctx)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClConfirmClConfirm {
    return GenUniModulesCoolUiComponentsClConfirmClConfirm(instance)
}
)
open class ToastItem (
    @JsonNotNull
    open var id: Number,
    @JsonNotNull
    open var visible: Boolean = false,
    @JsonNotNull
    open var isOpen: Boolean = false,
    open var icon: String? = null,
    open var image: String? = null,
    @JsonNotNull
    open var message: String,
    @JsonNotNull
    open var position: String,
    @JsonNotNull
    open var duration: Number,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return ToastItemReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class ToastItemReactiveObject : ToastItem, IUTSReactive<ToastItem> {
    override var __v_raw: ToastItem
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: ToastItem, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(id = __v_raw.id, visible = __v_raw.visible, isOpen = __v_raw.isOpen, icon = __v_raw.icon, image = __v_raw.image, message = __v_raw.message, position = __v_raw.position, duration = __v_raw.duration) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): ToastItemReactiveObject {
        return ToastItemReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var id: Number
        get() {
            return _tRG(__v_raw, "id", __v_raw.id, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("id")) {
                return
            }
            val oldValue = __v_raw.id
            __v_raw.id = value
            _tRS(__v_raw, "id", oldValue, value)
        }
    override var visible: Boolean
        get() {
            return _tRG(__v_raw, "visible", __v_raw.visible, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("visible")) {
                return
            }
            val oldValue = __v_raw.visible
            __v_raw.visible = value
            _tRS(__v_raw, "visible", oldValue, value)
        }
    override var isOpen: Boolean
        get() {
            return _tRG(__v_raw, "isOpen", __v_raw.isOpen, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("isOpen")) {
                return
            }
            val oldValue = __v_raw.isOpen
            __v_raw.isOpen = value
            _tRS(__v_raw, "isOpen", oldValue, value)
        }
    override var icon: String?
        get() {
            return _tRG(__v_raw, "icon", __v_raw.icon, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("icon")) {
                return
            }
            val oldValue = __v_raw.icon
            __v_raw.icon = value
            _tRS(__v_raw, "icon", oldValue, value)
        }
    override var image: String?
        get() {
            return _tRG(__v_raw, "image", __v_raw.image, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("image")) {
                return
            }
            val oldValue = __v_raw.image
            __v_raw.image = value
            _tRS(__v_raw, "image", oldValue, value)
        }
    override var message: String
        get() {
            return _tRG(__v_raw, "message", __v_raw.message, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("message")) {
                return
            }
            val oldValue = __v_raw.message
            __v_raw.message = value
            _tRS(__v_raw, "message", oldValue, value)
        }
    override var position: String
        get() {
            return _tRG(__v_raw, "position", __v_raw.position, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("position")) {
                return
            }
            val oldValue = __v_raw.position
            __v_raw.position = value
            _tRS(__v_raw, "position", oldValue, value)
        }
    override var duration: Number
        get() {
            return _tRG(__v_raw, "duration", __v_raw.duration, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("duration")) {
                return
            }
            val oldValue = __v_raw.duration
            __v_raw.duration = value
            _tRS(__v_raw, "duration", oldValue, value)
        }
}
val GenUniModulesCoolUiComponentsClToastClToastClass = CreateVueComponent(GenUniModulesCoolUiComponentsClToastClToast::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClToastClToast.name, inheritAttrs = GenUniModulesCoolUiComponentsClToastClToast.inheritAttrs, inject = GenUniModulesCoolUiComponentsClToastClToast.inject, props = GenUniModulesCoolUiComponentsClToastClToast.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClToastClToast.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClToastClToast.emits, components = GenUniModulesCoolUiComponentsClToastClToast.components, styles = GenUniModulesCoolUiComponentsClToastClToast.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenUniModulesCoolUiComponentsClToastClToast.setup(props as GenUniModulesCoolUiComponentsClToastClToast, ctx)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClToastClToast {
    return GenUniModulesCoolUiComponentsClToastClToast(instance)
}
)
val GenUniModulesCoolUiComponentsClPageUiClass = CreateVueComponent(GenUniModulesCoolUiComponentsClPageUi::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClPageUi.name, inheritAttrs = GenUniModulesCoolUiComponentsClPageUi.inheritAttrs, inject = GenUniModulesCoolUiComponentsClPageUi.inject, props = GenUniModulesCoolUiComponentsClPageUi.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClPageUi.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClPageUi.emits, components = GenUniModulesCoolUiComponentsClPageUi.components, styles = GenUniModulesCoolUiComponentsClPageUi.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClPageUi.setup(props as GenUniModulesCoolUiComponentsClPageUi)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClPageUi {
    return GenUniModulesCoolUiComponentsClPageUi(instance)
}
)
open class PassThrough6 (
    open var className: String? = null,
    open var inner: PassThroughProps? = null,
    open var label: PassThroughProps? = null,
    open var content: PassThroughProps? = null,
    open var error: PassThroughProps? = null,
) : UTSObject()
val runBlock3 = run {
    if (!isNull(ctx.tabBar) && !isEmpty(ctx.tabBar.list!!)) {
        TABS = ctx.tabBar.list!!
        TABS.forEach(fun(e){
            if (!e.pagePath.startsWith("/")) {
                e.pagePath = "/" + e.pagePath
            }
        }
        )
    }
}
open class Refs {
    open var data = reactive(UTSJSONObject())
    open fun set(name: String): (el: Instance) -> Unit {
        return fun(el: Instance){
            this.data[name] = el
        }
    }
    open fun get(name: String): Instance {
        val d = this.data[name] as ComponentPublicInstance
        if (isNull(d)) {
            return null
        }
        return d
    }
    open fun <T> getExposed(name: String, key: String): T? {
        val d = this.get(name)
        if (isNull(d)) {
            return null
        }
        val ex = d!!.`$exposed` as Map<String, Any>
        if (isNull(ex)) {
            return null
        }
        return ex[key] as T?
    }
    open fun <T> call(name: String, method: String, data: UTSJSONObject? = null): T {
        return this.get(name)!!.`$callMethod`(method, data) as T
    }
    open fun callMethod(name: String, method: String, data: UTSJSONObject? = null): Unit {
        this.get(name)!!.`$callMethod`(method, data)
    }
    open fun open(name: String, data: UTSJSONObject? = null) {
        this.callMethod(name, "open", data)
    }
    open fun close(name: String) {
        return this.callMethod(name, "close")
    }
}
fun useRefs(): Refs {
    return Refs()
}
open class PagerResponse (
    @JsonNotNull
    open var list: UTSArray<UTSJSONObject>,
    @JsonNotNull
    open var pagination: Pagination,
) : UTSObject()
typealias PagerCallback = (params: UTSJSONObject) -> UTSPromise<UTSJSONObject>
open class Pager {
    open var page: Number = 1
    open var size: Number = 20
    open var total: Number = 0
    open var list = ref(_uA<UTSJSONObject>())
    open var loading = ref(false)
    open var refreshing = ref(false)
    open var finished = ref(false)
    open var params = UTSJSONObject()
    open var cb: PagerCallback? = null
    constructor(cb: PagerCallback){
        this.cb = cb
    }
    open fun done() {
        this.loading.value = false
    }
    open fun clear() {
        this.list.value = _uA()
        this.finished.value = false
        this.refreshing.value = false
        this.loading.value = false
    }
    open var refresh = fun(params: UTSJSONObject): UTSPromise<UTSJSONObject> {
        return wrapUTSPromise(suspend w@{
                return@w UTSPromise(fun(resolve, reject){
                    this.params = assign(this.params, params)
                    val data = UTSJSONObject.assign<UTSJSONObject>(_uO("page" to this.page, "size" to this.size), this.params) as UTSJSONObject
                    this.loading.value = true
                    this.cb!!(data).then(fun(res){
                        val _ref = parse<PagerResponse>(res)!!
                        val list = _ref.list
                        val pagination = _ref.pagination
                        this.page = pagination.page
                        this.size = pagination.size
                        this.total = pagination.total
                        this.finished.value = this.list.value.length >= this.total
                        if (data["page"] == 1) {
                            this.list.value = list.slice()
                        } else {
                            this.list.value.push(*list.toTypedArray())
                        }
                        resolve(res)
                    }
                    ).`catch`(fun(err){
                        reject(err)
                    }
                    ).`finally`(fun(){
                        this.loading.value = false
                    }
                    )
                }
                )
        })
    }
    open var loadMore = fun(){
        if (this.loading.value || this.finished.value) {
            return
        }
        this.refresh(_uO("page" to (this.page + 1)))
    }
    open var listView = computed<UTSArray<ClListViewItem>>(fun(): UTSArray<ClListViewItem> {
        return useListView(this.list.value)
    }
    )
}
val usePager = fun(cb: PagerCallback): Pager {
    return Pager(cb)
}
fun useCascader(data: UTSArray<UTSJSONObject>): UTSArray<ClListViewItem> {
    return data.map(fun(e): ClListViewItem {
        return parse<ClCascaderOption>(e)!!
    }
    )
}
open class Response (
    open var code: Number? = null,
    open var message: String? = null,
    open var data: Any? = null,
) : UTSObject()
var requests: UTSArray<((token: String) -> Unit)> = _uA()
var isRefreshing = false
val isIgnoreToken = fun(url: String): Boolean {
    return ignoreTokens.some(fun(e): Boolean {
        val pattern = e.replace(UTSRegExp("\\*", "g"), ".*")
        return UTSRegExp(pattern).test(url)
    }
    )
}
fun useStore(): Store {
    return Store(user = user, dict = dict)
}
fun <T> request(options: RequestOptions1): UTSPromise<T> {
    var url = options.url
    var _options_method = options.method
    var method = if (_options_method == null) {
        "GET"
    } else {
        _options_method
    }
    var _options_data = options.data
    var data = if (_options_data == null) {
        UTSJSONObject()
    } else {
        _options_data
    }
    var _options_header = options.header
    var header = if (_options_header == null) {
        UTSJSONObject()
    } else {
        _options_header
    }
    var _options_timeout = options.timeout
    var timeout = if (_options_timeout == null) {
        60000
    } else {
        _options_timeout
    }
    val user = useStore().user
    if (isDev) {
        console.log("[" + method + "] " + url)
    }
    if (!url.startsWith("http")) {
        url = config1.baseUrl + url
    }
    var Authorization: String? = user.token
    if (isIgnoreToken(url)) {
        Authorization = null
    }
    return UTSPromise(fun(resolve, reject){
        val next = fun(){
            uni_request<Any>(RequestOptions(url = url, method = method, data = data, header = UTSJSONObject.assign(_uO("Authorization" to Authorization, "language" to locale.value), (header as UTSJSONObject)), timeout = timeout, success = fun(res) {
                if (res.statusCode == 401) {
                    user.logout()
                    return reject(Response(message = t("无权限")))
                }
                if (res.statusCode == 502) {
                    return reject(Response(message = t("服务异常")))
                }
                if (res.statusCode == 404) {
                    return reject(Response(message = "[404] " + url))
                }
                if (res.statusCode == 200) {
                    if (!isObject(res.data as Any)) {
                        resolve(res.data as T)
                        return
                    }
                    val _ref = parse<Response>(res.data ?: object : UTSJSONObject() {
                        var code: Number = 0
                    })!!
                    val code = _ref.code
                    val message = _ref.message
                    val data = _ref.data
                    when (code) {
                        1000 -> 
                            resolve(data as T)
                        else -> 
                            reject(Response(message = message, code = code))
                    }
                } else {
                    reject(Response(message = t("服务异常")))
                }
            }
            , fail = fun(err) {
                reject(Response(message = err.errMsg))
            }
            ))
        }
        if (!options.url.includes("/refreshToken")) {
            if (!isNull(Authorization)) {
                if (storage.isExpired("token")) {
                    if (storage.isExpired("refreshToken")) {
                        user.logout()
                        return
                    }
                    if (!isRefreshing) {
                        isRefreshing = true
                        user.refreshToken().then(fun(token){
                            requests.forEach(fun(cb){
                                return cb(token)
                            }
                            )
                            requests = _uA()
                            isRefreshing = false
                        }
                        ).`catch`(fun(err){
                            reject(err)
                            user.logout()
                        }
                        )
                    }
                    UTSPromise(fun(resolve, _reject){
                        requests.push(fun(token: String){
                            Authorization = token
                            next()
                            resolve(true)
                        }
                        )
                    }
                    )
                    return
                }
            }
        }
        next()
    }
    )
}
val service = Service(base = BaseInterface(comm = BaseComm(uploadMode = fun(data: Any?): UTSPromise<Any> {
    return request<Any>(RequestOptions1(url = "/app/base/comm/uploadMode", method = "GET", data = data))
}
, upload = fun(data: Any?): UTSPromise<Any> {
    return request<Any>(RequestOptions1(url = "/app/base/comm/upload", method = "POST", data = data))
}
, param = fun(data: Any?): UTSPromise<Any> {
    return request<Any>(RequestOptions1(url = "/app/base/comm/param", method = "GET", data = data))
}
, eps = fun(data: Any?): UTSPromise<Any> {
    return request<Any>(RequestOptions1(url = "/app/base/comm/eps", method = "GET", data = data))
}
)), dict = DictInterface(info = DictInfo(types = fun(data: Any?): UTSPromise<Any> {
    return request<Any>(RequestOptions1(url = "/app/dict/info/types", method = "GET", data = data))
}
, data = fun(data: Any?): UTSPromise<Any> {
    return request<Any>(RequestOptions1(url = "/app/dict/info/data", method = "POST", data = data))
}
)), user = UserInterface(address = UserAddress(`default` = fun(data: Any?): UTSPromise<Any> {
    return request<Any>(RequestOptions1(url = "/app/user/address/default", method = "GET", data = data))
}
, `delete` = fun(data: Any?): UTSPromise<Any> {
    return request<Any>(RequestOptions1(url = "/app/user/address/delete", method = "POST", data = data))
}
, update = fun(data: Any?): UTSPromise<Any> {
    return request<Any>(RequestOptions1(url = "/app/user/address/update", method = "POST", data = data))
}
, info = fun(data: Any?): UTSPromise<UserAddressEntity> {
    return request<UserAddressEntity>(RequestOptions1(url = "/app/user/address/info", method = "GET", data = data))
}
, list = fun(data: Any?): UTSPromise<UTSArray<UserAddressEntity>> {
    return request<UTSArray<UserAddressEntity>>(RequestOptions1(url = "/app/user/address/list", method = "POST", data = data))
}
, page = fun(data: Any?): UTSPromise<UserAddressPageResponse> {
    return request<UserAddressPageResponse>(RequestOptions1(url = "/app/user/address/page", method = "POST", data = data))
}
, add = fun(data: Any?): UTSPromise<Any> {
    return request<Any>(RequestOptions1(url = "/app/user/address/add", method = "POST", data = data))
}
), comm = UserComm(wxMpConfig = fun(data: Any?): UTSPromise<Any> {
    return request<Any>(RequestOptions1(url = "/app/user/comm/wxMpConfig", method = "POST", data = data))
}
), info = UserInfo(updatePassword = fun(data: Any?): UTSPromise<Any> {
    return request<Any>(RequestOptions1(url = "/app/user/info/updatePassword", method = "POST", data = data))
}
, updatePerson = fun(data: Any?): UTSPromise<Any> {
    return request<Any>(RequestOptions1(url = "/app/user/info/updatePerson", method = "POST", data = data))
}
, bindPhone = fun(data: Any?): UTSPromise<Any> {
    return request<Any>(RequestOptions1(url = "/app/user/info/bindPhone", method = "POST", data = data))
}
, miniPhone = fun(data: Any?): UTSPromise<Any> {
    return request<Any>(RequestOptions1(url = "/app/user/info/miniPhone", method = "POST", data = data))
}
, person = fun(data: Any?): UTSPromise<Any> {
    return request<Any>(RequestOptions1(url = "/app/user/info/person", method = "GET", data = data))
}
, logoff = fun(data: Any?): UTSPromise<Any> {
    return request<Any>(RequestOptions1(url = "/app/user/info/logoff", method = "POST", data = data))
}
), login = UserLogin(refreshToken = fun(data: Any?): UTSPromise<Any> {
    return request<Any>(RequestOptions1(url = "/app/user/login/refreshToken", method = "POST", data = data))
}
, miniPhone = fun(data: Any?): UTSPromise<Any> {
    return request<Any>(RequestOptions1(url = "/app/user/login/miniPhone", method = "POST", data = data))
}
, uniPhone = fun(data: Any?): UTSPromise<Any> {
    return request<Any>(RequestOptions1(url = "/app/user/login/uniPhone", method = "POST", data = data))
}
, password = fun(data: Any?): UTSPromise<Any> {
    return request<Any>(RequestOptions1(url = "/app/user/login/password", method = "POST", data = data))
}
, captcha = fun(data: Any?): UTSPromise<Any> {
    return request<Any>(RequestOptions1(url = "/app/user/login/captcha", method = "GET", data = data))
}
, smsCode = fun(data: Any?): UTSPromise<Any> {
    return request<Any>(RequestOptions1(url = "/app/user/login/smsCode", method = "POST", data = data))
}
, wxApp = fun(data: Any?): UTSPromise<Any> {
    return request<Any>(RequestOptions1(url = "/app/user/login/wxApp", method = "POST", data = data))
}
, phone = fun(data: Any?): UTSPromise<Any> {
    return request<Any>(RequestOptions1(url = "/app/user/login/phone", method = "POST", data = data))
}
, mini = fun(data: Any?): UTSPromise<Any> {
    return request<Any>(RequestOptions1(url = "/app/user/login/mini", method = "POST", data = data))
}
, mp = fun(data: Any?): UTSPromise<Any> {
    return request<Any>(RequestOptions1(url = "/app/user/login/mp", method = "POST", data = data))
}
)))
open class DictData (
    @JsonNotNull
    open var key: String,
    @JsonNotNull
    open var list: UTSArray<DictItem>,
) : UTSObject()
open class Dict {
    private var data: UTSArray<DictData> = reactive(_uA())
    constructor(){}
    open fun find(key: String): DictData? {
        return this.data.find(fun(e): Boolean {
            return e.key == key
        }
        )
    }
    open fun get(key: DictKey): UTSArray<DictItem> {
        return this.find(key)?.list ?: UTSArray<DictItem>()
    }
    open fun getItem(key: DictKey, value: Any): DictItem? {
        val item = this.get(key).find(fun(e): Boolean {
            return e.value == value
        }
        )
        if (isNull(item)) {
            return null
        }
        return item!!
    }
    open fun getItems(key: DictKey, values: UTSArray<Any>): UTSArray<DictItem> {
        return values.map(fun(e): DictItem? {
            return this.getItem(key, e)
        }
        ).filter(fun(e): Boolean {
            return !isNull(e)
        }
        ) as UTSArray<DictItem>
    }
    open fun getItemLabel(key: DictKey, value: Any): String {
        val item = this.getItem(key, value)
        if (isNull(item) || isNull(item?.label)) {
            return ""
        }
        return item!!.label
    }
    open fun refresh(types: UTSArray<DictKey>?): UTSPromise<Unit> {
        return wrapUTSPromise(suspend {
                val res = await(service.dict.info.data(_uO("types" to types)))
                forInObject(res, fun(arr, key){
                    var list: UTSArray<DictItem> = _uA()
                    (arr as UTSArray<UTSJSONObject>).forEach(fun(e){
                        e["label"] = e["name"]
                        val d = parse<DictItem>(e)
                        if (d != null) {
                            list.push(d)
                        }
                    }
                    )
                    val item = this.find(key)
                    if (isNull(item)) {
                        this.data.push(DictData(key = key, list = list))
                    } else {
                        item!!.list = list
                    }
                }
                )
        })
    }
}
val dict = Dict()
open class UploadTask (
    open var abort: () -> Unit,
) : UTSObject()
open class UploadOptions (
    open var onProgressUpdate: ((result: OnProgressUpdateResult) -> Unit)? = null,
    open var onTask: ((task: UploadTask) -> Unit)? = null,
) : UTSObject()
open class UploadMode (
    @JsonNotNull
    open var mode: String,
    @JsonNotNull
    open var type: String,
) : UTSObject()
open class UploadRequestOptions (
    @JsonNotNull
    open var url: String,
    open var preview: String? = null,
    @JsonNotNull
    open var data: Any,
) : UTSObject()
open class CloudUploadResponse (
    open var uploadUrl: String? = null,
    open var url: String? = null,
    open var host: String? = null,
    open var credentials: Any? = null,
    open var OSSAccessKeyId: String? = null,
    open var policy: String? = null,
    open var signature: String? = null,
    open var publicDomain: String? = null,
    open var token: String? = null,
    open var fields: Any? = null,
) : UTSObject()
open class LocalUploadResponse (
    @JsonNotNull
    open var code: Number,
    open var message: String? = null,
    @JsonNotNull
    open var data: String,
) : UTSObject()
fun getUploadMode(): UTSPromise<UploadMode> {
    return wrapUTSPromise(suspend w@{
            val res = await(service.base.comm.uploadMode(UTSJSONObject()))
            return@w parse<UploadMode>(res)!!
    })
}
fun upload(path: String): UTSPromise<String> {
    return wrapUTSPromise(suspend w@{
            return@w uploadFile(ChooseImageTempFile(path = path, size = 0, name = "", type = "image/png"))
    })
}
fun uploadFile(file: ChooseImageTempFile, options: UploadOptions? = null): UTSPromise<String> {
    return wrapUTSPromise(suspend w@{
            val user = useStore().user
            val _ref = await(getUploadMode())
            val mode = _ref.mode
            val type = _ref.type
            val isLocal = mode == "local"
            val isCloud = mode == "cloud"
            val filePath = file.path
            var fileName = file.name
            if (fileName == "" || fileName == null) {
                fileName = basename(filePath)
            }
            var ext = extname(fileName)
            if (ext == "") {
                ext = "png"
            }
            var key = "" + filename(fileName) + "_" + uuid() + "." + ext
            if (isCloud) {
                key = "app/" + Date.now() + "/" + key
            }
            return@w UTSPromise(fun(resolve, reject){
                fun next(ref1: UploadRequestOptions) {
                    var url = ref1.url
                    var preview = ref1.preview
                    var data = ref1.data
                    val task = uni_uploadFile(UploadFileOptions(url = url, filePath = filePath, name = "file", header = object : UTSJSONObject() {
                        var Authorization = if (isLocal) {
                            user.token
                        } else {
                            null
                        }
                    }, formData = UTSJSONObject.assign(UTSJSONObject(), (data as UTSJSONObject), _uO("key" to key)), success = fun(res) {
                        if (isLocal) {
                            val _ref = parseObject<LocalUploadResponse>(res.data)!!
                            val code = _ref.code
                            val data = _ref.data
                            val message = _ref.message
                            if (code == 1000) {
                                resolve(data)
                            } else {
                                reject(message)
                            }
                        } else {
                            resolve(pathJoin(preview ?: url, key!!))
                        }
                    }
                    , fail = fun(err) {
                        console.error(err)
                        reject(err)
                    }
                    ))
                    if (options?.onTask != null) {
                        options.onTask!!(UploadTask(abort = fun(){
                            task.abort()
                        }
                        ))
                    }
                    if (options?.onProgressUpdate != null) {
                        task.onProgressUpdate(fun(result){
                            val progress = result.progress
                            val totalBytesSent = result.totalBytesSent
                            val totalBytesExpectedToSend = result.totalBytesExpectedToSend
                            options.onProgressUpdate!!(OnProgressUpdateResult(progress = progress, totalBytesSent = totalBytesSent, totalBytesExpectedToSend = totalBytesExpectedToSend))
                        }
                        )
                    }
                }
                if (isLocal) {
                    next(UploadRequestOptions(url = config1.baseUrl + "/app/base/comm/upload", data = UTSJSONObject()))
                } else {
                    val data: UTSJSONObject = UTSJSONObject()
                    if (type == "aws") {
                        data["key"] = key
                    }
                    service.base.comm.upload(data).then(fun(res){
                        val d = parse<CloudUploadResponse>(res)!!
                        when (type) {
                            "cos" -> 
                                next(UploadRequestOptions(url = d.url!!, data = d.credentials!!))
                            "oss" -> 
                                next(UploadRequestOptions(url = d.host!!, data = object : UTSJSONObject() {
                                    var OSSAccessKeyId = d.OSSAccessKeyId
                                    var policy = d.policy
                                    var signature = d.signature
                                }))
                            "qiniu" -> 
                                next(UploadRequestOptions(url = d.uploadUrl!!, preview = d.publicDomain, data = object : UTSJSONObject() {
                                    var token = d.token
                                }))
                            "aws" -> 
                                next(UploadRequestOptions(url = d.url!!, data = d.fields!!))
                        }
                    }
                    ).`catch`(reject)
                }
            }
            )
    })
}
open class User {
    open var info = reactive<UserInfoEntity>(UserInfoEntity())
    open var token: String? = null
    constructor(){
        val userInfo = storage.get("userInfo")
        val token = storage.get("token") as String?
        this.token = if (token == "") {
            null
        } else {
            token
        }
        this.set(userInfo!!)
    }
    open fun get(): UTSPromise<Unit> {
        return wrapUTSPromise(suspend {
                if (this.token != null) {
                    await(service.user.info.person(UTSJSONObject()).then(fun(res){
                        if (!uni.UNIBC2A3BF.isNull(res)) {
                            this.set(res)
                        }
                    }
                    ).`catch`(fun(){}))
                }
        })
    }
    open fun set(data: Any) {
        if (uni.UNIBC2A3BF.isNull(data)) {
            return
        }
        this.remove()
        forInObject(data, fun(value, key){
            this.info[key] = value
        }
        )
        storage.set("userInfo", data, 0)
    }
    open fun update(data: UserInfoEntity): UTSPromise<Unit> {
        return wrapUTSPromise(suspend w@{
                if (uni.UNIBC2A3BF.isNull(data) || this.isNull()) {
                    return@w
                }
                val params = UTSJSONObject.assign<UTSJSONObject>(UTSJSONObject(), data) as UTSJSONObject
                forInObject(params as Any, fun(value, key){
                    this.info[key] = value
                }
                )
                await(service.user.info.updatePerson(params))
        })
    }
    open fun remove() {
        forInObject(UTSJSONObject.assign<Any>(UTSJSONObject(), this.info) as Any, fun(_, key){
            this.info[key] = null
        }
        )
    }
    open fun isNull(): Boolean {
        return uni.UNIBC2A3BF.isNull(this.info["id"])
    }
    open fun clear() {
        storage.remove("userInfo")
        storage.remove("token")
        storage.remove("refreshToken")
        this.token = null
        this.remove()
    }
    open fun logout() {
        this.clear()
        router.login()
    }
    open fun setToken(data: Token) {
        this.token = data.token
        storage.set("token", data.token, data.expire - 5)
        storage.set("refreshToken", data.refreshToken, data.refreshExpire - 5)
    }
    open fun refreshToken(): UTSPromise<String> {
        return UTSPromise(fun(resolve, reject){
            service.user.login.refreshToken(object : UTSJSONObject() {
                var refreshToken = storage.get("refreshToken")
            }).then(fun(res){
                val token = parse<Token>(res)
                if (token != null) {
                    this.setToken(token)
                    resolve(token.token)
                }
            }
            ).`catch`(fun(err){
                reject(err)
            }
            )
        }
        )
    }
}
val user = User()
open class FormItem {
    open var formItemRef = ref<ClFormItemComponentPublicInstance?>(null)
    open var isError: ComputedRef<Boolean>
    constructor(){
        val isError = Form().isError
        if (this.formItemRef.value == null) {
            val ClFormItem = useParent<ClFormItemComponentPublicInstance>("cl-form-item")
            if (ClFormItem != null) {
                this.formItemRef.value = ClFormItem
            }
        }
        this.isError = computed<Boolean>(fun(): Boolean {
            if (this.formItemRef.value == null) {
                return false
            }
            return isError(this.formItemRef.value!!.prop)
        }
        )
    }
}
val useForm = fun(): Form {
    return Form()
}
val useFormItem = fun(): FormItem {
    return FormItem()
}
val GenUniModulesCoolUiComponentsClFormClFormClass = CreateVueComponent(GenUniModulesCoolUiComponentsClFormClForm::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClFormClForm.name, inheritAttrs = GenUniModulesCoolUiComponentsClFormClForm.inheritAttrs, inject = GenUniModulesCoolUiComponentsClFormClForm.inject, props = GenUniModulesCoolUiComponentsClFormClForm.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClFormClForm.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClFormClForm.emits, components = GenUniModulesCoolUiComponentsClFormClForm.components, styles = GenUniModulesCoolUiComponentsClFormClForm.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenUniModulesCoolUiComponentsClFormClForm.setup(props as GenUniModulesCoolUiComponentsClFormClForm, ctx)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClFormClForm {
    return GenUniModulesCoolUiComponentsClFormClForm(instance)
}
)
typealias ClFormComponentPublicInstance = GenUniModulesCoolUiComponentsClFormClForm
val GenUniModulesCoolUiComponentsClPageClPageClass = CreateVueComponent(GenUniModulesCoolUiComponentsClPageClPage::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClPageClPage.name, inheritAttrs = GenUniModulesCoolUiComponentsClPageClPage.inheritAttrs, inject = GenUniModulesCoolUiComponentsClPageClPage.inject, props = GenUniModulesCoolUiComponentsClPageClPage.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClPageClPage.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClPageClPage.emits, components = GenUniModulesCoolUiComponentsClPageClPage.components, styles = GenUniModulesCoolUiComponentsClPageClPage.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenUniModulesCoolUiComponentsClPageClPage.setup(props as GenUniModulesCoolUiComponentsClPageClPage, ctx)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClPageClPage {
    return GenUniModulesCoolUiComponentsClPageClPage(instance)
}
)
typealias ClPageComponentPublicInstance = GenUniModulesCoolUiComponentsClPageClPage
typealias ClConfirmComponentPublicInstance = GenUniModulesCoolUiComponentsClConfirmClConfirm
typealias ClPopupComponentPublicInstance = GenUniModulesCoolUiComponentsClPopupClPopup
typealias ClToastComponentPublicInstance = GenUniModulesCoolUiComponentsClToastClToast
open class GenUniModulesCoolUiComponentsClFormItemClFormItemSlotDataError (
    @JsonNotNull
    open var error: String,
) : SlotData()
val GenUniModulesCoolUiComponentsClFormItemClFormItemClass = CreateVueComponent(GenUniModulesCoolUiComponentsClFormItemClFormItem::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClFormItemClFormItem.name, inheritAttrs = GenUniModulesCoolUiComponentsClFormItemClFormItem.inheritAttrs, inject = GenUniModulesCoolUiComponentsClFormItemClFormItem.inject, props = GenUniModulesCoolUiComponentsClFormItemClFormItem.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClFormItemClFormItem.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClFormItemClFormItem.emits, components = GenUniModulesCoolUiComponentsClFormItemClFormItem.components, styles = GenUniModulesCoolUiComponentsClFormItemClFormItem.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenUniModulesCoolUiComponentsClFormItemClFormItem.setup(props as GenUniModulesCoolUiComponentsClFormItemClFormItem, ctx)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClFormItemClFormItem {
    return GenUniModulesCoolUiComponentsClFormItemClFormItem(instance)
}
)
typealias ClFormItemComponentPublicInstance = GenUniModulesCoolUiComponentsClFormItemClFormItem
open class GenApp : BaseApp {
    constructor(__ins: ComponentInternalInstance) : super(__ins) {
        onLaunch(fun(_: OnLaunchOptions) {
            console.log("App Launch")
        }
        , __ins)
        onAppShow(fun(_: OnShowOptions) {
            console.log("App Show")
        }
        , __ins)
        onAppHide(fun() {
            console.log("App Hide")
        }
        , __ins)
        onExit(fun() {
            console.log("App Exit")
        }
        , __ins)
    }
    companion object {
        val styles: Map<String, Map<String, Map<String, Any>>> by lazy {
            _nCS(_uA(
                styles0,
                styles1,
                styles2
            ))
        }
        val styles0: Map<String, Map<String, Map<String, Any>>>
            get() {
                return _uM("container" to _pS(_uM("width" to "100%")), "pointer-events-none" to _pS(_uM("pointerEvents" to "none")), "-important-fixed" to _pS(_uM("!position" to "fixed")), "fixed" to _pS(_uM("position" to "fixed")), "absolute" to _pS(_uM("position" to "absolute")), "relative" to _pS(_uM("position" to "relative")), "-important-right-1" to _pS(_uM("!right" to "7rpx")), "-important-right-6" to _pS(_uM("!right" to "42rpx")), "-important-right--bracket-start--6rpx-bracket-end-" to _pS(_uM("!right" to "-6rpx")), "-important-top-1" to _pS(_uM("!top" to "7rpx")), "-important-top--bracket-start--6rpx-bracket-end-" to _pS(_uM("!top" to "-6rpx")), "bottom-0" to _pS(_uM("bottom" to 0)), "bottom-2" to _pS(_uM("bottom" to "14rpx")), "bottom-3" to _pS(_uM("bottom" to "21rpx")), "left-0" to _pS(_uM("left" to 0)), "left-1" to _pS(_uM("left" to "7rpx")), "left-1-slash-3" to _pS(_uM("left" to "33.333333%")), "left-2-slash-3" to _pS(_uM("left" to "66.666667%")), "right-0" to _pS(_uM("right" to 0)), "right-2" to _pS(_uM("right" to "14rpx")), "right-8" to _pS(_uM("right" to "56rpx")), "right--bracket-start--6rpx-bracket-end-" to _pS(_uM("right" to "-6rpx")), "right--bracket-start-24rpx-bracket-end-" to _pS(_uM("right" to "24rpx")), "top-0" to _pS(_uM("top" to 0)), "top-1" to _pS(_uM("top" to "7rpx")), "top-1-slash-2" to _pS(_uM("top" to "50%")), "top-1-slash-3" to _pS(_uM("top" to "33.333333%")), "top-2" to _pS(_uM("top" to "14rpx")), "top-2-slash-3" to _pS(_uM("top" to "66.666667%")), "z-10" to _pS(_uM("zIndex" to 10)), "z-50" to _pS(_uM("zIndex" to 50)), "m-0" to _pS(_uM("marginTop" to 0, "marginRight" to 0, "marginBottom" to 0, "marginLeft" to 0)), "m-1" to _pS(_uM("marginTop" to "7rpx", "marginRight" to "7rpx", "marginBottom" to "7rpx", "marginLeft" to "7rpx")), "-important-mx--bracket-start-2rpx-bracket-end-" to _pS(_uM("!marginLeft" to "2rpx", "!marginRight" to "2rpx")), "-important-my-1" to _pS(_uM("!marginTop" to "7rpx", "!marginBottom" to "7rpx")), "mx-2" to _pS(_uM("marginLeft" to "14rpx", "marginRight" to "14rpx")), "mx-3" to _pS(_uM("marginLeft" to "21rpx", "marginRight" to "21rpx")), "mx--bracket-start--10rpx-bracket-end-" to _pS(_uM("marginLeft" to "-10rpx", "marginRight" to "-10rpx")), "mx--bracket-start--12rpx-bracket-end-" to _pS(_uM("marginLeft" to "-12rpx", "marginRight" to "-12rpx")), "mx--bracket-start-10rpx-bracket-end-" to _pS(_uM("marginLeft" to "10rpx", "marginRight" to "10rpx")), "my-1" to _pS(_uM("marginTop" to "7rpx", "marginBottom" to "7rpx")), "my-2" to _pS(_uM("marginTop" to "14rpx", "marginBottom" to "14rpx")), "-important-mb-2" to _pS(_uM("!marginBottom" to "14rpx")), "-important-ml-5" to _pS(_uM("!marginLeft" to "35rpx")), "-important-mr-2" to _pS(_uM("!marginRight" to "14rpx")), "mb-1" to _pS(_uM("marginBottom" to "7rpx")), "mb-2" to _pS(_uM("marginBottom" to "14rpx")), "mb-3" to _pS(_uM("marginBottom" to "21rpx")), "mb-5" to _pS(_uM("marginBottom" to "35rpx")), "mb-8" to _pS(_uM("marginBottom" to "56rpx")), "ml-1" to _pS(_uM("marginLeft" to "7rpx")), "ml-2" to _pS(_uM("marginLeft" to "14rpx")), "ml-3" to _pS(_uM("marginLeft" to "21rpx")), "ml--bracket-start--4rpx-bracket-end-" to _pS(_uM("marginLeft" to "-4rpx")), "mr-1" to _pS(_uM("marginRight" to "7rpx")), "mr-2" to _pS(_uM("marginRight" to "14rpx")), "mr-24" to _pS(_uM("marginRight" to "168rpx")), "mr-3" to _pS(_uM("marginRight" to "21rpx")), "mr-5" to _pS(_uM("marginRight" to "35rpx")), "mr--bracket-start--4rpx-bracket-end-" to _pS(_uM("marginRight" to "-4rpx")), "mr--bracket-start-10rpx-bracket-end-" to _pS(_uM("marginRight" to "10rpx")), "mr--bracket-start-8rpx-bracket-end-" to _pS(_uM("marginRight" to "8rpx")), "mr-auto" to _pS(_uM("marginRight" to "auto")), "mt-1" to _pS(_uM("marginTop" to "7rpx")), "mt-10" to _pS(_uM("marginTop" to "70rpx")), "mt-2" to _pS(_uM("marginTop" to "14rpx")), "mt-3" to _pS(_uM("marginTop" to "21rpx")), "mt-4" to _pS(_uM("marginTop" to "28rpx")), "mt-5" to _pS(_uM("marginTop" to "35rpx")), "mt-6" to _pS(_uM("marginTop" to "42rpx")), "flex" to _pS(_uM("display" to "flex")), "-important-h-3" to _pS(_uM("!height" to "21rpx")), "-important-h-9" to _pS(_uM("!height" to "63rpx")), "-important-h--bracket-start-70rpx-bracket-end-" to _pS(_uM("!height" to "70rpx")), "-important-h--bracket-start-80rpx-bracket-end-" to _pS(_uM("!height" to "80rpx")), "-important-h--bracket-start-90rpx-bracket-end-" to _pS(_uM("!height" to "90rpx")), "-important-h-full" to _pS(_uM("!height" to "100%")), "h-10" to _pS(_uM("height" to "70rpx")), "h-14" to _pS(_uM("height" to "98rpx")), "h-2" to _pS(_uM("height" to "14rpx")), "h-8" to _pS(_uM("height" to "56rpx")), "h--bracket-start-100rpx-bracket-end-" to _pS(_uM("height" to "100rpx")), "h--bracket-start-160rpx-bracket-end-" to _pS(_uM("height" to "160rpx")), "h--bracket-start-40px-bracket-end-" to _pS(_uM("height" to 40)), "h--bracket-start-60px-bracket-end-" to _pS(_uM("height" to 60)), "h--bracket-start-80rpx-bracket-end-" to _pS(_uM("height" to "80rpx")), "h--bracket-start-95rpx-bracket-end-" to _pS(_uM("height" to "95rpx")), "h-full" to _pS(_uM("height" to "100%")), "-important-w-9" to _pS(_uM("!width" to "63rpx")), "-important-w--bracket-start-160rpx-bracket-end-" to _pS(_uM("!width" to "160rpx")), "-important-w--bracket-start-180rpx-bracket-end-" to _pS(_uM("!width" to "180rpx")), "-important-w-auto" to _pS(_uM("!width" to "auto")), "-important-w-full" to _pS(_uM("!width" to "100%")), "w-10" to _pS(_uM("width" to "70rpx")), "w-2" to _pS(_uM("width" to "14rpx")), "w-20" to _pS(_uM("width" to "140rpx")), "w-24" to _pS(_uM("width" to "168rpx")), "w-8" to _pS(_uM("width" to "56rpx")), "w--bracket-start-100rpx-bracket-end-" to _pS(_uM("width" to "100rpx")), "w--bracket-start-120rpx-bracket-end-" to _pS(_uM("width" to "120rpx")))
            }
        val styles1: Map<String, Map<String, Map<String, Any>>>
            get() {
                return _uM("w--bracket-start-40px-bracket-end-" to _pS(_uM("width" to 40)), "w--bracket-start-460rpx-bracket-end-" to _pS(_uM("width" to "460rpx")), "w--bracket-start-500rpx-bracket-end-" to _pS(_uM("width" to "500rpx")), "w-full" to _pS(_uM("width" to "100%")), "flex-1" to _pS(_uM("flex" to 1)), "flex--bracket-start-2-bracket-end-" to _pS(_uM("flex" to 2)), "flex-shrink" to _pS(_uM("flexShrink" to 1)), "rotate-90" to _pS(_uM("transform" to "rotate(90deg)")), "scale-75" to _pS(_uM("transform" to "scaleX(.75) scaleY(.75)")), "-important-scale-y-100" to _pS(_uM("!transform" to "scaleY(1)")), "scale-y-80" to _pS(_uM("transform" to "scaleY(0.8)")), "transform" to _pS(_uM("transform" to "none")), "flex-row" to _pS(_uM("flexDirection" to "row")), "flex-col" to _pS(_uM("flexDirection" to "column")), "flex-wrap" to _pS(_uM("flexWrap" to "wrap")), "items-center" to _pS(_uM("alignItems" to "center")), "justify-start" to _pS(_uM("justifyContent" to "flex-start")), "justify-end" to _pS(_uM("justifyContent" to "flex-end")), "justify-center" to _pS(_uM("justifyContent" to "center")), "justify-between" to _pS(_uM("justifyContent" to "space-between")), "overflow-visible" to _pS(_uM("overflow" to "visible")), "truncate" to _pS(_uM("overflow" to "hidden", "textOverflow" to "ellipsis", "whiteSpace" to "nowrap")), "whitespace-nowrap" to _pS(_uM("whiteSpace" to "nowrap")), "-important-rounded-2xl" to _pS(_uM("!borderTopLeftRadius" to "28rpx", "!borderTopRightRadius" to "28rpx", "!borderBottomRightRadius" to "28rpx", "!borderBottomLeftRadius" to "28rpx")), "-important-rounded-3xl" to _pS(_uM("!borderTopLeftRadius" to "42rpx", "!borderTopRightRadius" to "42rpx", "!borderBottomRightRadius" to "42rpx", "!borderBottomLeftRadius" to "42rpx")), "-important-rounded--bracket-start-60rpx-bracket-end-" to _pS(_uM("!borderTopLeftRadius" to "60rpx", "!borderTopRightRadius" to "60rpx", "!borderBottomRightRadius" to "60rpx", "!borderBottomLeftRadius" to "60rpx")), "-important-rounded-full" to _pS(_uM("!borderTopLeftRadius" to 9999, "!borderTopRightRadius" to 9999, "!borderBottomRightRadius" to 9999, "!borderBottomLeftRadius" to 9999)), "-important-rounded-lg" to _pS(_uM("!borderTopLeftRadius" to "14rpx", "!borderTopRightRadius" to "14rpx", "!borderBottomRightRadius" to "14rpx", "!borderBottomLeftRadius" to "14rpx")), "-important-rounded-md" to _pS(_uM("!borderTopLeftRadius" to "10.5rpx", "!borderTopRightRadius" to "10.5rpx", "!borderBottomRightRadius" to "10.5rpx", "!borderBottomLeftRadius" to "10.5rpx")), "-important-rounded-none" to _pS(_uM("!borderTopLeftRadius" to 0, "!borderTopRightRadius" to 0, "!borderBottomRightRadius" to 0, "!borderBottomLeftRadius" to 0)), "-important-rounded-xl" to _pS(_uM("!borderTopLeftRadius" to "21rpx", "!borderTopRightRadius" to "21rpx", "!borderBottomRightRadius" to "21rpx", "!borderBottomLeftRadius" to "21rpx")), "rounded" to _pS(_uM("borderTopLeftRadius" to "7rpx", "borderTopRightRadius" to "7rpx", "borderBottomRightRadius" to "7rpx", "borderBottomLeftRadius" to "7rpx")), "rounded-2xl" to _pS(_uM("borderTopLeftRadius" to "28rpx", "borderTopRightRadius" to "28rpx", "borderBottomRightRadius" to "28rpx", "borderBottomLeftRadius" to "28rpx")), "rounded-full" to _pS(_uM("borderTopLeftRadius" to 9999, "borderTopRightRadius" to 9999, "borderBottomRightRadius" to 9999, "borderBottomLeftRadius" to 9999)), "rounded-lg" to _pS(_uM("borderTopLeftRadius" to "14rpx", "borderTopRightRadius" to "14rpx", "borderBottomRightRadius" to "14rpx", "borderBottomLeftRadius" to "14rpx")), "rounded-md" to _pS(_uM("borderTopLeftRadius" to "10.5rpx", "borderTopRightRadius" to "10.5rpx", "borderBottomRightRadius" to "10.5rpx", "borderBottomLeftRadius" to "10.5rpx")), "rounded-xl" to _pS(_uM("borderTopLeftRadius" to "21rpx", "borderTopRightRadius" to "21rpx", "borderBottomRightRadius" to "21rpx", "borderBottomLeftRadius" to "21rpx")), "-important-rounded-bl-none" to _pS(_uM("!borderBottomLeftRadius" to 0)), "border" to _pS(_uM("borderTopWidth" to 1, "borderRightWidth" to 1, "borderBottomWidth" to 1, "borderLeftWidth" to 1)), "border-solid" to _pS(_uM("borderTopStyle" to "solid", "borderRightStyle" to "solid", "borderBottomStyle" to "solid", "borderLeftStyle" to "solid")), "-important-border-green-500" to _pS(_uM("!borderTopColor" to "rgba(34,197,94,1)", "!borderRightColor" to "rgba(34,197,94,1)", "!borderBottomColor" to "rgba(34,197,94,1)", "!borderLeftColor" to "rgba(34,197,94,1)")), "-important-border-primary-500" to _pS(_uM("!borderTopColor" to "rgba(20,184,166,1)", "!borderRightColor" to "rgba(20,184,166,1)", "!borderBottomColor" to "rgba(20,184,166,1)", "!borderLeftColor" to "rgba(20,184,166,1)")), "-important-border-red-500" to _pS(_uM("!borderTopColor" to "rgba(239,68,68,1)", "!borderRightColor" to "rgba(239,68,68,1)", "!borderBottomColor" to "rgba(239,68,68,1)", "!borderLeftColor" to "rgba(239,68,68,1)")), "-important-border-sky-700" to _pS(_uM("!borderTopColor" to "rgba(3,105,161,1)", "!borderRightColor" to "rgba(3,105,161,1)", "!borderBottomColor" to "rgba(3,105,161,1)", "!borderLeftColor" to "rgba(3,105,161,1)")), "-important-border-surface-300" to _pS(_uM("!borderTopColor" to "rgba(212,212,216,1)", "!borderRightColor" to "rgba(212,212,216,1)", "!borderBottomColor" to "rgba(212,212,216,1)", "!borderLeftColor" to "rgba(212,212,216,1)")), "-important-border-surface-500" to _pS(_uM("!borderTopColor" to "rgba(113,113,122,1)", "!borderRightColor" to "rgba(113,113,122,1)", "!borderBottomColor" to "rgba(113,113,122,1)", "!borderLeftColor" to "rgba(113,113,122,1)")), "-important-border-surface-600" to _pS(_uM("!borderTopColor" to "rgba(82,82,91,1)", "!borderRightColor" to "rgba(82,82,91,1)", "!borderBottomColor" to "rgba(82,82,91,1)", "!borderLeftColor" to "rgba(82,82,91,1)")), "-important-border-surface-700" to _pS(_uM("!borderTopColor" to "rgba(63,63,70,1)", "!borderRightColor" to "rgba(63,63,70,1)", "!borderBottomColor" to "rgba(63,63,70,1)", "!borderLeftColor" to "rgba(63,63,70,1)")), "-important-border-white" to _pS(_uM("!borderTopColor" to "rgba(255,255,255,1)", "!borderRightColor" to "rgba(255,255,255,1)", "!borderBottomColor" to "rgba(255,255,255,1)", "!borderLeftColor" to "rgba(255,255,255,1)")), "-important-border-yellow-500" to _pS(_uM("!borderTopColor" to "rgba(234,179,8,1)", "!borderRightColor" to "rgba(234,179,8,1)", "!borderBottomColor" to "rgba(234,179,8,1)", "!borderLeftColor" to "rgba(234,179,8,1)")), "border-primary-500" to _pS(_uM("borderTopColor" to "rgba(20,184,166,1)", "borderRightColor" to "rgba(20,184,166,1)", "borderBottomColor" to "rgba(20,184,166,1)", "borderLeftColor" to "rgba(20,184,166,1)")), "border-surface-200" to _pS(_uM("borderTopColor" to "rgba(228,228,231,1)", "borderRightColor" to "rgba(228,228,231,1)", "borderBottomColor" to "rgba(228,228,231,1)", "borderLeftColor" to "rgba(228,228,231,1)")), "border-surface-500" to _pS(_uM("borderTopColor" to "rgba(113,113,122,1)", "borderRightColor" to "rgba(113,113,122,1)", "borderBottomColor" to "rgba(113,113,122,1)", "borderLeftColor" to "rgba(113,113,122,1)")), "border-surface-600" to _pS(_uM("borderTopColor" to "rgba(82,82,91,1)", "borderRightColor" to "rgba(82,82,91,1)", "borderBottomColor" to "rgba(82,82,91,1)", "borderLeftColor" to "rgba(82,82,91,1)")), "border-surface-700" to _pS(_uM("borderTopColor" to "rgba(63,63,70,1)", "borderRightColor" to "rgba(63,63,70,1)", "borderBottomColor" to "rgba(63,63,70,1)", "borderLeftColor" to "rgba(63,63,70,1)")), "border-transparent" to _pS(_uM("borderTopColor" to "rgba(0,0,0,0)", "borderRightColor" to "rgba(0,0,0,0)", "borderBottomColor" to "rgba(0,0,0,0)", "borderLeftColor" to "rgba(0,0,0,0)")), "border-white" to _pS(_uM("borderTopColor" to "rgba(255,255,255,1)", "borderRightColor" to "rgba(255,255,255,1)", "borderBottomColor" to "rgba(255,255,255,1)", "borderLeftColor" to "rgba(255,255,255,1)")), "-important-border-r-transparent" to _pS(_uM("!borderRightColor" to "rgba(0,0,0,0)")), "border-b-transparent" to _pS(_uM("borderBottomColor" to "rgba(0,0,0,0)")), "border-l-transparent" to _pS(_uM("borderLeftColor" to "rgba(0,0,0,0)")), "-important-bg-primary-500" to _pS(_uM("!backgroundColor" to "rgba(20,184,166,1)")), "-important-bg-primary-600" to _pS(_uM("!backgroundColor" to "rgba(13,148,136,1)")), "-important-bg-purple-100" to _pS(_uM("!backgroundColor" to "rgba(243,232,255,1)")), "-important-bg-purple-500" to _pS(_uM("!backgroundColor" to "rgba(168,85,247,1)")), "-important-bg-red-100" to _pS(_uM("!backgroundColor" to "rgba(254,226,226,1)")), "-important-bg-red-200" to _pS(_uM("!backgroundColor" to "rgba(254,202,202,1)")), "-important-bg-red-500" to _pS(_uM("!backgroundColor" to "rgba(239,68,68,1)")), "-important-bg-sky-100" to _pS(_uM("!backgroundColor" to "rgba(224,242,254,1)")), "-important-bg-sky-200" to _pS(_uM("!backgroundColor" to "rgba(186,230,253,1)")), "-important-bg-sky-700" to _pS(_uM("!backgroundColor" to "rgba(3,105,161,1)")), "-important-bg-surface-100" to _pS(_uM("!backgroundColor" to "rgba(244,244,245,1)")), "-important-bg-surface-200" to _pS(_uM("!backgroundColor" to "rgba(228,228,231,1)")), "-important-bg-surface-400" to _pS(_uM("!backgroundColor" to "rgba(161,161,170,1)")), "-important-bg-surface-50" to _pS(_uM("!backgroundColor" to "rgba(250,250,250,1)")), "-important-bg-surface-700" to _pS(_uM("!backgroundColor" to "rgba(63,63,70,1)")), "-important-bg-surface-800" to _pS(_uM("!backgroundColor" to "rgba(39,39,42,1)")), "-important-bg-surface-900" to _pS(_uM("!backgroundColor" to "rgba(24,24,27,1)")), "-important-bg-transparent" to _pS(_uM("!backgroundColor" to "rgba(0,0,0,0)")), "-important-bg-white" to _pS(_uM("!backgroundColor" to "rgba(255,255,255,1)")), "bg-black" to _pS(_uM("backgroundColor" to "rgba(0,0,0,1)")), "bg-gray-200" to _pS(_uM("backgroundColor" to "rgba(229,231,235,1)")), "bg-green-500" to _pS(_uM("backgroundColor" to "rgba(34,197,94,1)")), "bg-primary-50" to _pS(_uM("backgroundColor" to "rgba(240,253,250,1)")), "bg-primary-500" to _pS(_uM("backgroundColor" to "rgba(20,184,166,1)")), "bg-purple-500" to _pS(_uM("backgroundColor" to "rgba(168,85,247,1)")), "bg-red-500" to _pS(_uM("backgroundColor" to "rgba(239,68,68,1)")), "bg-surface-100" to _pS(_uM("backgroundColor" to "rgba(244,244,245,1)")), "bg-surface-200" to _pS(_uM("backgroundColor" to "rgba(228,228,231,1)")), "bg-surface-300" to _pS(_uM("backgroundColor" to "rgba(212,212,216,1)")), "bg-surface-400" to _pS(_uM("backgroundColor" to "rgba(161,161,170,1)")), "bg-surface-50" to _pS(_uM("backgroundColor" to "rgba(250,250,250,1)")), "bg-surface-500" to _pS(_uM("backgroundColor" to "rgba(113,113,122,1)")), "bg-surface-600" to _pS(_uM("backgroundColor" to "rgba(82,82,91,1)")), "bg-surface-700" to _pS(_uM("backgroundColor" to "rgba(63,63,70,1)")), "bg-surface-800" to _pS(_uM("backgroundColor" to "rgba(39,39,42,1)")), "bg-transparent" to _pS(_uM("backgroundColor" to "rgba(0,0,0,0)")), "bg-white" to _pS(_uM("backgroundColor" to "rgba(255,255,255,1)")), "bg-yellow-500" to _pS(_uM("backgroundColor" to "rgba(234,179,8,1)")), "-important-p-0" to _pS(_uM("!paddingTop" to 0, "!paddingRight" to 0, "!paddingBottom" to 0, "!paddingLeft" to 0)), "-important-p-2" to _pS(_uM("!paddingTop" to "14rpx", "!paddingRight" to "14rpx", "!paddingBottom" to "14rpx", "!paddingLeft" to "14rpx")))
            }
        val styles2: Map<String, Map<String, Map<String, Any>>>
            get() {
                return _uM("-important-p-3" to _pS(_uM("!paddingTop" to "21rpx", "!paddingRight" to "21rpx", "!paddingBottom" to "21rpx", "!paddingLeft" to "21rpx")), "p-0" to _pS(_uM("paddingTop" to 0, "paddingRight" to 0, "paddingBottom" to 0, "paddingLeft" to 0)), "p-1" to _pS(_uM("paddingTop" to "7rpx", "paddingRight" to "7rpx", "paddingBottom" to "7rpx", "paddingLeft" to "7rpx")), "p-10" to _pS(_uM("paddingTop" to "70rpx", "paddingRight" to "70rpx", "paddingBottom" to "70rpx", "paddingLeft" to "70rpx")), "p-2" to _pS(_uM("paddingTop" to "14rpx", "paddingRight" to "14rpx", "paddingBottom" to "14rpx", "paddingLeft" to "14rpx")), "p-3" to _pS(_uM("paddingTop" to "21rpx", "paddingRight" to "21rpx", "paddingBottom" to "21rpx", "paddingLeft" to "21rpx")), "p-4" to _pS(_uM("paddingTop" to "28rpx", "paddingRight" to "28rpx", "paddingBottom" to "28rpx", "paddingLeft" to "28rpx")), "p--bracket-start-12rpx-bracket-end-" to _pS(_uM("paddingTop" to "12rpx", "paddingRight" to "12rpx", "paddingBottom" to "12rpx", "paddingLeft" to "12rpx")), "p--bracket-start-24rpx-bracket-end-" to _pS(_uM("paddingTop" to "24rpx", "paddingRight" to "24rpx", "paddingBottom" to "24rpx", "paddingLeft" to "24rpx")), "p--bracket-start-2px-bracket-end-" to _pS(_uM("paddingTop" to 2, "paddingRight" to 2, "paddingBottom" to 2, "paddingLeft" to 2)), "-important-px-0" to _pS(_uM("!paddingLeft" to 0, "!paddingRight" to 0)), "-important-px-4" to _pS(_uM("!paddingLeft" to "28rpx", "!paddingRight" to "28rpx")), "-important-px--bracket-start-12rpx-bracket-end-" to _pS(_uM("!paddingLeft" to "12rpx", "!paddingRight" to "12rpx")), "px-10" to _pS(_uM("paddingLeft" to "70rpx", "paddingRight" to "70rpx")), "px-2" to _pS(_uM("paddingLeft" to "14rpx", "paddingRight" to "14rpx")), "px-3" to _pS(_uM("paddingLeft" to "21rpx", "paddingRight" to "21rpx")), "px--bracket-start-10rpx-bracket-end-" to _pS(_uM("paddingLeft" to "10rpx", "paddingRight" to "10rpx")), "px--bracket-start-12rpx-bracket-end-" to _pS(_uM("paddingLeft" to "12rpx", "paddingRight" to "12rpx")), "px--bracket-start-20rpx-bracket-end-" to _pS(_uM("paddingLeft" to "20rpx", "paddingRight" to "20rpx")), "px--bracket-start-32rpx-bracket-end-" to _pS(_uM("paddingLeft" to "32rpx", "paddingRight" to "32rpx")), "py-1" to _pS(_uM("paddingTop" to "7rpx", "paddingBottom" to "7rpx")), "py-10" to _pS(_uM("paddingTop" to "70rpx", "paddingBottom" to "70rpx")), "py-2" to _pS(_uM("paddingTop" to "14rpx", "paddingBottom" to "14rpx")), "py-20" to _pS(_uM("paddingTop" to "140rpx", "paddingBottom" to "140rpx")), "py-3" to _pS(_uM("paddingTop" to "21rpx", "paddingBottom" to "21rpx")), "py-5" to _pS(_uM("paddingTop" to "35rpx", "paddingBottom" to "35rpx")), "py--bracket-start-24rpx-bracket-end-" to _pS(_uM("paddingTop" to "24rpx", "paddingBottom" to "24rpx")), "-important-pl-0" to _pS(_uM("!paddingLeft" to 0)), "-important-pl-1" to _pS(_uM("!paddingLeft" to "7rpx")), "-important-pr-1" to _pS(_uM("!paddingRight" to "7rpx")), "pb-0" to _pS(_uM("paddingBottom" to 0)), "pb-3" to _pS(_uM("paddingBottom" to "21rpx")), "pb-4" to _pS(_uM("paddingBottom" to "28rpx")), "pb-5" to _pS(_uM("paddingBottom" to "35rpx")), "pb-6" to _pS(_uM("paddingBottom" to "42rpx")), "pr--bracket-start-12rpx-bracket-end-" to _pS(_uM("paddingRight" to "12rpx")), "pt-0" to _pS(_uM("paddingTop" to 0)), "pt-2" to _pS(_uM("paddingTop" to "14rpx")), "pt-3" to _pS(_uM("paddingTop" to "21rpx")), "pt-6" to _pS(_uM("paddingTop" to "42rpx")), "text-center" to _pS(_uM("textAlign" to "center")), "text-right" to _pS(_uM("textAlign" to "right")), "-important-text-2xl" to _pS(_uM("!fontSize" to "42rpx", "!lineHeight" to "56rpx")), "-important-text-3xl" to _pS(_uM("!fontSize" to "52.5rpx", "!lineHeight" to "63rpx")), "-important-text-lg" to _pS(_uM("!fontSize" to "31.5rpx", "!lineHeight" to "49rpx")), "-important-text-md" to _pS(_uM("!fontSize" to "28rpx", "!lineHeight" to "42rpx")), "-important-text-sm" to _pS(_uM("!fontSize" to "24.5rpx", "!lineHeight" to "35rpx")), "-important-text-xl" to _pS(_uM("!fontSize" to "35rpx", "!lineHeight" to "49rpx")), "-important-text-xs" to _pS(_uM("!fontSize" to "21rpx", "!lineHeight" to "28rpx")), "text-lg" to _pS(_uM("fontSize" to "31.5rpx", "lineHeight" to "49rpx")), "text-md" to _pS(_uM("fontSize" to "28rpx", "lineHeight" to "42rpx")), "text-sm" to _pS(_uM("fontSize" to "24.5rpx", "lineHeight" to "35rpx")), "text-xs" to _pS(_uM("fontSize" to "21rpx", "lineHeight" to "28rpx")), "-important-font-bold" to _pS(_uM("!fontWeight" to "700")), "font-bold" to _pS(_uM("fontWeight" to "700")), "-important-text-green-500" to _pS(_uM("!color" to "rgba(34,197,94,1)")), "-important-text-primary-500" to _pS(_uM("!color" to "rgba(20,184,166,1)")), "-important-text-red-500" to _pS(_uM("!color" to "rgba(239,68,68,1)")), "-important-text-sky-700" to _pS(_uM("!color" to "rgba(3,105,161,1)")), "-important-text-surface-100" to _pS(_uM("!color" to "rgba(244,244,245,1)")), "-important-text-surface-300" to _pS(_uM("!color" to "rgba(212,212,216,1)")), "-important-text-surface-400" to _pS(_uM("!color" to "rgba(161,161,170,1)")), "-important-text-surface-50" to _pS(_uM("!color" to "rgba(250,250,250,1)")), "-important-text-surface-500" to _pS(_uM("!color" to "rgba(113,113,122,1)")), "-important-text-surface-700" to _pS(_uM("!color" to "rgba(63,63,70,1)")), "-important-text-surface-900" to _pS(_uM("!color" to "rgba(24,24,27,1)")), "-important-text-white" to _pS(_uM("!color" to "rgba(255,255,255,1)")), "-important-text-yellow-500" to _pS(_uM("!color" to "rgba(234,179,8,1)")), "text-surface-400" to _pS(_uM("color" to "rgba(161,161,170,1)")), "text-surface-50" to _pS(_uM("color" to "rgba(250,250,250,1)")), "text-surface-500" to _pS(_uM("color" to "rgba(113,113,122,1)")), "text-surface-700" to _pS(_uM("color" to "rgba(63,63,70,1)")), "text-white" to _pS(_uM("color" to "rgba(255,255,255,1)")), "opacity-0" to _pS(_uM("opacity" to 0)), "opacity-50" to _pS(_uM("opacity" to 0.5)), "opacity-60" to _pS(_uM("opacity" to 0.6)), "opacity-80" to _pS(_uM("opacity" to 0.8)), "duration-200" to _pS(_uM("transitionDuration" to "200ms")), "safe-area-top" to _pS(_uM("marginTop" to "env(safe-area-inset-top)")), "uni-tabbar__icon" to _uM(".uni-tabbar " to _uM("marginTop" to 0)), "uni-toast" to _pS(_uM("borderTopLeftRadius" to "32rpx", "borderTopRightRadius" to "32rpx", "borderBottomRightRadius" to "32rpx", "borderBottomLeftRadius" to "32rpx", "!backgroundColor" to "rgba(0,0,0,0.8)")), "dark-colon--important-border-surface-700" to _pS(_uM("!borderTopColor" to "rgba(63,63,70,1)", "!borderRightColor" to "rgba(63,63,70,1)", "!borderBottomColor" to "rgba(63,63,70,1)", "!borderLeftColor" to "rgba(63,63,70,1)")), "dark-colon--important-bg-gray-800" to _pS(_uM("!backgroundColor" to "rgba(31,41,55,1)")), "dark-colon--important-bg-surface-700" to _pS(_uM("!backgroundColor" to "rgba(63,63,70,1)")), "dark-colon--important-bg-surface-800" to _pS(_uM("!backgroundColor" to "rgba(39,39,42,1)")), "dark-colon-bg-surface-700" to _pS(_uM("backgroundColor" to "rgba(63,63,70,1)")), "dark-colon-bg-surface-800" to _pS(_uM("backgroundColor" to "rgba(39,39,42,1)")), "dark-colon--important-text-surface-50" to _pS(_uM("!color" to "rgba(250,250,250,1)")), "dark-colon--important-text-white" to _pS(_uM("!color" to "rgba(255,255,255,1)")), "@FONT-FACE" to _uM("0" to _uM("container" to _uM("" to _uM("maxWidth" to 640))), "1" to _uM("container" to _uM("" to _uM("maxWidth" to 768))), "2" to _uM("container" to _uM("" to _uM("maxWidth" to 1024))), "3" to _uM("container" to _uM("" to _uM("maxWidth" to 1280))), "4" to _uM("container" to _uM("" to _uM("maxWidth" to 1536))), "5" to _uM("fontFamily" to "demo", "src" to "url(\"data:font/ttf;base64,\") format(\"woff\")"), "6" to _uM("fontFamily" to "iconfont", "src" to "url(\"data:font/ttf;base64,\") format(\"woff\")"), "7" to _uM("fontFamily" to "remixicon", "src" to "url(\"data:font/ttf;base64,\") format(\"woff\")")), "@TRANSITION" to _uM("duration-200" to _uM("duration" to "200ms")))
            }
    }
}
val GenAppClass = CreateVueAppComponent(GenApp::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "app", name = "", inheritAttrs = true, inject = Map(), props = Map(), propsNeedCastKeys = _uA(), emits = Map(), components = Map(), styles = GenApp.styles)
}
, fun(instance): GenApp {
    return GenApp(instance)
}
)
val ignoreToken = _uA(
    "/pages/index/home",
    "/pages/index/my",
    "/pages/user/login",
    "/pages/user/doc"
)
val runBlock4 = run {
    router.beforeEach(fun(to, next){
        val user = useStore().user
        if (ignoreToken.includes(to.path) || to.path.startsWith("/pages/demo")) {
            next()
        } else {
            if (!user.isNull()) {
                next()
            } else {
                router.login()
            }
        }
    }
    )
}
open class PassThrough7 (
    open var className: String? = null,
    open var inner: PassThroughProps? = null,
    open var error: ClIconProps? = null,
    open var loading: PassThroughProps? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClImageClImageClass = CreateVueComponent(GenUniModulesCoolUiComponentsClImageClImage::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClImageClImage.name, inheritAttrs = GenUniModulesCoolUiComponentsClImageClImage.inheritAttrs, inject = GenUniModulesCoolUiComponentsClImageClImage.inject, props = GenUniModulesCoolUiComponentsClImageClImage.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClImageClImage.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClImageClImage.emits, components = GenUniModulesCoolUiComponentsClImageClImage.components, styles = GenUniModulesCoolUiComponentsClImageClImage.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClImageClImage.setup(props as GenUniModulesCoolUiComponentsClImageClImage)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClImageClImage {
    return GenUniModulesCoolUiComponentsClImageClImage(instance)
}
)
open class PassThrough8 (
    open var classNames: String? = null,
    open var title: PassThroughProps? = null,
    open var back: ClIconProps? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClTopbarClTopbarClass = CreateVueComponent(GenUniModulesCoolUiComponentsClTopbarClTopbar::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClTopbarClTopbar.name, inheritAttrs = GenUniModulesCoolUiComponentsClTopbarClTopbar.inheritAttrs, inject = GenUniModulesCoolUiComponentsClTopbarClTopbar.inject, props = GenUniModulesCoolUiComponentsClTopbarClTopbar.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClTopbarClTopbar.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClTopbarClTopbar.emits, components = GenUniModulesCoolUiComponentsClTopbarClTopbar.components, styles = GenUniModulesCoolUiComponentsClTopbarClTopbar.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClTopbarClTopbar.setup(props as GenUniModulesCoolUiComponentsClTopbarClTopbar)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClTopbarClTopbar {
    return GenUniModulesCoolUiComponentsClTopbarClTopbar(instance)
}
)
open class PassThrough9 (
    open var className: String? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClRowClRowClass = CreateVueComponent(GenUniModulesCoolUiComponentsClRowClRow::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClRowClRow.name, inheritAttrs = GenUniModulesCoolUiComponentsClRowClRow.inheritAttrs, inject = GenUniModulesCoolUiComponentsClRowClRow.inject, props = GenUniModulesCoolUiComponentsClRowClRow.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClRowClRow.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClRowClRow.emits, components = GenUniModulesCoolUiComponentsClRowClRow.components, styles = GenUniModulesCoolUiComponentsClRowClRow.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenUniModulesCoolUiComponentsClRowClRow.setup(props as GenUniModulesCoolUiComponentsClRowClRow, ctx)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClRowClRow {
    return GenUniModulesCoolUiComponentsClRowClRow(instance)
}
)
typealias ClRowComponentPublicInstance = GenUniModulesCoolUiComponentsClRowClRow
open class PassThrough10 (
    open var className: String? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClColClColClass = CreateVueComponent(GenUniModulesCoolUiComponentsClColClCol::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClColClCol.name, inheritAttrs = GenUniModulesCoolUiComponentsClColClCol.inheritAttrs, inject = GenUniModulesCoolUiComponentsClColClCol.inject, props = GenUniModulesCoolUiComponentsClColClCol.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClColClCol.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClColClCol.emits, components = GenUniModulesCoolUiComponentsClColClCol.components, styles = GenUniModulesCoolUiComponentsClColClCol.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClColClCol.setup(props as GenUniModulesCoolUiComponentsClColClCol)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClColClCol {
    return GenUniModulesCoolUiComponentsClColClCol(instance)
}
)
open class Item (
    @JsonNotNull
    open var label: String,
    @JsonNotNull
    open var value: String,
) : UTSObject()
val GenComponentsLocaleSetClass = CreateVueComponent(GenComponentsLocaleSet::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = "", inheritAttrs = GenComponentsLocaleSet.inheritAttrs, inject = GenComponentsLocaleSet.inject, props = GenComponentsLocaleSet.props, propsNeedCastKeys = GenComponentsLocaleSet.propsNeedCastKeys, emits = GenComponentsLocaleSet.emits, components = GenComponentsLocaleSet.components, styles = GenComponentsLocaleSet.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenComponentsLocaleSet.setup(props as GenComponentsLocaleSet, ctx)
    }
    )
}
, fun(instance, renderer): GenComponentsLocaleSet {
    return GenComponentsLocaleSet(instance)
}
)
open class PassThrough11 (
    open var className: String? = null,
    open var icon: ClIconProps? = null,
    open var placeholder: PassThroughProps? = null,
    open var text: PassThroughProps? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClSelectTriggerClSelectTriggerClass = CreateVueComponent(GenUniModulesCoolUiComponentsClSelectTriggerClSelectTrigger::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClSelectTriggerClSelectTrigger.name, inheritAttrs = GenUniModulesCoolUiComponentsClSelectTriggerClSelectTrigger.inheritAttrs, inject = GenUniModulesCoolUiComponentsClSelectTriggerClSelectTrigger.inject, props = GenUniModulesCoolUiComponentsClSelectTriggerClSelectTrigger.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClSelectTriggerClSelectTrigger.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClSelectTriggerClSelectTrigger.emits, components = GenUniModulesCoolUiComponentsClSelectTriggerClSelectTrigger.components, styles = GenUniModulesCoolUiComponentsClSelectTriggerClSelectTrigger.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClSelectTriggerClSelectTrigger.setup(props as GenUniModulesCoolUiComponentsClSelectTriggerClSelectTrigger)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClSelectTriggerClSelectTrigger {
    return GenUniModulesCoolUiComponentsClSelectTriggerClSelectTrigger(instance)
}
)
val GenUniModulesCoolUiComponentsClPickerViewClPickerViewClass = CreateVueComponent(GenUniModulesCoolUiComponentsClPickerViewClPickerView::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClPickerViewClPickerView.name, inheritAttrs = GenUniModulesCoolUiComponentsClPickerViewClPickerView.inheritAttrs, inject = GenUniModulesCoolUiComponentsClPickerViewClPickerView.inject, props = GenUniModulesCoolUiComponentsClPickerViewClPickerView.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClPickerViewClPickerView.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClPickerViewClPickerView.emits, components = GenUniModulesCoolUiComponentsClPickerViewClPickerView.components, styles = GenUniModulesCoolUiComponentsClPickerViewClPickerView.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClPickerViewClPickerView.setup(props as GenUniModulesCoolUiComponentsClPickerViewClPickerView)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClPickerViewClPickerView {
    return GenUniModulesCoolUiComponentsClPickerViewClPickerView(instance)
}
)
open class ClSelectTriggerPassThrough (
    open var className: String? = null,
    open var icon: ClIconProps? = null,
    open var placeholder: PassThroughProps? = null,
    open var text: PassThroughProps? = null,
) : UTSObject()
open class ClPopupHeaderPassThrough (
    open var className: String? = null,
    open var text: PassThroughProps? = null,
) : UTSObject()
open class ClPopupPassThrough (
    open var className: String? = null,
    open var inner: PassThroughProps? = null,
    open var header: ClPopupHeaderPassThrough? = null,
    open var container: PassThroughProps? = null,
    open var mask: PassThroughProps? = null,
    open var draw: PassThroughProps? = null,
) : UTSObject()
open class ClPopupProps (
    open var className: String? = null,
    open var pt: ClPopupPassThrough? = null,
    open var modelValue: Boolean? = null,
    open var title: String? = null,
    open var direction: ClPopupDirection? = null,
    open var size: Any? = null,
    open var showHeader: Boolean? = null,
    open var showClose: Boolean? = null,
    open var showMask: Boolean? = null,
    open var maskClosable: Boolean? = null,
    open var swipeClose: Boolean? = null,
    open var swipeCloseThreshold: Number? = null,
    open var pointerEvents: String? = null,
    open var keepAlive: Boolean? = null,
) : UTSObject()
typealias Value = Any?
open class PassThrough12 (
    open var trigger: ClSelectTriggerPassThrough? = null,
    open var popup: ClPopupPassThrough? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClSelectClSelectClass = CreateVueComponent(GenUniModulesCoolUiComponentsClSelectClSelect::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClSelectClSelect.name, inheritAttrs = GenUniModulesCoolUiComponentsClSelectClSelect.inheritAttrs, inject = GenUniModulesCoolUiComponentsClSelectClSelect.inject, props = GenUniModulesCoolUiComponentsClSelectClSelect.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClSelectClSelect.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClSelectClSelect.emits, components = GenUniModulesCoolUiComponentsClSelectClSelect.components, styles = GenUniModulesCoolUiComponentsClSelectClSelect.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenUniModulesCoolUiComponentsClSelectClSelect.setup(props as GenUniModulesCoolUiComponentsClSelectClSelect, ctx)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClSelectClSelect {
    return GenUniModulesCoolUiComponentsClSelectClSelect(instance)
}
)
typealias ClSelectComponentPublicInstance = GenUniModulesCoolUiComponentsClSelectClSelect
val GenComponentsSizeSetClass = CreateVueComponent(GenComponentsSizeSet::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenComponentsSizeSet.name, inheritAttrs = GenComponentsSizeSet.inheritAttrs, inject = GenComponentsSizeSet.inject, props = GenComponentsSizeSet.props, propsNeedCastKeys = GenComponentsSizeSet.propsNeedCastKeys, emits = GenComponentsSizeSet.emits, components = GenComponentsSizeSet.components, styles = GenComponentsSizeSet.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenComponentsSizeSet.setup(props as GenComponentsSizeSet, ctx)
    }
    )
}
, fun(instance, renderer): GenComponentsSizeSet {
    return GenComponentsSizeSet(instance)
}
)
open class PassThrough13 (
    open var className: String? = null,
    open var content: PassThroughProps? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClFooterClFooterClass = CreateVueComponent(GenUniModulesCoolUiComponentsClFooterClFooter::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClFooterClFooter.name, inheritAttrs = GenUniModulesCoolUiComponentsClFooterClFooter.inheritAttrs, inject = GenUniModulesCoolUiComponentsClFooterClFooter.inject, props = GenUniModulesCoolUiComponentsClFooterClFooter.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClFooterClFooter.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClFooterClFooter.emits, components = GenUniModulesCoolUiComponentsClFooterClFooter.components, styles = GenUniModulesCoolUiComponentsClFooterClFooter.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClFooterClFooter.setup(props as GenUniModulesCoolUiComponentsClFooterClFooter)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClFooterClFooter {
    return GenUniModulesCoolUiComponentsClFooterClFooter(instance)
}
)
open class Item1 (
    @JsonNotNull
    open var icon: String,
    @JsonNotNull
    open var icon2: String,
    @JsonNotNull
    open var pagePath: String,
    open var text: String? = null,
) : UTSObject()
val GenComponentsTabbarClass = CreateVueComponent(GenComponentsTabbar::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = "", inheritAttrs = GenComponentsTabbar.inheritAttrs, inject = GenComponentsTabbar.inject, props = GenComponentsTabbar.props, propsNeedCastKeys = GenComponentsTabbar.propsNeedCastKeys, emits = GenComponentsTabbar.emits, components = GenComponentsTabbar.components, styles = GenComponentsTabbar.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenComponentsTabbar.setup(props as GenComponentsTabbar)
    }
    )
}
, fun(instance, renderer): GenComponentsTabbar {
    return GenComponentsTabbar(instance)
}
)
open class Item2 (
    @JsonNotNull
    open var label: String,
    open var icon: String? = null,
    open var path: String? = null,
    open var disabled: Boolean? = null,
    open var children: UTSArray<Item2>? = null,
) : UTSObject()
val GenPagesIndexHomeClass = CreateVueComponent(GenPagesIndexHome::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesIndexHome.inheritAttrs, inject = GenPagesIndexHome.inject, props = GenPagesIndexHome.props, propsNeedCastKeys = GenPagesIndexHome.propsNeedCastKeys, emits = GenPagesIndexHome.emits, components = GenPagesIndexHome.components, styles = GenPagesIndexHome.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesIndexHome.setup(props as GenPagesIndexHome)
    }
    )
}
, fun(instance, renderer): GenPagesIndexHome {
    return GenPagesIndexHome(instance, renderer)
}
)
open class PassThrough14 (
    open var className: String? = null,
    open var icon: ClIconProps? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClAvatarClAvatarClass = CreateVueComponent(GenUniModulesCoolUiComponentsClAvatarClAvatar::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClAvatarClAvatar.name, inheritAttrs = GenUniModulesCoolUiComponentsClAvatarClAvatar.inheritAttrs, inject = GenUniModulesCoolUiComponentsClAvatarClAvatar.inject, props = GenUniModulesCoolUiComponentsClAvatarClAvatar.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClAvatarClAvatar.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClAvatarClAvatar.emits, components = GenUniModulesCoolUiComponentsClAvatarClAvatar.components, styles = GenUniModulesCoolUiComponentsClAvatarClAvatar.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClAvatarClAvatar.setup(props as GenUniModulesCoolUiComponentsClAvatarClAvatar)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClAvatarClAvatar {
    return GenUniModulesCoolUiComponentsClAvatarClAvatar(instance)
}
)
open class PassThrough15 (
    open var className: String? = null,
    open var color: String? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClRollingNumberClRollingNumberClass = CreateVueComponent(GenUniModulesCoolUiComponentsClRollingNumberClRollingNumber::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = "", inheritAttrs = GenUniModulesCoolUiComponentsClRollingNumberClRollingNumber.inheritAttrs, inject = GenUniModulesCoolUiComponentsClRollingNumberClRollingNumber.inject, props = GenUniModulesCoolUiComponentsClRollingNumberClRollingNumber.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClRollingNumberClRollingNumber.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClRollingNumberClRollingNumber.emits, components = GenUniModulesCoolUiComponentsClRollingNumberClRollingNumber.components, styles = GenUniModulesCoolUiComponentsClRollingNumberClRollingNumber.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenUniModulesCoolUiComponentsClRollingNumberClRollingNumber.setup(props as GenUniModulesCoolUiComponentsClRollingNumberClRollingNumber, ctx)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClRollingNumberClRollingNumber {
    return GenUniModulesCoolUiComponentsClRollingNumberClRollingNumber(instance)
}
)
open class PassThrough16 (
    open var className: String? = null,
    open var track: PassThroughProps? = null,
    open var thumb: PassThroughProps? = null,
    open var label: PassThroughProps? = null,
    open var loading: PassThroughProps? = null,
) : UTSObject()
open class Rect (
    @JsonNotNull
    open var height: String,
    @JsonNotNull
    open var width: String,
    @JsonNotNull
    open var size: String,
    @JsonNotNull
    open var left: String,
    @JsonNotNull
    open var translateX: String,
) : UTSObject()
val GenUniModulesCoolUiComponentsClSwitchClSwitchClass = CreateVueComponent(GenUniModulesCoolUiComponentsClSwitchClSwitch::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClSwitchClSwitch.name, inheritAttrs = GenUniModulesCoolUiComponentsClSwitchClSwitch.inheritAttrs, inject = GenUniModulesCoolUiComponentsClSwitchClSwitch.inject, props = GenUniModulesCoolUiComponentsClSwitchClSwitch.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClSwitchClSwitch.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClSwitchClSwitch.emits, components = GenUniModulesCoolUiComponentsClSwitchClSwitch.components, styles = GenUniModulesCoolUiComponentsClSwitchClSwitch.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClSwitchClSwitch.setup(props as GenUniModulesCoolUiComponentsClSwitchClSwitch)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClSwitchClSwitch {
    return GenUniModulesCoolUiComponentsClSwitchClSwitch(instance)
}
)
open class PassThrough17 (
    open var className: String? = null,
    open var text: PassThroughProps? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClBadgeClBadgeClass = CreateVueComponent(GenUniModulesCoolUiComponentsClBadgeClBadge::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClBadgeClBadge.name, inheritAttrs = GenUniModulesCoolUiComponentsClBadgeClBadge.inheritAttrs, inject = GenUniModulesCoolUiComponentsClBadgeClBadge.inject, props = GenUniModulesCoolUiComponentsClBadgeClBadge.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClBadgeClBadge.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClBadgeClBadge.emits, components = GenUniModulesCoolUiComponentsClBadgeClBadge.components, styles = GenUniModulesCoolUiComponentsClBadgeClBadge.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClBadgeClBadge.setup(props as GenUniModulesCoolUiComponentsClBadgeClBadge)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClBadgeClBadge {
    return GenUniModulesCoolUiComponentsClBadgeClBadge(instance)
}
)
open class PassThrough18 (
    open var className: String? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClCollapseClCollapseClass = CreateVueComponent(GenUniModulesCoolUiComponentsClCollapseClCollapse::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClCollapseClCollapse.name, inheritAttrs = GenUniModulesCoolUiComponentsClCollapseClCollapse.inheritAttrs, inject = GenUniModulesCoolUiComponentsClCollapseClCollapse.inject, props = GenUniModulesCoolUiComponentsClCollapseClCollapse.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClCollapseClCollapse.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClCollapseClCollapse.emits, components = GenUniModulesCoolUiComponentsClCollapseClCollapse.components, styles = GenUniModulesCoolUiComponentsClCollapseClCollapse.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenUniModulesCoolUiComponentsClCollapseClCollapse.setup(props as GenUniModulesCoolUiComponentsClCollapseClCollapse, ctx)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClCollapseClCollapse {
    return GenUniModulesCoolUiComponentsClCollapseClCollapse(instance)
}
)
typealias ClCollapseComponentPublicInstance = GenUniModulesCoolUiComponentsClCollapseClCollapse
open class PassThrough19 (
    open var className: String? = null,
    open var inner: PassThroughProps? = null,
    open var label: PassThroughProps? = null,
    open var content: PassThroughProps? = null,
    open var icon: ClIconProps? = null,
    open var collapse: PassThroughProps? = null,
) : UTSObject()
open class Swipe1 (
    @JsonNotNull
    open var width: Number,
    @JsonNotNull
    open var maxX: Number,
    @JsonNotNull
    open var startX: Number,
    @JsonNotNull
    open var endX: Number,
    @JsonNotNull
    open var offsetX: Number,
    @JsonNotNull
    open var direction: String,
    @JsonNotNull
    open var moveDirection: String,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return Swipe1ReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class Swipe1ReactiveObject : Swipe1, IUTSReactive<Swipe1> {
    override var __v_raw: Swipe1
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: Swipe1, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(width = __v_raw.width, maxX = __v_raw.maxX, startX = __v_raw.startX, endX = __v_raw.endX, offsetX = __v_raw.offsetX, direction = __v_raw.direction, moveDirection = __v_raw.moveDirection) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): Swipe1ReactiveObject {
        return Swipe1ReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var width: Number
        get() {
            return _tRG(__v_raw, "width", __v_raw.width, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("width")) {
                return
            }
            val oldValue = __v_raw.width
            __v_raw.width = value
            _tRS(__v_raw, "width", oldValue, value)
        }
    override var maxX: Number
        get() {
            return _tRG(__v_raw, "maxX", __v_raw.maxX, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("maxX")) {
                return
            }
            val oldValue = __v_raw.maxX
            __v_raw.maxX = value
            _tRS(__v_raw, "maxX", oldValue, value)
        }
    override var startX: Number
        get() {
            return _tRG(__v_raw, "startX", __v_raw.startX, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("startX")) {
                return
            }
            val oldValue = __v_raw.startX
            __v_raw.startX = value
            _tRS(__v_raw, "startX", oldValue, value)
        }
    override var endX: Number
        get() {
            return _tRG(__v_raw, "endX", __v_raw.endX, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("endX")) {
                return
            }
            val oldValue = __v_raw.endX
            __v_raw.endX = value
            _tRS(__v_raw, "endX", oldValue, value)
        }
    override var offsetX: Number
        get() {
            return _tRG(__v_raw, "offsetX", __v_raw.offsetX, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("offsetX")) {
                return
            }
            val oldValue = __v_raw.offsetX
            __v_raw.offsetX = value
            _tRS(__v_raw, "offsetX", oldValue, value)
        }
    override var direction: String
        get() {
            return _tRG(__v_raw, "direction", __v_raw.direction, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("direction")) {
                return
            }
            val oldValue = __v_raw.direction
            __v_raw.direction = value
            _tRS(__v_raw, "direction", oldValue, value)
        }
    override var moveDirection: String
        get() {
            return _tRG(__v_raw, "moveDirection", __v_raw.moveDirection, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("moveDirection")) {
                return
            }
            val oldValue = __v_raw.moveDirection
            __v_raw.moveDirection = value
            _tRS(__v_raw, "moveDirection", oldValue, value)
        }
}
val GenUniModulesCoolUiComponentsClListItemClListItemClass = CreateVueComponent(GenUniModulesCoolUiComponentsClListItemClListItem::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClListItemClListItem.name, inheritAttrs = GenUniModulesCoolUiComponentsClListItemClListItem.inheritAttrs, inject = GenUniModulesCoolUiComponentsClListItemClListItem.inject, props = GenUniModulesCoolUiComponentsClListItemClListItem.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClListItemClListItem.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClListItemClListItem.emits, components = GenUniModulesCoolUiComponentsClListItemClListItem.components, styles = GenUniModulesCoolUiComponentsClListItemClListItem.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenUniModulesCoolUiComponentsClListItemClListItem.setup(props as GenUniModulesCoolUiComponentsClListItemClListItem, ctx)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClListItemClListItem {
    return GenUniModulesCoolUiComponentsClListItemClListItem(instance)
}
)
typealias ClListItemComponentPublicInstance = GenUniModulesCoolUiComponentsClListItemClListItem
open class ClListItemPassThrough (
    open var className: String? = null,
    open var inner: PassThroughProps? = null,
    open var label: PassThroughProps? = null,
    open var content: PassThroughProps? = null,
    open var icon: ClIconProps? = null,
    open var collapse: PassThroughProps? = null,
) : UTSObject()
open class PassThrough20 (
    open var className: String? = null,
    open var list: PassThroughProps? = null,
    open var item: ClListItemPassThrough? = null,
) : UTSObject()
open class GenUniModulesCoolUiComponentsClListClListSlotDataItem (
    @JsonNotNull
    open var item: ClListItem,
) : SlotData()
val GenUniModulesCoolUiComponentsClListClListClass = CreateVueComponent(GenUniModulesCoolUiComponentsClListClList::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClListClList.name, inheritAttrs = GenUniModulesCoolUiComponentsClListClList.inheritAttrs, inject = GenUniModulesCoolUiComponentsClListClList.inject, props = GenUniModulesCoolUiComponentsClListClList.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClListClList.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClListClList.emits, components = GenUniModulesCoolUiComponentsClListClList.components, styles = GenUniModulesCoolUiComponentsClListClList.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClListClList.setup(props as GenUniModulesCoolUiComponentsClListClList)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClListClList {
    return GenUniModulesCoolUiComponentsClListClList(instance)
}
)
val GenPagesIndexMyClass = CreateVueComponent(GenPagesIndexMy::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesIndexMy.inheritAttrs, inject = GenPagesIndexMy.inject, props = GenPagesIndexMy.props, propsNeedCastKeys = GenPagesIndexMy.propsNeedCastKeys, emits = GenPagesIndexMy.emits, components = GenPagesIndexMy.components, styles = GenPagesIndexMy.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesIndexMy.setup(props as GenPagesIndexMy)
    }
    )
}
, fun(instance, renderer): GenPagesIndexMy {
    return GenPagesIndexMy(instance, renderer)
}
)
val GenPagesSetIndexClass = CreateVueComponent(GenPagesSetIndex::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesSetIndex.inheritAttrs, inject = GenPagesSetIndex.inject, props = GenPagesSetIndex.props, propsNeedCastKeys = GenPagesSetIndex.propsNeedCastKeys, emits = GenPagesSetIndex.emits, components = GenPagesSetIndex.components, styles = GenPagesSetIndex.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesSetIndex.setup(props as GenPagesSetIndex)
    }
    )
}
, fun(instance, renderer): GenPagesSetIndex {
    return GenPagesSetIndex(instance, renderer)
}
)
val GenPagesSetGeneralClass = CreateVueComponent(GenPagesSetGeneral::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesSetGeneral.inheritAttrs, inject = GenPagesSetGeneral.inject, props = GenPagesSetGeneral.props, propsNeedCastKeys = GenPagesSetGeneral.propsNeedCastKeys, emits = GenPagesSetGeneral.emits, components = GenPagesSetGeneral.components, styles = GenPagesSetGeneral.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesSetGeneral.setup(props as GenPagesSetGeneral)
    }
    )
}
, fun(instance, renderer): GenPagesSetGeneral {
    return GenPagesSetGeneral(instance, renderer)
}
)
val GenPagesSetNoticeClass = CreateVueComponent(GenPagesSetNotice::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesSetNotice.inheritAttrs, inject = GenPagesSetNotice.inject, props = GenPagesSetNotice.props, propsNeedCastKeys = GenPagesSetNotice.propsNeedCastKeys, emits = GenPagesSetNotice.emits, components = GenPagesSetNotice.components, styles = GenPagesSetNotice.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesSetNotice.setup(props as GenPagesSetNotice)
    }
    )
}
, fun(instance, renderer): GenPagesSetNotice {
    return GenPagesSetNotice(instance, renderer)
}
)
val GenPagesSetAboutClass = CreateVueComponent(GenPagesSetAbout::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesSetAbout.inheritAttrs, inject = GenPagesSetAbout.inject, props = GenPagesSetAbout.props, propsNeedCastKeys = GenPagesSetAbout.propsNeedCastKeys, emits = GenPagesSetAbout.emits, components = GenPagesSetAbout.components, styles = GenPagesSetAbout.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesSetAbout.setup(props as GenPagesSetAbout)
    }
    )
}
, fun(instance, renderer): GenPagesSetAbout {
    return GenPagesSetAbout(instance, renderer)
}
)
val GenPagesSetCsClass = CreateVueComponent(GenPagesSetCs::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesSetCs.inheritAttrs, inject = GenPagesSetCs.inject, props = GenPagesSetCs.props, propsNeedCastKeys = GenPagesSetCs.propsNeedCastKeys, emits = GenPagesSetCs.emits, components = GenPagesSetCs.components, styles = GenPagesSetCs.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesSetCs.setup(props as GenPagesSetCs)
    }
    )
}
, fun(instance, renderer): GenPagesSetCs {
    return GenPagesSetCs(instance, renderer)
}
)
open class ClTextPassThrough (
    open var className: String? = null,
) : UTSObject()
open class PassThrough21 (
    open var className: String? = null,
    open var text: ClTextPassThrough? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClTagClTagClass = CreateVueComponent(GenUniModulesCoolUiComponentsClTagClTag::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClTagClTag.name, inheritAttrs = GenUniModulesCoolUiComponentsClTagClTag.inheritAttrs, inject = GenUniModulesCoolUiComponentsClTagClTag.inject, props = GenUniModulesCoolUiComponentsClTagClTag.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClTagClTag.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClTagClTag.emits, components = GenUniModulesCoolUiComponentsClTagClTag.components, styles = GenUniModulesCoolUiComponentsClTagClTag.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClTagClTag.setup(props as GenUniModulesCoolUiComponentsClTagClTag)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClTagClTag {
    return GenUniModulesCoolUiComponentsClTagClTag(instance)
}
)
open class PassThrough22 (
    open var trigger: ClSelectTriggerPassThrough? = null,
    open var popup: ClPopupPassThrough? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClSelectDateClSelectDateClass = CreateVueComponent(GenUniModulesCoolUiComponentsClSelectDateClSelectDate::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClSelectDateClSelectDate.name, inheritAttrs = GenUniModulesCoolUiComponentsClSelectDateClSelectDate.inheritAttrs, inject = GenUniModulesCoolUiComponentsClSelectDateClSelectDate.inject, props = GenUniModulesCoolUiComponentsClSelectDateClSelectDate.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClSelectDateClSelectDate.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClSelectDateClSelectDate.emits, components = GenUniModulesCoolUiComponentsClSelectDateClSelectDate.components, styles = GenUniModulesCoolUiComponentsClSelectDateClSelectDate.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenUniModulesCoolUiComponentsClSelectDateClSelectDate.setup(props as GenUniModulesCoolUiComponentsClSelectDateClSelectDate, ctx)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClSelectDateClSelectDate {
    return GenUniModulesCoolUiComponentsClSelectDateClSelectDate(instance)
}
)
typealias ClSelectDateComponentPublicInstance = GenUniModulesCoolUiComponentsClSelectDateClSelectDate
open class PassThrough23 (
    open var className: String? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClEmptyClEmptyClass = CreateVueComponent(GenUniModulesCoolUiComponentsClEmptyClEmpty::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = "", inheritAttrs = GenUniModulesCoolUiComponentsClEmptyClEmpty.inheritAttrs, inject = GenUniModulesCoolUiComponentsClEmptyClEmpty.inject, props = GenUniModulesCoolUiComponentsClEmptyClEmpty.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClEmptyClEmpty.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClEmptyClEmpty.emits, components = GenUniModulesCoolUiComponentsClEmptyClEmpty.components, styles = GenUniModulesCoolUiComponentsClEmptyClEmpty.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClEmptyClEmpty.setup(props as GenUniModulesCoolUiComponentsClEmptyClEmpty)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClEmptyClEmpty {
    return GenUniModulesCoolUiComponentsClEmptyClEmpty(instance)
}
)
open class PassThrough24 (
    open var className: String? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClIndexBarClIndexBarClass = CreateVueComponent(GenUniModulesCoolUiComponentsClIndexBarClIndexBar::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClIndexBarClIndexBar.name, inheritAttrs = GenUniModulesCoolUiComponentsClIndexBarClIndexBar.inheritAttrs, inject = GenUniModulesCoolUiComponentsClIndexBarClIndexBar.inject, props = GenUniModulesCoolUiComponentsClIndexBarClIndexBar.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClIndexBarClIndexBar.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClIndexBarClIndexBar.emits, components = GenUniModulesCoolUiComponentsClIndexBarClIndexBar.components, styles = GenUniModulesCoolUiComponentsClIndexBarClIndexBar.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClIndexBarClIndexBar.setup(props as GenUniModulesCoolUiComponentsClIndexBarClIndexBar)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClIndexBarClIndexBar {
    return GenUniModulesCoolUiComponentsClIndexBarClIndexBar(instance)
}
)
open class PassThrough25 (
    open var className: String? = null,
    open var item: PassThroughProps? = null,
    open var itemHover: PassThroughProps? = null,
    open var list: PassThroughProps? = null,
    open var indexBar: PassThroughProps? = null,
    open var scroller: PassThroughProps? = null,
    open var refresher: PassThroughProps? = null,
) : UTSObject()
open class GenUniModulesCoolUiComponentsClListViewClListViewSlotDataHeader (
    @JsonNotNull
    open var index: String,
) : SlotData()
open class GenUniModulesCoolUiComponentsClListViewClListViewSlotDataItem (
    @JsonNotNull
    open var data: ClListViewItem,
    @JsonNotNull
    open var item: ClListViewVirtualItem,
    open var value: Any? = null,
    @JsonNotNull
    open var index: Number,
) : SlotData()
open class GenUniModulesCoolUiComponentsClListViewClListViewSlotDataIndex (
    @JsonNotNull
    open var index: String,
) : SlotData()
open class GenUniModulesCoolUiComponentsClListViewClListViewSlotDataRefresher (
    @JsonNotNull
    open var status: ClListViewRefresherStatus,
    @JsonNotNull
    open var text: String,
) : SlotData()
val GenUniModulesCoolUiComponentsClListViewClListViewClass = CreateVueComponent(GenUniModulesCoolUiComponentsClListViewClListView::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClListViewClListView.name, inheritAttrs = GenUniModulesCoolUiComponentsClListViewClListView.inheritAttrs, inject = GenUniModulesCoolUiComponentsClListViewClListView.inject, props = GenUniModulesCoolUiComponentsClListViewClListView.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClListViewClListView.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClListViewClListView.emits, components = GenUniModulesCoolUiComponentsClListViewClListView.components, styles = GenUniModulesCoolUiComponentsClListViewClListView.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenUniModulesCoolUiComponentsClListViewClListView.setup(props as GenUniModulesCoolUiComponentsClListViewClListView, ctx)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClListViewClListView {
    return GenUniModulesCoolUiComponentsClListViewClListView(instance)
}
)
typealias ClListViewComponentPublicInstance = GenUniModulesCoolUiComponentsClListViewClListView
open class PassThrough26 (
    open var trigger: ClSelectTriggerPassThrough? = null,
    open var popup: ClPopupPassThrough? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClCascaderClCascaderClass = CreateVueComponent(GenUniModulesCoolUiComponentsClCascaderClCascader::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClCascaderClCascader.name, inheritAttrs = GenUniModulesCoolUiComponentsClCascaderClCascader.inheritAttrs, inject = GenUniModulesCoolUiComponentsClCascaderClCascader.inject, props = GenUniModulesCoolUiComponentsClCascaderClCascader.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClCascaderClCascader.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClCascaderClCascader.emits, components = GenUniModulesCoolUiComponentsClCascaderClCascader.components, styles = GenUniModulesCoolUiComponentsClCascaderClCascader.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenUniModulesCoolUiComponentsClCascaderClCascader.setup(props as GenUniModulesCoolUiComponentsClCascaderClCascader, ctx)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClCascaderClCascader {
    return GenUniModulesCoolUiComponentsClCascaderClCascader(instance)
}
)
val default1 = _uA<UTSJSONObject>(object : UTSJSONObject() {
    var label = "安徽省"
    var index = "A"
    var children = _uA(
        object : UTSJSONObject() {
            var label = "安庆市"
            var index = "A"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "安徽安庆经济开发区"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "大观区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "怀宁县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "潜山市"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "宿松县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "太湖县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "桐城市"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "望江县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "迎江区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "宜秀区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "岳西县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "蚌埠市"
            var index = "B"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "蚌山区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "蚌埠市高新技术开发区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "蚌埠市经济开发区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "固镇县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "淮上区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "怀远县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "龙子湖区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "五河县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "禹会区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "亳州市"
            var index = "B"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "利辛县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "蒙城县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "谯城区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "涡阳县"
                    var index = "W"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "滁州市"
            var index = "C"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "滁州经济技术开发区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "定远县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "凤阳县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "琅琊区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "来安县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "明光市"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "南谯区"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "全椒县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "天长市"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "中新苏滁高新技术产业开发区"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "池州市"
            var index = "C"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "东至县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "贵池区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "青阳县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "石台县"
                    var index = "S"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "阜阳市"
            var index = "F"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "阜南县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "阜阳合肥现代产业园区"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "阜阳经济技术开发区"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "界首市"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "临泉县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "太和县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "颍州区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "颍东区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "颍泉区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "颍上县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "合肥市"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "包河区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "长丰县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "巢湖市"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "肥东县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "肥西县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "合肥高新技术产业开发区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "合肥经济技术开发区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "合肥新站高新技术产业开发区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "庐阳区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "庐江县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "蜀山区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "瑶海区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "淮南市"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "八公山区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "大通区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "凤台县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "潘集区"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "寿县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "田家庵区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "谢家集区"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "淮北市"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "杜集区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "烈山区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "濉溪县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "相山区"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "黄山市"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "黄山区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "徽州区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "祁门县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "屯溪区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "歙县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "休宁县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "黟县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "六安市"
            var index = "L"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "霍邱县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "霍山县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "金安区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "金寨县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "舒城县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "裕安区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "叶集区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "马鞍山市"
            var index = "M"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "博望区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "当涂县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "花山区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "含山县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "和县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "雨山区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "宿州市"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "砀山县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "灵璧县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "泗县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "宿州马鞍山现代产业园区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "宿州经济技术开发区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "萧县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "埇桥区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "铜陵市"
            var index = "T"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "枞阳县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "郊区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "铜官区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "义安区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "芜湖市"
            var index = "W"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "安徽芜湖三山经济开发区"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "繁昌区"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "镜湖区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "鸠江区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "南陵县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "湾沚区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "芜湖经济技术开发区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "无为市"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "弋江区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "宣城市"
            var index = "X"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "广德市"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "泾县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "绩溪县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "旌德县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "郎溪县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "宁国市"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "宣州区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "宣城市经济开发区"
                    var index = "X"
                }
            )
        }
    )
}, object : UTSJSONObject() {
    var label = "北京市"
    var index = "B"
    var children = _uA(
        object : UTSJSONObject() {
            var label = "市辖区"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "昌平区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "东城区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "大兴区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "丰台区"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "房山区"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "海淀区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "怀柔区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "门头沟区"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "密云区"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "平谷区"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "石景山区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "顺义区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "通州区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "西城区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "延庆区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "朝阳区"
                    var index = "Z"
                }
            )
        }
    )
}, object : UTSJSONObject() {
    var label = "福建省"
    var index = "F"
    var children = _uA(
        object : UTSJSONObject() {
            var label = "福州市"
            var index = "F"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "仓山区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "长乐区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "福清市"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "鼓楼区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "晋安区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "连江县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "罗源县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "马尾区"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "闽侯县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "闽清县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "平潭县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "台江区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "永泰县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "龙岩市"
            var index = "L"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "长汀县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "连城县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "上杭县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "武平县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "新罗区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "永定区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "漳平市"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "南平市"
            var index = "N"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "光泽县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "建阳区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "建瓯市"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "浦城县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "顺昌县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "松溪县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "邵武市"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "武夷山市"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "延平区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "政和县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "宁德市"
            var index = "N"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "福安市"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "福鼎市"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "古田县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "蕉城区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "屏南县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "寿宁县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "霞浦县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "周宁县"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "柘荣县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "莆田市"
            var index = "P"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "城厢区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "涵江区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "荔城区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "秀屿区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "仙游县"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "泉州市"
            var index = "Q"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "安溪县"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "德化县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "丰泽区"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "惠安县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "金门县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "晋江市"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "鲤城区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "洛江区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "南安市"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "泉港区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "石狮市"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "永春县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "厦门市"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "海沧区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "湖里区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "集美区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "思明区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "同安区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "翔安区"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "三明市"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "大田县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "将乐县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "建宁县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "明溪县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "宁化县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "清流县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "三元区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "沙县区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "泰宁县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "尤溪县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "永安市"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "漳州市"
            var index = "Z"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "长泰区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "东山县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "华安县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "龙文区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "龙海区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "南靖县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "平和县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "芗城区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "云霄县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "漳浦县"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "诏安县"
                    var index = "Z"
                }
            )
        }
    )
}, object : UTSJSONObject() {
    var label = "广东省"
    var index = "G"
    var children = _uA(
        object : UTSJSONObject() {
            var label = "潮州市"
            var index = "C"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "潮安区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "饶平县"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "湘桥区"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "东莞市"
            var index = "D"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "茶山镇"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "常平镇"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "长安镇"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "东城街道"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "东坑镇"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "大朗镇"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "大岭山镇"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "道滘镇"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "东莞港"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "东莞生态园"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "东莞滨海湾新区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "凤岗镇"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "莞城街道"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "高埗镇"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "横沥镇"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "黄江镇"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "虎门镇"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "厚街镇"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "洪梅镇"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "寮步镇"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "麻涌镇"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "南城街道"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "企石镇"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "桥头镇"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "清溪镇"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "石碣镇"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "石龙镇"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "石排镇"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "沙田镇"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "松山湖"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "塘厦镇"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "万江街道"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "望牛墩镇"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "谢岗镇"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "樟木头镇"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "中堂镇"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "佛山市"
            var index = "F"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "禅城区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "高明区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "南海区"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "顺德区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "三水区"
                    var index = "S"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "广州市"
            var index = "G"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "白云区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "从化区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "番禺区"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "海珠区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "黄埔区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "花都区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "荔湾区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "南沙区"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "天河区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "越秀区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "增城区"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "惠州市"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "博罗县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "惠城区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "惠阳区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "惠东县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "龙门县"
                    var index = "L"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "河源市"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "东源县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "和平县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "龙川县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "连平县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "源城区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "紫金县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "江门市"
            var index = "J"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "恩平市"
                    var index = "E"
                },
                object : UTSJSONObject() {
                    var label = "鹤山市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "江海区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "开平市"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "蓬江区"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "台山市"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "新会区"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "揭阳市"
            var index = "J"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "惠来县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "揭东区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "揭西县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "普宁市"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "榕城区"
                    var index = "R"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "茂名市"
            var index = "M"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "电白区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "高州市"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "化州市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "茂南区"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "信宜市"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "梅州市"
            var index = "M"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "大埔县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "丰顺县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "蕉岭县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "梅江区"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "梅县区"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "平远县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "五华县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "兴宁市"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "清远市"
            var index = "Q"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "佛冈县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "连山壮族瑶族自治县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "连南瑶族自治县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "连州市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "清城区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "清新区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "阳山县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "英德市"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "韶关市"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "乐昌市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "南雄市"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "曲江区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "仁化县"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "乳源瑶族自治县"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "始兴县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "武江区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "翁源县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "新丰县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "浈江区"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "深圳市"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "宝安区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "福田区"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "光明区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "罗湖区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "龙岗区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "龙华区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "南山区"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "坪山区"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "盐田区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "汕头市"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "潮阳区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "潮南区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "澄海区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "濠江区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "金平区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "龙湖区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "南澳县"
                    var index = "N"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "汕尾市"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "城区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "海丰县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "陆河县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "陆丰市"
                    var index = "L"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "阳江市"
            var index = "Y"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "江城区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "阳东区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "阳西县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "阳春市"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "云浮市"
            var index = "Y"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "罗定市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "新兴县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "云城区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "云安区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "郁南县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "珠海市"
            var index = "Z"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "斗门区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "金湾区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "香洲区"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "湛江市"
            var index = "Z"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "赤坎区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "廉江市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "雷州市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "麻章区"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "坡头区"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "遂溪县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "吴川市"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "霞山区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "徐闻县"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "肇庆市"
            var index = "Z"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "端州区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "鼎湖区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "德庆县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "封开县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "高要区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "广宁县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "怀集县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "四会市"
                    var index = "S"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "中山市"
            var index = "Z"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "板芙镇"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "东区街道"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "东凤镇"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "大涌镇"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "阜沙镇"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "古镇镇"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "港口镇"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "黄圃镇"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "横栏镇"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "民众街道"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "南区街道"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "南朗街道"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "南头镇"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "石岐街道"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "沙溪镇"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "三角镇"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "三乡镇"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "神湾镇"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "坦洲镇"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "五桂山街道"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "西区街道"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "小榄镇"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "中山港街道"
                    var index = "Z"
                }
            )
        }
    )
}, object : UTSJSONObject() {
    var label = "广西壮族自治区"
    var index = "G"
    var children = _uA(
        object : UTSJSONObject() {
            var label = "北海市"
            var index = "B"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "海城区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "合浦县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "铁山港区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "银海区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "百色市"
            var index = "B"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "德保县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "靖西市"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "凌云县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "乐业县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "隆林各族自治县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "那坡县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "平果市"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "田阳区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "田东县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "田林县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "西林县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "右江区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "崇左市"
            var index = "C"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "大新县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "扶绥县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "江州区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "龙州县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "宁明县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "凭祥市"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "天等县"
                    var index = "T"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "防城港市"
            var index = "F"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "东兴市"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "防城区"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "港口区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "上思县"
                    var index = "S"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "桂林市"
            var index = "G"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "叠彩区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "灌阳县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "恭城瑶族自治县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "临桂区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "灵川县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "龙胜各族自治县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "荔浦市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "平乐县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "七星区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "全州县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "秀峰区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "象山区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "兴安县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "雁山区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "阳朔县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "永福县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "资源县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "贵港市"
            var index = "G"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "港北区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "港南区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "桂平市"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "平南县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "覃塘区"
                    var index = "T"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "贺州市"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "八步区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "富川瑶族自治县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "平桂区"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "昭平县"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "钟山县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "河池市"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "巴马瑶族自治县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "东兰县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "都安瑶族自治县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "大化瑶族自治县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "凤山县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "环江毛南族自治县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "金城江区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "罗城仫佬族自治县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "南丹县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "天峨县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "宜州区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "柳州市"
            var index = "L"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "城中区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "柳南区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "柳北区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "柳江区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "柳城县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "鹿寨县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "融安县"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "融水苗族自治县"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "三江侗族自治县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "鱼峰区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "来宾市"
            var index = "L"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "合山市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "金秀瑶族自治县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "武宣县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "兴宾区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "忻城县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "象州县"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "南宁市"
            var index = "N"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "宾阳县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "横州市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "江南区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "良庆区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "隆安县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "马山县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "青秀区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "上林县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "武鸣区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "兴宁区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "西乡塘区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "邕宁区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "钦州市"
            var index = "Q"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "灵山县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "浦北县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "钦南区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "钦北区"
                    var index = "Q"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "梧州市"
            var index = "W"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "长洲区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "苍梧县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "岑溪市"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "龙圩区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "蒙山县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "藤县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "万秀区"
                    var index = "W"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "玉林市"
            var index = "Y"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "博白县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "北流市"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "福绵区"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "陆川县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "容县"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "兴业县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "玉州区"
                    var index = "Y"
                }
            )
        }
    )
}, object : UTSJSONObject() {
    var label = "贵州省"
    var index = "G"
    var children = _uA(
        object : UTSJSONObject() {
            var label = "安顺市"
            var index = "A"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "关岭布依族苗族自治县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "平坝区"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "普定县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "西秀区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "镇宁布依族苗族自治县"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "紫云苗族布依族自治县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "毕节市"
            var index = "B"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "大方县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "赫章县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "金沙县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "纳雍县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "七星关区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "黔西市"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "威宁彝族回族苗族自治县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "织金县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "贵阳市"
            var index = "G"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "白云区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "观山湖区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "花溪区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "开阳县"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "南明区"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "清镇市"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "乌当区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "息烽县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "修文县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "云岩区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "六盘水市"
            var index = "L"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "六枝特区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "盘州市"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "水城区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "钟山区"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "黔西南布依族苗族自治州"
            var index = "Q"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "安龙县"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "册亨县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "普安县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "晴隆县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "望谟县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "兴义市"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "兴仁市"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "贞丰县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "黔东南苗族侗族自治州"
            var index = "Q"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "岑巩县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "从江县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "丹寨县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "黄平县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "锦屏县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "剑河县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "凯里市"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "黎平县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "雷山县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "麻江县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "榕江县"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "施秉县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "三穗县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "天柱县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "台江县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "镇远县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "黔南布依族苗族自治州"
            var index = "Q"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "长顺县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "都匀市"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "独山县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "福泉市"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "贵定县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "惠水县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "荔波县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "罗甸县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "龙里县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "平塘县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "三都水族自治县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "瓮安县"
                    var index = "W"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "铜仁市"
            var index = "T"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "碧江区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "德江县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "江口县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "石阡县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "思南县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "松桃苗族自治县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "万山区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "玉屏侗族自治县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "印江土家族苗族自治县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "沿河土家族自治县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "遵义市"
            var index = "Z"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "播州区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "赤水市"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "道真仡佬族苗族自治县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "凤冈县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "红花岗区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "汇川区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "湄潭县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "仁怀市"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "绥阳县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "桐梓县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "务川仡佬族苗族自治县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "习水县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "余庆县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "正安县"
                    var index = "Z"
                }
            )
        }
    )
}, object : UTSJSONObject() {
    var label = "甘肃省"
    var index = "G"
    var children = _uA(
        object : UTSJSONObject() {
            var label = "白银市"
            var index = "B"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "白银区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "会宁县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "靖远县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "景泰县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "平川区"
                    var index = "P"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "定西市"
            var index = "D"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "安定区"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "陇西县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "临洮县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "岷县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "通渭县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "渭源县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "漳县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "甘南藏族自治州"
            var index = "G"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "迭部县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "合作市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "临潭县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "碌曲县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "玛曲县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "夏河县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "卓尼县"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "舟曲县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "嘉峪关市"
            var index = "J"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "钢城街道"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "文殊镇"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "雄关街道"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "新城镇"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "峪泉镇"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "金昌市"
            var index = "J"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "金川区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "永昌县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "酒泉市"
            var index = "J"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "阿克塞哈萨克族自治县"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "敦煌市"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "瓜州县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "金塔县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "肃州区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "肃北蒙古族自治县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "玉门市"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "兰州市"
            var index = "L"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "安宁区"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "城关区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "皋兰县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "红古区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "兰州新区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "七里河区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "西固区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "永登县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "榆中县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "陇南市"
            var index = "L"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "成县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "宕昌县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "徽县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "康县"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "礼县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "两当县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "武都区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "文县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "西和县"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "临夏回族自治州"
            var index = "L"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "东乡族自治县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "广河县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "和政县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "积石山保安族东乡族撒拉族自治县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "康乐县"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "临夏市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "临夏县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "永靖县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "平凉市"
            var index = "P"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "崇信县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "华亭市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "泾川县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "静宁县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "崆峒区"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "灵台县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "庄浪县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "庆阳市"
            var index = "Q"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "环县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "华池县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "合水县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "宁县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "庆城县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "西峰区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "正宁县"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "镇原县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "天水市"
            var index = "T"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "甘谷县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "麦积区"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "秦州区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "清水县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "秦安县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "武山县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "张家川回族自治县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "武威市"
            var index = "W"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "古浪县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "凉州区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "民勤县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "天祝藏族自治县"
                    var index = "T"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "张掖市"
            var index = "Z"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "甘州区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "高台县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "临泽县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "民乐县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "肃南裕固族自治县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "山丹县"
                    var index = "S"
                }
            )
        }
    )
}, object : UTSJSONObject() {
    var label = "河北省"
    var index = "H"
    var children = _uA(
        object : UTSJSONObject() {
            var label = "保定市"
            var index = "B"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "安新县"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "安国市"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "博野县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "保定高新技术产业开发区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "保定白沟新城"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "定兴县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "定州市"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "阜平县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "高阳县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "高碑店市"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "竞秀区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "莲池区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "涞水县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "涞源县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "蠡县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "满城区"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "清苑区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "曲阳县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "容城县"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "顺平县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "唐县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "望都县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "徐水区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "雄县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "易县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "涿州市"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "承德市"
            var index = "C"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "承德县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "承德高新技术产业开发区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "丰宁满族自治县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "宽城满族自治县"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "滦平县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "隆化县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "平泉市"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "双桥区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "双滦区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "围场满族蒙古族自治县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "兴隆县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "鹰手营子矿区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "沧州市"
            var index = "C"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "泊头市"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "沧县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "沧州高新技术产业开发区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "沧州渤海新区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "东光县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "海兴县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "河北沧州经济开发区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "黄骅市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "河间市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "孟村回族自治县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "南皮县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "青县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "任丘市"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "肃宁县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "吴桥县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "新华区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "献县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "运河区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "盐山县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "邯郸市"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "丛台区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "成安县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "磁县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "大名县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "复兴区"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "峰峰矿区"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "肥乡区"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "广平县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "馆陶县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "邯山区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "邯郸经济技术开发区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "邯郸冀南新区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "鸡泽县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "临漳县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "邱县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "曲周县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "涉县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "魏县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "武安市"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "永年区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "衡水市"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "安平县"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "阜城县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "故城县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "河北衡水高新技术产业开发区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "衡水滨湖新区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "冀州区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "景县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "饶阳县"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "深州市"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "桃城区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "武邑县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "武强县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "枣强县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "廊坊市"
            var index = "L"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "安次区"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "霸州市"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "大城县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "大厂回族自治县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "广阳区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "固安县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "廊坊经济技术开发区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "三河市"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "文安县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "香河县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "永清县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "秦皇岛市"
            var index = "Q"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "北戴河区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "北戴河新区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "昌黎县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "抚宁区"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "海港区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "卢龙县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "青龙满族自治县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "秦皇岛市经济技术开发区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "山海关区"
                    var index = "S"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "石家庄市"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "长安区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "藁城区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "高邑县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "行唐县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "井陉矿区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "井陉县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "晋州市"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "鹿泉区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "栾城区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "灵寿县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "平山县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "桥西区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "深泽县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "石家庄高新技术产业开发区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "石家庄循环化工园区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "无极县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "新华区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "辛集市"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "新乐市"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "裕华区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "元氏县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "正定县"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "赞皇县"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "赵县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "唐山市"
            var index = "T"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "曹妃甸区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "丰南区"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "丰润区"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "古冶区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "河北唐山芦台经济开发区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "河北唐山海港经济开发区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "开平区"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "路南区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "路北区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "滦南县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "乐亭县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "滦州市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "迁西县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "迁安市"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "唐山市汉沽管理区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "唐山高新技术产业开发区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "玉田县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "遵化市"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "邢台市"
            var index = "X"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "柏乡县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "广宗县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "河北邢台经济开发区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "巨鹿县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "临城县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "隆尧县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "临西县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "南和区"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "内丘县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "宁晋县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "南宫市"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "平乡县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "清河县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "任泽区"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "沙河市"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "威县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "襄都区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "信都区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "新河县"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "张家口市"
            var index = "Z"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "崇礼区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "赤城县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "沽源县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "怀安县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "怀来县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "康保县"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "桥东区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "桥西区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "尚义县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "万全区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "蔚县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "宣化区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "下花园区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "阳原县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "张北县"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "涿鹿县"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "张家口经济开发区"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "张家口市察北管理区"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "张家口市塞北管理区"
                    var index = "Z"
                }
            )
        }
    )
}, object : UTSJSONObject() {
    var label = "黑龙江省"
    var index = "H"
    var children = _uA(
        object : UTSJSONObject() {
            var label = "大庆市"
            var index = "D"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "大同区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "杜尔伯特蒙古族自治县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "大庆高新技术产业开发区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "红岗区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "龙凤区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "林甸县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "让胡路区"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "萨尔图区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "肇州县"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "肇源县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "大兴安岭地区"
            var index = "D"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "呼玛县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "呼中区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "加格达奇区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "漠河市"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "松岭区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "塔河县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "新林区"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "哈尔滨市"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "阿城区"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "宾县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "巴彦县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "道里区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "道外区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "方正县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "呼兰区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "木兰县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "南岗区"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "平房区"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "松北区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "双城区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "尚志市"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "通河县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "五常市"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "香坊区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "依兰县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "延寿县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "鹤岗市"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "东山区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "工农区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "萝北县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "南山区"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "绥滨县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "向阳区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "兴安区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "兴山区"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "黑河市"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "爱辉区"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "北安市"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "嫩江市"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "孙吴县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "五大连池市"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "逊克县"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "鸡西市"
            var index = "J"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "城子河区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "滴道区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "恒山区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "虎林市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "鸡冠区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "鸡东县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "梨树区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "麻山区"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "密山市"
                    var index = "M"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "佳木斯市"
            var index = "J"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "东风区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "富锦市"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "抚远市"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "桦南县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "桦川县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "郊区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "前进区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "汤原县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "同江市"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "向阳区"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "牡丹江市"
            var index = "M"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "爱民区"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "东安区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "东宁市"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "海林市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "林口县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "穆棱市"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "宁安市"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "绥芬河市"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "西安区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "阳明区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "齐齐哈尔市"
            var index = "Q"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "昂昂溪区"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "拜泉县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "富拉尔基区"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "富裕县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "甘南县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "建华区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "克山县"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "克东县"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "龙沙区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "龙江县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "梅里斯达斡尔族区"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "碾子山区"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "讷河市"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "铁锋区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "泰来县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "依安县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "七台河市"
            var index = "Q"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "勃利县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "茄子河区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "桃山区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "新兴区"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "双鸭山市"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "宝山区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "宝清县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "尖山区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "集贤县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "岭东区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "饶河县"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "四方台区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "友谊县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "绥化市"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "安达市"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "北林区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "海伦市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "兰西县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "明水县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "青冈县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "庆安县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "绥棱县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "望奎县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "肇东市"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "伊春市"
            var index = "Y"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "大箐山县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "丰林县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "嘉荫县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "金林区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "南岔县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "汤旺县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "铁力市"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "乌翠区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "伊美区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "友好区"
                    var index = "Y"
                }
            )
        }
    )
}, object : UTSJSONObject() {
    var label = "河南省"
    var index = "H"
    var children = _uA(
        object : UTSJSONObject() {
            var label = "安阳市"
            var index = "A"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "安阳县"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "安阳高新技术产业开发区"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "北关区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "滑县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "龙安区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "林州市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "内黄县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "汤阴县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "文峰区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "殷都区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "鹤壁市"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "鹤山区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "鹤壁经济技术开发区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "浚县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "淇滨区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "淇县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "山城区"
                    var index = "S"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "焦作市"
            var index = "J"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "博爱县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "解放区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "焦作城乡一体化示范区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "马村区"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "孟州市"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "沁阳市"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "山阳区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "武陟县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "温县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "修武县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "中站区"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "开封市"
            var index = "K"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "鼓楼区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "龙亭区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "兰考县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "杞县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "顺河回族区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "通许县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "尉氏县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "祥符区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "禹王台区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "洛阳市"
            var index = "L"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "瀍河回族区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "涧西区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "老城区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "洛龙区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "栾川县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "洛宁县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "洛阳高新技术产业开发区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "孟津区"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "汝阳县"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "嵩县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "西工区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "新安县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "偃师区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "宜阳县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "伊川县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "漯河市"
            var index = "L"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "临颍县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "漯河经济技术开发区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "舞阳县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "源汇区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "郾城区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "召陵区"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "南阳市"
            var index = "N"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "邓州市"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "方城县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "南召县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "内乡县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "南阳高新技术产业开发区"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "南阳市城乡一体化示范区"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "社旗县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "唐河县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "桐柏县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "宛城区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "卧龙区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "西峡县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "淅川县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "新野县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "镇平县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "平顶山市"
            var index = "P"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "宝丰县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "郏县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "鲁山县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "平顶山高新技术产业开发区"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "平顶山市城乡一体化示范区"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "汝州市"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "石龙区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "卫东区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "舞钢市"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "新华区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "叶县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "湛河区"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "濮阳市"
            var index = "P"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "范县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "华龙区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "河南濮阳工业园区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "南乐县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "濮阳县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "濮阳经济技术开发区"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "清丰县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "台前县"
                    var index = "T"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "三门峡市"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "湖滨区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "河南三门峡经济开发区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "卢氏县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "灵宝市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "渑池县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "陕州区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "义马市"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "商丘市"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "睢阳区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "睢县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "河南商丘经济开发区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "梁园区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "民权县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "宁陵县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "夏邑县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "虞城县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "豫东综合物流产业聚集区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "永城市"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "柘城县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "省直辖县级行政区划"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "济源市"
                    var index = "J"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "新乡市"
            var index = "X"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "长垣市"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "凤泉区"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "封丘县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "红旗区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "获嘉县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "辉县市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "牧野区"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "卫滨区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "卫辉市"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "新乡县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "新乡高新技术产业开发区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "新乡经济技术开发区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "新乡市平原城乡一体化示范区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "原阳县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "延津县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "许昌市"
            var index = "X"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "长葛市"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "建安区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "魏都区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "襄城县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "许昌经济技术开发区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "鄢陵县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "禹州市"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "信阳市"
            var index = "X"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "光山县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "固始县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "潢川县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "淮滨县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "罗山县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "平桥区"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "浉河区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "商城县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "新县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "息县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "信阳高新技术产业开发区"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "郑州市"
            var index = "Z"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "登封市"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "二七区"
                    var index = "E"
                },
                object : UTSJSONObject() {
                    var label = "管城回族区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "巩义市"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "惠济区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "金水区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "上街区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "荥阳市"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "新密市"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "新郑市"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "中原区"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "中牟县"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "郑州经济技术开发区"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "郑州高新技术产业开发区"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "郑州航空港经济综合实验区"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "周口市"
            var index = "Z"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "川汇区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "郸城县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "扶沟县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "淮阳区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "鹿邑县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "商水县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "沈丘县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "太康县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "西华县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "项城市"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "周口临港开发区"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "驻马店市"
            var index = "Z"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "河南驻马店经济开发区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "泌阳县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "平舆县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "确山县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "汝南县"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "上蔡县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "遂平县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "西平县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "新蔡县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "驿城区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "正阳县"
                    var index = "Z"
                }
            )
        }
    )
}, object : UTSJSONObject() {
    var label = "湖北省"
    var index = "H"
    var children = _uA(
        object : UTSJSONObject() {
            var label = "鄂州市"
            var index = "E"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "鄂城区"
                    var index = "E"
                },
                object : UTSJSONObject() {
                    var label = "华容区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "梁子湖区"
                    var index = "L"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "恩施土家族苗族自治州"
            var index = "E"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "巴东县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "恩施市"
                    var index = "E"
                },
                object : UTSJSONObject() {
                    var label = "鹤峰县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "建始县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "利川市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "来凤县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "宣恩县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "咸丰县"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "黄石市"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "大冶市"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "黄石港区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "铁山区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "西塞山区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "下陆区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "阳新县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "黄冈市"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "黄州区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "红安县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "黄梅县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "罗田县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "龙感湖管理区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "麻城市"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "蕲春县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "团风县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "武穴市"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "浠水县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "英山县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "荆门市"
            var index = "J"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "东宝区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "掇刀区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "京山市"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "沙洋县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "钟祥市"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "荆州市"
            var index = "J"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "公安县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "洪湖市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "荆州区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "江陵县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "荆州经济技术开发区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "监利市"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "沙市区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "石首市"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "松滋市"
                    var index = "S"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "十堰市"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "丹江口市"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "房县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "茅箭区"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "郧阳区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "郧西县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "张湾区"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "竹山县"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "竹溪县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "随州市"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "广水市"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "随县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "曾都区"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "省直辖县级行政区划"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "潜江市"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "神农架林区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "天门市"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "仙桃市"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "武汉市"
            var index = "W"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "蔡甸区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "东西湖区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "汉阳区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "洪山区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "汉南区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "黄陂区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "江岸区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "江汉区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "江夏区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "硚口区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "青山区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "武昌区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "新洲区"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "襄阳市"
            var index = "X"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "保康县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "樊城区"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "谷城县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "老河口市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "南漳县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "襄城区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "襄州区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "宜城市"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "枣阳市"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "孝感市"
            var index = "X"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "安陆市"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "大悟县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "汉川市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "孝南区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "孝昌县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "云梦县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "应城市"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "咸宁市"
            var index = "X"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "崇阳县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "赤壁市"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "嘉鱼县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "通城县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "通山县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "咸安区"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "宜昌市"
            var index = "Y"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "长阳土家族自治县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "点军区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "当阳市"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "伍家岗区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "五峰土家族自治县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "西陵区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "猇亭区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "兴山县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "夷陵区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "远安县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "宜都市"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "秭归县"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "枝江市"
                    var index = "Z"
                }
            )
        }
    )
}, object : UTSJSONObject() {
    var label = "湖南省"
    var index = "H"
    var children = _uA(
        object : UTSJSONObject() {
            var label = "长沙市"
            var index = "C"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "长沙县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "芙蓉区"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "开福区"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "浏阳市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "宁乡市"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "天心区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "望城区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "岳麓区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "雨花区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "常德市"
            var index = "C"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "安乡县"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "常德市西洞庭管理区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "鼎城区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "汉寿县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "津市市"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "澧县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "临澧县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "石门县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "桃源县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "武陵区"
                    var index = "W"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "郴州市"
            var index = "C"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "安仁县"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "北湖区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "桂阳县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "桂东县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "嘉禾县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "临武县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "汝城县"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "苏仙区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "宜章县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "永兴县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "资兴市"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "衡阳市"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "常宁市"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "衡阳县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "衡南县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "衡山县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "衡东县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "湖南衡阳松木经济开发区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "湖南衡阳高新技术产业园区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "耒阳市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "南岳区"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "祁东县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "石鼓区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "雁峰区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "珠晖区"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "蒸湘区"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "怀化市"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "辰溪县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "鹤城区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "会同县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "怀化市洪江管理区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "洪江市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "靖州苗族侗族自治县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "麻阳苗族自治县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "通道侗族自治县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "溆浦县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "新晃侗族自治县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "沅陵县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "中方县"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "芷江侗族自治县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "娄底市"
            var index = "L"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "娄星区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "冷水江市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "涟源市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "双峰县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "新化县"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "邵阳市"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "北塔区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "城步苗族自治县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "大祥区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "洞口县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "隆回县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "双清区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "邵阳县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "绥宁县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "邵东市"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "武冈市"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "新邵县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "新宁县"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "湘潭市"
            var index = "X"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "湖南湘潭高新技术产业园区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "韶山市"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "湘潭县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "湘潭昭山示范区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "湘潭九华示范区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "湘乡市"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "雨湖区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "岳塘区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "湘西土家族苗族自治州"
            var index = "X"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "保靖县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "凤凰县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "古丈县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "花垣县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "吉首市"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "泸溪县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "龙山县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "永顺县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "岳阳市"
            var index = "Y"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "华容县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "君山区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "临湘市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "汨罗市"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "平江县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "湘阴县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "岳阳楼区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "云溪区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "岳阳县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "岳阳市屈原管理区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "益阳市"
            var index = "Y"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "安化县"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "赫山区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "湖南益阳高新技术产业园区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "南县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "桃江县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "益阳市大通湖管理区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "沅江市"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "资阳区"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "永州市"
            var index = "Y"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "东安县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "道县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "江永县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "江华瑶族自治县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "零陵区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "冷水滩区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "蓝山县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "宁远县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "祁阳市"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "双牌县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "新田县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "永州经济技术开发区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "永州市回龙圩管理区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "株洲市"
            var index = "Z"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "茶陵县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "荷塘区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "芦淞区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "渌口区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "醴陵市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "石峰区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "天元区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "攸县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "炎陵县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "张家界市"
            var index = "Z"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "慈利县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "桑植县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "武陵源区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "永定区"
                    var index = "Y"
                }
            )
        }
    )
}, object : UTSJSONObject() {
    var label = "海南省"
    var index = "H"
    var children = _uA(
        object : UTSJSONObject() {
            var label = "儋州市"
            var index = "D"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "白马井镇"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "大成镇"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "东成镇"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "峨蔓镇"
                    var index = "E"
                },
                object : UTSJSONObject() {
                    var label = "光村镇"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "和庆镇"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "海头镇"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "华南热作学院"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "兰洋镇"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "木棠镇"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "那大镇"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "南丰镇"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "排浦镇"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "王五镇"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "新州镇"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "雅星镇"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "洋浦经济开发区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "中和镇"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "海口市"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "龙华区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "美兰区"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "琼山区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "秀英区"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "三亚市"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "海棠区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "吉阳区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "天涯区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "崖州区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "三沙市"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "南沙群岛"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "西沙群岛"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "中沙群岛的岛礁及其海域"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "省直辖县级行政区划"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "白沙黎族自治县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "保亭黎族苗族自治县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "澄迈县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "昌江黎族自治县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "东方市"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "定安县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "临高县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "乐东黎族自治县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "陵水黎族自治县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "琼海市"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "琼中黎族苗族自治县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "屯昌县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "五指山市"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "文昌市"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "万宁市"
                    var index = "W"
                }
            )
        }
    )
}, object : UTSJSONObject() {
    var label = "吉林省"
    var index = "J"
    var children = _uA(
        object : UTSJSONObject() {
            var label = "白山市"
            var index = "B"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "长白朝鲜族自治县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "抚松县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "浑江区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "江源区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "靖宇县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "临江市"
                    var index = "L"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "白城市"
            var index = "B"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "大安市"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "吉林白城经济开发区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "洮北区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "通榆县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "洮南市"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "镇赉县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "长春市"
            var index = "C"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "长春经济技术开发区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "长春净月高新技术产业开发区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "长春高新技术产业开发区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "长春汽车经济技术开发区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "德惠市"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "二道区"
                    var index = "E"
                },
                object : UTSJSONObject() {
                    var label = "公主岭市"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "九台区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "宽城区"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "绿园区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "南关区"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "农安县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "双阳区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "榆树市"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "朝阳区"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "吉林市"
            var index = "J"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "昌邑区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "船营区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "丰满区"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "桦甸市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "吉林经济开发区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "吉林高新技术产业开发区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "吉林中国新加坡食品区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "蛟河市"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "龙潭区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "磐石市"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "舒兰市"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "永吉县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "辽源市"
            var index = "L"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "东丰县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "东辽县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "龙山区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "西安区"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "四平市"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "梨树县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "双辽市"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "铁西区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "铁东区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "伊通满族自治县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "松原市"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "长岭县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "扶余市"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "吉林松原经济开发区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "宁江区"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "前郭尔罗斯蒙古族自治县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "乾安县"
                    var index = "Q"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "通化市"
            var index = "T"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "东昌区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "二道江区"
                    var index = "E"
                },
                object : UTSJSONObject() {
                    var label = "辉南县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "集安市"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "柳河县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "梅河口市"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "通化县"
                    var index = "T"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "延边朝鲜族自治州"
            var index = "Y"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "安图县"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "敦化市"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "珲春市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "和龙市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "龙井市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "图们市"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "汪清县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "延吉市"
                    var index = "Y"
                }
            )
        }
    )
}, object : UTSJSONObject() {
    var label = "江苏省"
    var index = "J"
    var children = _uA(
        object : UTSJSONObject() {
            var label = "常州市"
            var index = "C"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "金坛区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "溧阳市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "天宁区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "武进区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "新北区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "钟楼区"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "淮安市"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "淮安区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "淮阴区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "洪泽区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "淮安经济技术开发区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "金湖县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "涟水县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "清江浦区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "盱眙县"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "连云港市"
            var index = "L"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "东海县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "赣榆区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "灌云县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "灌南县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "海州区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "连云区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "连云港经济技术开发区"
                    var index = "L"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "南京市"
            var index = "N"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "鼓楼区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "高淳区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "建邺区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "江宁区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "六合区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "溧水区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "浦口区"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "秦淮区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "栖霞区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "玄武区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "雨花台区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "南通市"
            var index = "N"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "崇川区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "海门区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "海安市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "南通经济技术开发区"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "启东市"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "如东县"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "如皋市"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "通州区"
                    var index = "T"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "苏州市"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "常熟市"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "姑苏区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "虎丘区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "昆山市"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "苏州工业园区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "太仓市"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "吴中区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "吴江区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "相城区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "张家港市"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "宿迁市"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "宿城区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "宿豫区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "沭阳县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "泗阳县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "泗洪县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "宿迁经济技术开发区"
                    var index = "S"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "泰州市"
            var index = "T"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "高港区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "海陵区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "姜堰区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "靖江市"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "泰兴市"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "兴化市"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "无锡市"
            var index = "W"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "滨湖区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "惠山区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "江阴市"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "梁溪区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "锡山区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "新吴区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "宜兴市"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "徐州市"
            var index = "X"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "丰县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "鼓楼区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "睢宁县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "贾汪区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "沛县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "邳州市"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "泉山区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "铜山区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "徐州经济技术开发区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "新沂市"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "云龙区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "盐城市"
            var index = "Y"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "滨海县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "大丰区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "东台市"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "阜宁县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "建湖县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "射阳县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "亭湖区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "响水县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "盐都区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "盐城经济技术开发区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "扬州市"
            var index = "Y"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "宝应县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "广陵区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "高邮市"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "邗江区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "江都区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "扬州经济技术开发区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "仪征市"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "镇江市"
            var index = "Z"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "丹徒区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "丹阳市"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "京口区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "句容市"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "润州区"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "扬中市"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "镇江新区"
                    var index = "Z"
                }
            )
        }
    )
}, object : UTSJSONObject() {
    var label = "江西省"
    var index = "J"
    var children = _uA(
        object : UTSJSONObject() {
            var label = "抚州市"
            var index = "F"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "崇仁县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "东乡区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "广昌县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "金溪县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "临川区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "黎川县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "乐安县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "南城县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "南丰县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "宜黄县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "资溪县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "赣州市"
            var index = "G"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "安远县"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "崇义县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "大余县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "定南县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "赣县区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "会昌县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "龙南市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "南康区"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "宁都县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "全南县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "瑞金市"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "上犹县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "石城县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "信丰县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "兴国县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "寻乌县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "于都县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "章贡区"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "景德镇市"
            var index = "J"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "昌江区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "浮梁县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "乐平市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "珠山区"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "九江市"
            var index = "J"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "柴桑区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "德安县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "都昌县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "共青城市"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "湖口县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "濂溪区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "庐山市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "彭泽县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "瑞昌市"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "武宁县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "浔阳区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "修水县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "永修县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "吉安市"
            var index = "J"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "安福县"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "吉州区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "吉安县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "吉水县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "井冈山市"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "青原区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "遂川县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "泰和县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "万安县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "峡江县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "新干县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "永丰县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "永新县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "南昌市"
            var index = "N"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "安义县"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "东湖区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "红谷滩区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "进贤县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "南昌县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "青云谱区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "青山湖区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "西湖区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "新建区"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "萍乡市"
            var index = "P"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "安源区"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "莲花县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "芦溪县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "上栗县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "湘东区"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "上饶市"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "德兴市"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "广丰区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "广信区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "横峰县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "鄱阳县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "铅山县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "万年县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "婺源县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "信州区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "玉山县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "弋阳县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "余干县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "新余市"
            var index = "X"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "分宜县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "渝水区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "鹰潭市"
            var index = "Y"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "贵溪市"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "月湖区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "余江区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "宜春市"
            var index = "Y"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "奉新县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "丰城市"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "高安市"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "靖安县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "上高县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "铜鼓县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "万载县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "袁州区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "宜丰县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "樟树市"
                    var index = "Z"
                }
            )
        }
    )
}, object : UTSJSONObject() {
    var label = "辽宁省"
    var index = "L"
    var children = _uA(
        object : UTSJSONObject() {
            var label = "鞍山市"
            var index = "A"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "海城市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "立山区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "千山区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "铁东区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "铁西区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "台安县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "岫岩满族自治县"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "本溪市"
            var index = "B"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "本溪满族自治县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "桓仁满族自治县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "明山区"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "南芬区"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "平山区"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "溪湖区"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "大连市"
            var index = "D"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "长海县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "甘井子区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "金州区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "旅顺口区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "普兰店区"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "沙河口区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "瓦房店市"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "西岗区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "中山区"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "庄河市"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "丹东市"
            var index = "D"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "东港市"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "凤城市"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "宽甸满族自治县"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "元宝区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "振兴区"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "振安区"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "抚顺市"
            var index = "F"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "东洲区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "抚顺县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "清原满族自治县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "顺城区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "望花区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "新抚区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "新宾满族自治县"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "阜新市"
            var index = "F"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "阜新蒙古族自治县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "海州区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "清河门区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "太平区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "新邱区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "细河区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "彰武县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "葫芦岛市"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "建昌县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "连山区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "龙港区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "南票区"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "绥中县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "兴城市"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "锦州市"
            var index = "J"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "北镇市"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "古塔区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "黑山县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "凌河区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "凌海市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "太和区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "义县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "辽阳市"
            var index = "L"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "白塔区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "灯塔市"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "弓长岭区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "宏伟区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "辽阳县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "太子河区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "文圣区"
                    var index = "W"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "盘锦市"
            var index = "P"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "大洼区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "盘山县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "双台子区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "兴隆台区"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "沈阳市"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "大东区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "法库县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "和平区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "皇姑区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "浑南区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "康平县"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "辽中区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "沈河区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "苏家屯区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "沈北新区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "铁西区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "新民市"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "于洪区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "铁岭市"
            var index = "T"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "昌图县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "开原市"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "清河区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "铁岭县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "调兵山市"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "西丰县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "银州区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "营口市"
            var index = "Y"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "鲅鱼圈区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "大石桥市"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "盖州市"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "老边区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "西市区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "站前区"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "朝阳市"
            var index = "Z"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "北票市"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "建平县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "喀喇沁左翼蒙古族自治县"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "龙城区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "凌源市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "双塔区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "朝阳县"
                    var index = "Z"
                }
            )
        }
    )
}, object : UTSJSONObject() {
    var label = "内蒙古自治区"
    var index = "N"
    var children = _uA(
        object : UTSJSONObject() {
            var label = "阿拉善盟"
            var index = "A"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "阿拉善左旗"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "阿拉善右旗"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "额济纳旗"
                    var index = "E"
                },
                object : UTSJSONObject() {
                    var label = "内蒙古阿拉善高新技术产业开发区"
                    var index = "N"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "包头市"
            var index = "B"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "白云鄂博矿区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "包头稀土高新技术产业开发区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "东河区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "达尔罕茂明安联合旗"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "固阳县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "九原区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "昆都仑区"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "青山区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "石拐区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "土默特右旗"
                    var index = "T"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "巴彦淖尔市"
            var index = "B"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "磴口县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "杭锦后旗"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "临河区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "五原县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "乌拉特前旗"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "乌拉特中旗"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "乌拉特后旗"
                    var index = "W"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "赤峰市"
            var index = "C"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "阿鲁科尔沁旗"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "敖汉旗"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "巴林左旗"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "巴林右旗"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "红山区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "克什克腾旗"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "喀喇沁旗"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "林西县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "宁城县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "松山区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "翁牛特旗"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "元宝山区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "鄂尔多斯市"
            var index = "E"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "东胜区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "达拉特旗"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "鄂托克前旗"
                    var index = "E"
                },
                object : UTSJSONObject() {
                    var label = "鄂托克旗"
                    var index = "E"
                },
                object : UTSJSONObject() {
                    var label = "杭锦旗"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "康巴什区"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "乌审旗"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "伊金霍洛旗"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "准格尔旗"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "呼和浩特市"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "回民区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "和林格尔县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "呼和浩特经济技术开发区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "清水河县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "赛罕区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "土默特左旗"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "托克托县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "武川县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "新城区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "玉泉区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "呼伦贝尔市"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "阿荣旗"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "陈巴尔虎旗"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "鄂伦春自治旗"
                    var index = "E"
                },
                object : UTSJSONObject() {
                    var label = "鄂温克族自治旗"
                    var index = "E"
                },
                object : UTSJSONObject() {
                    var label = "额尔古纳市"
                    var index = "E"
                },
                object : UTSJSONObject() {
                    var label = "根河市"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "海拉尔区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "莫力达瓦达斡尔族自治旗"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "满洲里市"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "新巴尔虎左旗"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "新巴尔虎右旗"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "牙克石市"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "扎赉诺尔区"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "扎兰屯市"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "通辽市"
            var index = "T"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "霍林郭勒市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "科尔沁区"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "科尔沁左翼中旗"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "科尔沁左翼后旗"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "开鲁县"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "库伦旗"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "奈曼旗"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "通辽经济技术开发区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "扎鲁特旗"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "乌海市"
            var index = "W"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "海勃湾区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "海南区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "乌达区"
                    var index = "W"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "乌兰察布市"
            var index = "W"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "察哈尔右翼前旗"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "察哈尔右翼中旗"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "察哈尔右翼后旗"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "丰镇市"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "化德县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "集宁区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "凉城县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "商都县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "四子王旗"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "兴和县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "卓资县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "兴安盟"
            var index = "X"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "阿尔山市"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "科尔沁右翼前旗"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "科尔沁右翼中旗"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "突泉县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "乌兰浩特市"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "扎赉特旗"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "锡林郭勒盟"
            var index = "X"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "阿巴嘎旗"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "东乌珠穆沁旗"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "多伦县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "二连浩特市"
                    var index = "E"
                },
                object : UTSJSONObject() {
                    var label = "苏尼特左旗"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "苏尼特右旗"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "太仆寺旗"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "乌拉盖管理区管委会"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "锡林浩特市"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "西乌珠穆沁旗"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "镶黄旗"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "正镶白旗"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "正蓝旗"
                    var index = "Z"
                }
            )
        }
    )
}, object : UTSJSONObject() {
    var label = "宁夏回族自治区"
    var index = "N"
    var children = _uA(
        object : UTSJSONObject() {
            var label = "固原市"
            var index = "G"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "泾源县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "隆德县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "彭阳县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "西吉县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "原州区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "石嘴山市"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "大武口区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "惠农区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "平罗县"
                    var index = "P"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "吴忠市"
            var index = "W"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "红寺堡区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "利通区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "青铜峡市"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "同心县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "盐池县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "银川市"
            var index = "Y"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "贺兰县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "金凤区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "灵武市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "兴庆区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "西夏区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "永宁县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "中卫市"
            var index = "Z"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "海原县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "沙坡头区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "中宁县"
                    var index = "Z"
                }
            )
        }
    )
}, object : UTSJSONObject() {
    var label = "青海省"
    var index = "Q"
    var children = _uA(
        object : UTSJSONObject() {
            var label = "果洛藏族自治州"
            var index = "G"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "班玛县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "达日县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "甘德县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "久治县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "玛沁县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "玛多县"
                    var index = "M"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "海东市"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "互助土族自治县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "化隆回族自治县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "乐都区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "民和回族土族自治县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "平安区"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "循化撒拉族自治县"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "海北藏族自治州"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "刚察县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "海晏县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "门源回族自治县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "祁连县"
                    var index = "Q"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "黄南藏族自治州"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "河南蒙古族自治县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "尖扎县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "同仁市"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "泽库县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "海南藏族自治州"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "共和县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "贵德县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "贵南县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "同德县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "兴海县"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "海西蒙古族藏族自治州"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "德令哈市"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "都兰县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "大柴旦行政委员会"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "格尔木市"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "茫崖市"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "天峻县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "乌兰县"
                    var index = "W"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "西宁市"
            var index = "X"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "城东区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "城中区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "城西区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "城北区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "大通回族土族自治县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "湟中区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "湟源县"
                    var index = "H"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "玉树藏族自治州"
            var index = "Y"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "称多县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "囊谦县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "曲麻莱县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "玉树市"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "杂多县"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "治多县"
                    var index = "Z"
                }
            )
        }
    )
}, object : UTSJSONObject() {
    var label = "山西省"
    var index = "S"
    var children = _uA(
        object : UTSJSONObject() {
            var label = "长治市"
            var index = "C"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "长子县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "壶关县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "潞州区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "潞城区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "黎城县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "平顺县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "沁县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "沁源县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "上党区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "屯留区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "武乡县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "襄垣县"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "大同市"
            var index = "D"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "广灵县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "浑源县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "灵丘县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "平城区"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "山西大同经济开发区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "天镇县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "新荣区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "云冈区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "云州区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "阳高县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "左云县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "晋城市"
            var index = "J"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "城区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "高平市"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "陵川县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "沁水县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "阳城县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "泽州县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "晋中市"
            var index = "J"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "和顺县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "介休市"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "灵石县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "平遥县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "祁县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "寿阳县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "太谷区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "昔阳县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "榆次区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "榆社县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "左权县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "临汾市"
            var index = "L"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "安泽县"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "大宁县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "浮山县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "汾西县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "古县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "洪洞县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "侯马市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "霍州市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "吉县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "蒲县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "曲沃县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "襄汾县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "乡宁县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "隰县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "尧都区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "翼城县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "永和县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "吕梁市"
            var index = "L"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "方山县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "汾阳市"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "交城县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "交口县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "离石区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "临县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "柳林县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "岚县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "石楼县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "文水县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "兴县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "孝义市"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "中阳县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "朔州市"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "怀仁市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "平鲁区"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "朔城区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "山阴县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "山西朔州经济开发区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "应县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "右玉县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "太原市"
            var index = "T"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "古交市"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "尖草坪区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "晋源区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "娄烦县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "清徐县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "山西转型综合改革示范区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "万柏林区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "小店区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "杏花岭区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "迎泽区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "阳曲县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "忻州市"
            var index = "X"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "保德县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "定襄县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "代县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "繁峙县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "河曲县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "静乐县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "岢岚县"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "宁武县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "偏关县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "神池县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "五台县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "五寨县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "五台山风景名胜区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "忻府区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "原平市"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "阳泉市"
            var index = "Y"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "城区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "郊区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "矿区"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "平定县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "盂县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "运城市"
            var index = "Y"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "河津市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "稷山县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "绛县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "临猗县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "平陆县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "芮城县"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "万荣县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "闻喜县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "新绛县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "夏县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "盐湖区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "垣曲县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "永济市"
                    var index = "Y"
                }
            )
        }
    )
}, object : UTSJSONObject() {
    var label = "上海市"
    var index = "S"
    var children = _uA(
        object : UTSJSONObject() {
            var label = "市辖区"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "宝山区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "长宁区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "崇明区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "奉贤区"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "黄浦区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "虹口区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "静安区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "嘉定区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "金山区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "闵行区"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "普陀区"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "浦东新区"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "青浦区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "松江区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "徐汇区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "杨浦区"
                    var index = "Y"
                }
            )
        }
    )
}, object : UTSJSONObject() {
    var label = "山东省"
    var index = "S"
    var children = _uA(
        object : UTSJSONObject() {
            var label = "滨州市"
            var index = "B"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "滨城区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "博兴县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "惠民县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "无棣县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "阳信县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "沾化区"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "邹平市"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "东营市"
            var index = "D"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "东营区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "东营经济技术开发区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "东营港经济开发区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "广饶县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "河口区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "垦利区"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "利津县"
                    var index = "L"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "德州市"
            var index = "D"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "德城区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "德州天衢新区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "陵城区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "临邑县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "乐陵市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "宁津县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "平原县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "庆云县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "齐河县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "武城县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "夏津县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "禹城市"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "菏泽市"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "曹县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "成武县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "定陶区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "单县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "东明县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "菏泽经济技术开发区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "菏泽高新技术开发区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "巨野县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "鄄城县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "牡丹区"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "郓城县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "济南市"
            var index = "J"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "长清区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "钢城区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "槐荫区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "济阳区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "济南高新技术产业开发区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "历下区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "历城区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "莱芜区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "平阴县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "市中区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "商河县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "天桥区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "章丘区"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "济宁市"
            var index = "J"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "金乡县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "嘉祥县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "济宁高新技术产业开发区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "梁山县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "曲阜市"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "任城区"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "泗水县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "微山县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "汶上县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "兖州区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "鱼台县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "邹城市"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "临沂市"
            var index = "L"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "费县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "河东区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "莒南县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "兰山区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "罗庄区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "兰陵县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "临沭县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "临沂高新技术产业开发区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "蒙阴县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "平邑县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "郯城县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "沂南县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "沂水县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "聊城市"
            var index = "L"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "茌平区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "东昌府区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "东阿县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "冠县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "高唐县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "临清市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "莘县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "阳谷县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "青岛市"
            var index = "Q"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "城阳区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "黄岛区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "即墨区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "胶州市"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "崂山区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "李沧区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "莱西市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "平度市"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "市南区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "市北区"
                    var index = "S"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "日照市"
            var index = "R"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "东港区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "莒县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "岚山区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "日照经济技术开发区"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "五莲县"
                    var index = "W"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "泰安市"
            var index = "T"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "岱岳区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "东平县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "肥城市"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "宁阳县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "泰山区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "新泰市"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "潍坊市"
            var index = "W"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "安丘市"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "昌乐县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "昌邑市"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "坊子区"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "高密市"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "寒亭区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "奎文区"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "临朐县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "青州市"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "寿光市"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "潍城区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "潍坊滨海经济技术开发区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "诸城市"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "威海市"
            var index = "W"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "环翠区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "荣成市"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "乳山市"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "文登区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "威海火炬高技术产业开发区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "威海经济技术开发区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "威海临港经济技术开发区"
                    var index = "W"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "烟台市"
            var index = "Y"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "福山区"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "海阳市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "莱山区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "龙口市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "莱阳市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "莱州市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "牟平区"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "蓬莱区"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "栖霞市"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "烟台高新技术产业开发区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "烟台经济技术开发区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "芝罘区"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "招远市"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "淄博市"
            var index = "Z"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "博山区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "高青县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "桓台县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "临淄区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "沂源县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "淄川区"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "张店区"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "周村区"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "枣庄市"
            var index = "Z"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "市中区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "山亭区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "台儿庄区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "滕州市"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "薛城区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "峄城区"
                    var index = "Y"
                }
            )
        }
    )
}, object : UTSJSONObject() {
    var label = "四川省"
    var index = "S"
    var children = _uA(
        object : UTSJSONObject() {
            var label = "阿坝藏族羌族自治州"
            var index = "A"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "阿坝县"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "黑水县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "红原县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "九寨沟县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "金川县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "理县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "马尔康市"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "茂县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "壤塘县"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "若尔盖县"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "松潘县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "汶川县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "小金县"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "巴中市"
            var index = "B"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "巴州区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "恩阳区"
                    var index = "E"
                },
                object : UTSJSONObject() {
                    var label = "南江县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "平昌县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "通江县"
                    var index = "T"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "成都市"
            var index = "C"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "成华区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "崇州市"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "大邑县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "都江堰市"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "锦江区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "金牛区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "金堂县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "简阳市"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "龙泉驿区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "郫都区"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "蒲江县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "彭州市"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "青羊区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "青白江区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "邛崃市"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "双流区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "武侯区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "温江区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "新都区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "新津区"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "德阳市"
            var index = "D"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "广汉市"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "旌阳区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "罗江区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "绵竹市"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "什邡市"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "中江县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "达州市"
            var index = "D"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "达川区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "大竹县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "开江县"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "渠县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "通川区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "万源市"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "宣汉县"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "广元市"
            var index = "G"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "苍溪县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "剑阁县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "利州区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "青川县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "旺苍县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "昭化区"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "朝天区"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "广安市"
            var index = "G"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "广安区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "华蓥市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "邻水县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "前锋区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "武胜县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "岳池县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "甘孜藏族自治州"
            var index = "G"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "白玉县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "巴塘县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "丹巴县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "道孚县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "德格县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "稻城县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "得荣县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "甘孜县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "九龙县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "康定市"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "泸定县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "炉霍县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "理塘县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "石渠县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "色达县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "新龙县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "乡城县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "雅江县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "泸州市"
            var index = "L"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "古蔺县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "合江县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "江阳区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "龙马潭区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "泸县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "纳溪区"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "叙永县"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "乐山市"
            var index = "L"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "峨边彝族自治县"
                    var index = "E"
                },
                object : UTSJSONObject() {
                    var label = "峨眉山市"
                    var index = "E"
                },
                object : UTSJSONObject() {
                    var label = "金口河区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "犍为县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "井研县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "夹江县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "沐川县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "马边彝族自治县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "市中区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "沙湾区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "五通桥区"
                    var index = "W"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "凉山彝族自治州"
            var index = "L"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "布拖县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "德昌县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "甘洛县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "会理市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "会东县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "金阳县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "雷波县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "木里藏族自治县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "冕宁县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "美姑县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "宁南县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "普格县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "西昌市"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "喜德县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "盐源县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "越西县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "昭觉县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "绵阳市"
            var index = "M"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "安州区"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "北川羌族自治县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "涪城区"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "江油市"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "平武县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "三台县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "游仙区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "盐亭县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "梓潼县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "眉山市"
            var index = "M"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "东坡区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "丹棱县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "洪雅县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "彭山区"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "青神县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "仁寿县"
                    var index = "R"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "内江市"
            var index = "N"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "东兴区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "隆昌市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "市中区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "威远县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "资中县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "南充市"
            var index = "N"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "高坪区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "嘉陵区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "阆中市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "南部县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "蓬安县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "顺庆区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "西充县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "营山县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "仪陇县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "攀枝花市"
            var index = "P"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "东区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "米易县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "仁和区"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "西区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "盐边县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "遂宁市"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "安居区"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "船山区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "大英县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "蓬溪县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "射洪市"
                    var index = "S"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "宜宾市"
            var index = "Y"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "翠屏区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "长宁县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "高县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "珙县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "江安县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "南溪区"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "屏山县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "叙州区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "兴文县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "筠连县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "雅安市"
            var index = "Y"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "宝兴县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "汉源县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "芦山县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "名山区"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "石棉县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "天全县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "荥经县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "雨城区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "自贡市"
            var index = "Z"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "大安区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "富顺县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "贡井区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "荣县"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "沿滩区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "自流井区"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "资阳市"
            var index = "Z"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "安岳县"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "乐至县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "雁江区"
                    var index = "Y"
                }
            )
        }
    )
}, object : UTSJSONObject() {
    var label = "陕西省"
    var index = "S"
    var children = _uA(
        object : UTSJSONObject() {
            var label = "安康市"
            var index = "A"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "白河县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "汉滨区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "汉阴县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "岚皋县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "宁陕县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "平利县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "石泉县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "旬阳市"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "紫阳县"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "镇坪县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "宝鸡市"
            var index = "B"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "陈仓区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "凤翔区"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "扶风县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "凤县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "金台区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "陇县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "麟游县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "眉县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "岐山县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "千阳县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "太白县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "渭滨区"
                    var index = "W"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "汉中市"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "城固县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "佛坪县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "汉台区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "略阳县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "留坝县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "勉县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "南郑区"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "宁强县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "西乡县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "洋县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "镇巴县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "商洛市"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "丹凤县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "洛南县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "商州区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "商南县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "山阳县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "镇安县"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "柞水县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "铜川市"
            var index = "T"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "王益区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "印台区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "耀州区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "宜君县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "渭南市"
            var index = "W"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "白水县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "澄城县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "大荔县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "富平县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "华州区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "合阳县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "韩城市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "华阴市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "临渭区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "蒲城县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "潼关县"
                    var index = "T"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "西安市"
            var index = "X"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "碑林区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "灞桥区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "长安区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "高陵区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "鄠邑区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "莲湖区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "临潼区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "蓝田县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "未央区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "新城区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "雁塔区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "阎良区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "周至县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "咸阳市"
            var index = "X"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "彬州市"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "长武县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "淳化县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "泾阳县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "礼泉县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "秦都区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "乾县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "三原县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "渭城区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "武功县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "旬邑县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "兴平市"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "杨陵区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "永寿县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "延安市"
            var index = "Y"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "安塞区"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "宝塔区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "富县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "甘泉县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "黄龙县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "黄陵县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "洛川县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "吴起县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "延长县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "延川县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "宜川县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "志丹县"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "子长市"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "榆林市"
            var index = "Y"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "定边县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "府谷县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "横山区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "靖边县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "佳县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "米脂县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "清涧县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "绥德县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "神木市"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "吴堡县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "榆阳区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "子洲县"
                    var index = "Z"
                }
            )
        }
    )
}, object : UTSJSONObject() {
    var label = "天津市"
    var index = "T"
    var children = _uA(
        object : UTSJSONObject() {
            var label = "市辖区"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "北辰区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "宝坻区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "滨海新区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "东丽区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "和平区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "河东区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "河西区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "河北区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "红桥区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "津南区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "静海区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "蓟州区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "南开区"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "宁河区"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "武清区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "西青区"
                    var index = "X"
                }
            )
        }
    )
}, object : UTSJSONObject() {
    var label = "西藏自治区"
    var index = "X"
    var children = _uA(
        object : UTSJSONObject() {
            var label = "阿里地区"
            var index = "A"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "措勤县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "噶尔县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "革吉县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "改则县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "普兰县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "日土县"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "札达县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "昌都市"
            var index = "C"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "八宿县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "边坝县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "察雅县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "丁青县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "贡觉县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "江达县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "卡若区"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "类乌齐县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "洛隆县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "芒康县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "左贡县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "拉萨市"
            var index = "L"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "城关区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "堆龙德庆区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "达孜区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "当雄县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "达孜工业园区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "格尔木藏青工业园区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "林周县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "拉萨经济技术开发区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "墨竹工卡县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "尼木县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "曲水县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "西藏文化旅游创意园区"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "林芝市"
            var index = "L"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "巴宜区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "波密县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "察隅县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "工布江达县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "朗县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "墨脱县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "米林市"
                    var index = "M"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "那曲市"
            var index = "N"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "安多县"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "比如县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "班戈县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "巴青县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "嘉黎县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "聂荣县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "尼玛县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "色尼区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "申扎县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "索县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "双湖县"
                    var index = "S"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "日喀则市"
            var index = "R"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "昂仁县"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "白朗县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "定日县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "定结县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "岗巴县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "江孜县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "吉隆县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "康马县"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "拉孜县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "南木林县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "聂拉木县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "仁布县"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "桑珠孜区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "萨迦县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "萨嘎县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "谢通门县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "亚东县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "仲巴县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "山南市"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "措美县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "错那市"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "贡嘎县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "加查县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "洛扎县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "隆子县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "浪卡子县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "乃东区"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "琼结县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "曲松县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "桑日县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "扎囊县"
                    var index = "Z"
                }
            )
        }
    )
}, object : UTSJSONObject() {
    var label = "新疆维吾尔自治区"
    var index = "X"
    var children = _uA(
        object : UTSJSONObject() {
            var label = "阿克苏地区"
            var index = "A"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "阿克苏市"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "阿瓦提县"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "拜城县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "库车市"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "柯坪县"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "沙雅县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "温宿县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "乌什县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "新和县"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "阿勒泰地区"
            var index = "A"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "阿勒泰市"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "布尔津县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "富蕴县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "福海县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "哈巴河县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "吉木乃县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "青河县"
                    var index = "Q"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "博尔塔拉蒙古自治州"
            var index = "B"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "阿拉山口市"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "博乐市"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "精河县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "温泉县"
                    var index = "W"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "巴音郭楞蒙古自治州"
            var index = "B"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "博湖县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "和静县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "和硕县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "库尔勒市"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "轮台县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "且末县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "若羌县"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "尉犁县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "焉耆回族自治县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "昌吉回族自治州"
            var index = "C"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "昌吉市"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "阜康市"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "呼图壁县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "吉木萨尔县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "玛纳斯县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "木垒哈萨克自治县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "奇台县"
                    var index = "Q"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "哈密市"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "巴里坤哈萨克自治县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "伊州区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "伊吾县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "和田地区"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "策勒县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "和田市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "和田县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "洛浦县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "墨玉县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "民丰县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "皮山县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "于田县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "克拉玛依市"
            var index = "K"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "白碱滩区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "独山子区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "克拉玛依区"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "乌尔禾区"
                    var index = "W"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "克孜勒苏柯尔克孜自治州"
            var index = "K"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "阿图什市"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "阿克陶县"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "阿合奇县"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "乌恰县"
                    var index = "W"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "喀什地区"
            var index = "K"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "巴楚县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "喀什市"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "麦盖提县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "伽师县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "疏附县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "疏勒县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "莎车县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "塔什库尔干塔吉克自治县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "英吉沙县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "叶城县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "岳普湖县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "泽普县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "吐鲁番市"
            var index = "T"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "高昌区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "鄯善县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "托克逊县"
                    var index = "T"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "塔城地区"
            var index = "T"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "额敏县"
                    var index = "E"
                },
                object : UTSJSONObject() {
                    var label = "和布克赛尔蒙古自治县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "沙湾市"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "塔城市"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "托里县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "乌苏市"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "裕民县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "乌鲁木齐市"
            var index = "W"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "达坂城区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "米东区"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "沙依巴克区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "水磨沟区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "天山区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "头屯河区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "乌鲁木齐县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "新市区"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "伊犁哈萨克自治州"
            var index = "Y"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "察布查尔锡伯自治县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "巩留县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "霍尔果斯市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "霍城县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "奎屯市"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "尼勒克县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "特克斯县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "新源县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "伊宁市"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "伊宁县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "昭苏县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "自治区直辖县级行政区划"
            var index = "Z"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "阿拉尔市"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "北屯市"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "白杨市"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "胡杨河市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "可克达拉市"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "昆玉市"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "石河子市"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "双河市"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "图木舒克市"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "铁门关市"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "五家渠市"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "新星市"
                    var index = "X"
                }
            )
        }
    )
}, object : UTSJSONObject() {
    var label = "云南省"
    var index = "Y"
    var children = _uA(
        object : UTSJSONObject() {
            var label = "保山市"
            var index = "B"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "昌宁县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "隆阳区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "龙陵县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "施甸县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "腾冲市"
                    var index = "T"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "楚雄彝族自治州"
            var index = "C"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "楚雄市"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "大姚县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "禄丰市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "牟定县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "南华县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "双柏县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "武定县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "姚安县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "永仁县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "元谋县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "大理白族自治州"
            var index = "D"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "宾川县"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "大理市"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "洱源县"
                    var index = "E"
                },
                object : UTSJSONObject() {
                    var label = "鹤庆县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "剑川县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "弥渡县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "南涧彝族自治县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "巍山彝族回族自治县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "祥云县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "漾濞彝族自治县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "永平县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "云龙县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "德宏傣族景颇族自治州"
            var index = "D"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "梁河县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "陇川县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "芒市"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "瑞丽市"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "盈江县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "迪庆藏族自治州"
            var index = "D"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "德钦县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "维西傈僳族自治县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "香格里拉市"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "红河哈尼族彝族自治州"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "个旧市"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "红河县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "河口瑶族自治县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "建水县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "金平苗族瑶族傣族自治县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "开远市"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "泸西县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "绿春县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "蒙自市"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "弥勒市"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "屏边苗族自治县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "石屏县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "元阳县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "昆明市"
            var index = "K"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "安宁市"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "呈贡区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "东川区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "富民县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "官渡区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "晋宁区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "禄劝彝族苗族自治县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "盘龙区"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "石林彝族自治县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "嵩明县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "五华区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "西山区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "寻甸回族彝族自治县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "宜良县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "丽江市"
            var index = "L"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "古城区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "华坪县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "宁蒗彝族自治县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "玉龙纳西族自治县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "永胜县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "临沧市"
            var index = "L"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "沧源佤族自治县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "凤庆县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "耿马傣族佤族自治县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "临翔区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "双江拉祜族佤族布朗族傣族自治县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "云县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "永德县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "镇康县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "怒江傈僳族自治州"
            var index = "N"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "福贡县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "贡山独龙族怒族自治县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "泸水市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "兰坪白族普米族自治县"
                    var index = "L"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "普洱市"
            var index = "P"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "景东彝族自治县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "景谷傣族彝族自治县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "江城哈尼族彝族自治县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "澜沧拉祜族自治县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "墨江哈尼族自治县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "孟连傣族拉祜族佤族自治县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "宁洱哈尼族彝族自治县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "思茅区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "西盟佤族自治县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "镇沅彝族哈尼族拉祜族自治县"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "曲靖市"
            var index = "Q"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "富源县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "会泽县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "陆良县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "罗平县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "马龙区"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "麒麟区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "师宗县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "宣威市"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "沾益区"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "文山壮族苗族自治州"
            var index = "W"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "富宁县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "广南县"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "麻栗坡县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "马关县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "丘北县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "文山市"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "西畴县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "砚山县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "西双版纳傣族自治州"
            var index = "X"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "景洪市"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "勐海县"
                    var index = "M"
                },
                object : UTSJSONObject() {
                    var label = "勐腊县"
                    var index = "M"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "玉溪市"
            var index = "Y"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "澄江市"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "峨山彝族自治县"
                    var index = "E"
                },
                object : UTSJSONObject() {
                    var label = "红塔区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "华宁县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "江川区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "通海县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "新平彝族傣族自治县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "易门县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "元江哈尼族彝族傣族自治县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "昭通市"
            var index = "Z"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "大关县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "鲁甸县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "巧家县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "绥江县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "水富市"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "威信县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "盐津县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "永善县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "彝良县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "昭阳区"
                    var index = "Z"
                },
                object : UTSJSONObject() {
                    var label = "镇雄县"
                    var index = "Z"
                }
            )
        }
    )
}, object : UTSJSONObject() {
    var label = "浙江省"
    var index = "Z"
    var children = _uA(
        object : UTSJSONObject() {
            var label = "杭州市"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "滨江区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "淳安县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "富阳区"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "拱墅区"
                    var index = "G"
                },
                object : UTSJSONObject() {
                    var label = "建德市"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "临安区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "临平区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "钱塘区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "上城区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "桐庐县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "西湖区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "萧山区"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "余杭区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "湖州市"
            var index = "H"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "安吉县"
                    var index = "A"
                },
                object : UTSJSONObject() {
                    var label = "长兴县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "德清县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "南浔区"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "吴兴区"
                    var index = "W"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "嘉兴市"
            var index = "J"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "海盐县"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "海宁市"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "嘉善县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "南湖区"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "平湖市"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "桐乡市"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "秀洲区"
                    var index = "X"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "金华市"
            var index = "J"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "东阳市"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "金东区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "兰溪市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "浦江县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "磐安县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "婺城区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "武义县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "义乌市"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "永康市"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "丽水市"
            var index = "L"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "缙云县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "景宁畲族自治县"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "莲都区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "龙泉市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "青田县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "庆元县"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "遂昌县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "松阳县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "云和县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "宁波市"
            var index = "N"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "北仑区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "慈溪市"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "奉化区"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "海曙区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "江北区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "宁海县"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "象山县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "鄞州区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "余姚市"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "镇海区"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "衢州市"
            var index = "Q"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "常山县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "江山市"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "柯城区"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "开化县"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "龙游县"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "衢江区"
                    var index = "Q"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "绍兴市"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "柯桥区"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "上虞区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "嵊州市"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "新昌县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "越城区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "诸暨市"
                    var index = "Z"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "台州市"
            var index = "T"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "黄岩区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "椒江区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "路桥区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "临海市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "三门县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "天台县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "温岭市"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "仙居县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "玉环市"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "温州市"
            var index = "W"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "苍南县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "洞头区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "鹿城区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "龙湾区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "乐清市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "龙港市"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "瓯海区"
                    var index = "O"
                },
                object : UTSJSONObject() {
                    var label = "平阳县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "瑞安市"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "泰顺县"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "文成县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "永嘉县"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "舟山市"
            var index = "Z"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "定海区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "岱山县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "普陀区"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "嵊泗县"
                    var index = "S"
                }
            )
        }
    )
}, object : UTSJSONObject() {
    var label = "重庆市"
    var index = "Z"
    var children = _uA(
        object : UTSJSONObject() {
            var label = "市辖区"
            var index = "S"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "北碚区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "巴南区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "璧山区"
                    var index = "B"
                },
                object : UTSJSONObject() {
                    var label = "长寿区"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "大渡口区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "大足区"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "涪陵区"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "合川区"
                    var index = "H"
                },
                object : UTSJSONObject() {
                    var label = "江北区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "九龙坡区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "江津区"
                    var index = "J"
                },
                object : UTSJSONObject() {
                    var label = "开州区"
                    var index = "K"
                },
                object : UTSJSONObject() {
                    var label = "梁平区"
                    var index = "L"
                },
                object : UTSJSONObject() {
                    var label = "南岸区"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "南川区"
                    var index = "N"
                },
                object : UTSJSONObject() {
                    var label = "綦江区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "黔江区"
                    var index = "Q"
                },
                object : UTSJSONObject() {
                    var label = "荣昌区"
                    var index = "R"
                },
                object : UTSJSONObject() {
                    var label = "沙坪坝区"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "铜梁区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "潼南区"
                    var index = "T"
                },
                object : UTSJSONObject() {
                    var label = "万州区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "武隆区"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "渝中区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "渝北区"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "永川区"
                    var index = "Y"
                }
            )
        },
        object : UTSJSONObject() {
            var label = "县"
            var index = "X"
            var children = _uA(
                object : UTSJSONObject() {
                    var label = "城口县"
                    var index = "C"
                },
                object : UTSJSONObject() {
                    var label = "垫江县"
                    var index = "D"
                },
                object : UTSJSONObject() {
                    var label = "丰都县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "奉节县"
                    var index = "F"
                },
                object : UTSJSONObject() {
                    var label = "彭水苗族土家族自治县"
                    var index = "P"
                },
                object : UTSJSONObject() {
                    var label = "石柱土家族自治县"
                    var index = "S"
                },
                object : UTSJSONObject() {
                    var label = "巫山县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "巫溪县"
                    var index = "W"
                },
                object : UTSJSONObject() {
                    var label = "秀山土家族苗族自治县"
                    var index = "X"
                },
                object : UTSJSONObject() {
                    var label = "云阳县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "酉阳土家族苗族自治县"
                    var index = "Y"
                },
                object : UTSJSONObject() {
                    var label = "忠县"
                    var index = "Z"
                }
            )
        }
    )
})
val GenPagesUserEditClass = CreateVueComponent(GenPagesUserEdit::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesUserEdit.inheritAttrs, inject = GenPagesUserEdit.inject, props = GenPagesUserEdit.props, propsNeedCastKeys = GenPagesUserEdit.propsNeedCastKeys, emits = GenPagesUserEdit.emits, components = GenPagesUserEdit.components, styles = GenPagesUserEdit.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesUserEdit.setup(props as GenPagesUserEdit)
    }
    )
}
, fun(instance, renderer): GenPagesUserEdit {
    return GenPagesUserEdit(instance, renderer)
}
)
open class PassThrough27 (
    open var className: String? = null,
    open var inner: PassThroughProps? = null,
    open var prefixIcon: ClIconProps? = null,
    open var suffixIcon: ClIconProps? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClInputClInputClass = CreateVueComponent(GenUniModulesCoolUiComponentsClInputClInput::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClInputClInput.name, inheritAttrs = GenUniModulesCoolUiComponentsClInputClInput.inheritAttrs, inject = GenUniModulesCoolUiComponentsClInputClInput.inject, props = GenUniModulesCoolUiComponentsClInputClInput.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClInputClInput.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClInputClInput.emits, components = GenUniModulesCoolUiComponentsClInputClInput.components, styles = GenUniModulesCoolUiComponentsClInputClInput.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenUniModulesCoolUiComponentsClInputClInput.setup(props as GenUniModulesCoolUiComponentsClInputClInput, ctx)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClInputClInput {
    return GenUniModulesCoolUiComponentsClInputClInput(instance)
}
)
typealias ClInputComponentPublicInstance = GenUniModulesCoolUiComponentsClInputClInput
val GenPagesUserEditNameClass = CreateVueComponent(GenPagesUserEditName::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesUserEditName.inheritAttrs, inject = GenPagesUserEditName.inject, props = GenPagesUserEditName.props, propsNeedCastKeys = GenPagesUserEditName.propsNeedCastKeys, emits = GenPagesUserEditName.emits, components = GenPagesUserEditName.components, styles = GenPagesUserEditName.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesUserEditName.setup(props as GenPagesUserEditName)
    }
    )
}
, fun(instance, renderer): GenPagesUserEditName {
    return GenPagesUserEditName(instance, renderer)
}
)
open class PassThrough28 (
    open var className: String? = null,
    open var inner: PassThroughProps? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClTextareaClTextareaClass = CreateVueComponent(GenUniModulesCoolUiComponentsClTextareaClTextarea::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClTextareaClTextarea.name, inheritAttrs = GenUniModulesCoolUiComponentsClTextareaClTextarea.inheritAttrs, inject = GenUniModulesCoolUiComponentsClTextareaClTextarea.inject, props = GenUniModulesCoolUiComponentsClTextareaClTextarea.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClTextareaClTextarea.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClTextareaClTextarea.emits, components = GenUniModulesCoolUiComponentsClTextareaClTextarea.components, styles = GenUniModulesCoolUiComponentsClTextareaClTextarea.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenUniModulesCoolUiComponentsClTextareaClTextarea.setup(props as GenUniModulesCoolUiComponentsClTextareaClTextarea, ctx)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClTextareaClTextarea {
    return GenUniModulesCoolUiComponentsClTextareaClTextarea(instance)
}
)
val GenPagesUserEditDescriptionClass = CreateVueComponent(GenPagesUserEditDescription::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesUserEditDescription.inheritAttrs, inject = GenPagesUserEditDescription.inject, props = GenPagesUserEditDescription.props, propsNeedCastKeys = GenPagesUserEditDescription.propsNeedCastKeys, emits = GenPagesUserEditDescription.emits, components = GenPagesUserEditDescription.components, styles = GenPagesUserEditDescription.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesUserEditDescription.setup(props as GenPagesUserEditDescription)
    }
    )
}
, fun(instance, renderer): GenPagesUserEditDescription {
    return GenPagesUserEditDescription(instance, renderer)
}
)
open class PassThrough29 (
    open var className: String? = null,
    open var icon: ClIconProps? = null,
    open var label: PassThroughProps? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClCheckboxClCheckboxClass = CreateVueComponent(GenUniModulesCoolUiComponentsClCheckboxClCheckbox::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClCheckboxClCheckbox.name, inheritAttrs = GenUniModulesCoolUiComponentsClCheckboxClCheckbox.inheritAttrs, inject = GenUniModulesCoolUiComponentsClCheckboxClCheckbox.inject, props = GenUniModulesCoolUiComponentsClCheckboxClCheckbox.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClCheckboxClCheckbox.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClCheckboxClCheckbox.emits, components = GenUniModulesCoolUiComponentsClCheckboxClCheckbox.components, styles = GenUniModulesCoolUiComponentsClCheckboxClCheckbox.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClCheckboxClCheckbox.setup(props as GenUniModulesCoolUiComponentsClCheckboxClCheckbox)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClCheckboxClCheckbox {
    return GenUniModulesCoolUiComponentsClCheckboxClCheckbox(instance)
}
)
open class LoginForm (
    @JsonNotNull
    open var phone: String,
    @JsonNotNull
    open var smsCode: String,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return LoginFormReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class LoginFormReactiveObject : LoginForm, IUTSReactive<LoginForm> {
    override var __v_raw: LoginForm
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: LoginForm, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(phone = __v_raw.phone, smsCode = __v_raw.smsCode) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): LoginFormReactiveObject {
        return LoginFormReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var phone: String
        get() {
            return _tRG(__v_raw, "phone", __v_raw.phone, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("phone")) {
                return
            }
            val oldValue = __v_raw.phone
            __v_raw.phone = value
            _tRS(__v_raw, "phone", oldValue, value)
        }
    override var smsCode: String
        get() {
            return _tRG(__v_raw, "smsCode", __v_raw.smsCode, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("smsCode")) {
                return
            }
            val oldValue = __v_raw.smsCode
            __v_raw.smsCode = value
            _tRS(__v_raw, "smsCode", oldValue, value)
        }
}
open class Captcha (
    @JsonNotNull
    open var visible: Boolean = false,
    @JsonNotNull
    open var loading: Boolean = false,
    @JsonNotNull
    open var sending: Boolean = false,
    @JsonNotNull
    open var img: String,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return CaptchaReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class CaptchaReactiveObject : Captcha, IUTSReactive<Captcha> {
    override var __v_raw: Captcha
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: Captcha, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(visible = __v_raw.visible, loading = __v_raw.loading, sending = __v_raw.sending, img = __v_raw.img) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): CaptchaReactiveObject {
        return CaptchaReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var visible: Boolean
        get() {
            return _tRG(__v_raw, "visible", __v_raw.visible, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("visible")) {
                return
            }
            val oldValue = __v_raw.visible
            __v_raw.visible = value
            _tRS(__v_raw, "visible", oldValue, value)
        }
    override var loading: Boolean
        get() {
            return _tRG(__v_raw, "loading", __v_raw.loading, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("loading")) {
                return
            }
            val oldValue = __v_raw.loading
            __v_raw.loading = value
            _tRS(__v_raw, "loading", oldValue, value)
        }
    override var sending: Boolean
        get() {
            return _tRG(__v_raw, "sending", __v_raw.sending, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("sending")) {
                return
            }
            val oldValue = __v_raw.sending
            __v_raw.sending = value
            _tRS(__v_raw, "sending", oldValue, value)
        }
    override var img: String
        get() {
            return _tRG(__v_raw, "img", __v_raw.img, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("img")) {
                return
            }
            val oldValue = __v_raw.img
            __v_raw.img = value
            _tRS(__v_raw, "img", oldValue, value)
        }
}
val GenComponentsSmsBtnClass = CreateVueComponent(GenComponentsSmsBtn::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = "", inheritAttrs = GenComponentsSmsBtn.inheritAttrs, inject = GenComponentsSmsBtn.inject, props = GenComponentsSmsBtn.props, propsNeedCastKeys = GenComponentsSmsBtn.propsNeedCastKeys, emits = GenComponentsSmsBtn.emits, components = GenComponentsSmsBtn.components, styles = GenComponentsSmsBtn.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenComponentsSmsBtn.setup(props as GenComponentsSmsBtn, ctx)
    }
    )
}
, fun(instance, renderer): GenComponentsSmsBtn {
    return GenComponentsSmsBtn(instance)
}
)
val GenPagesUserComponentsLoginPhoneClass = CreateVueComponent(GenPagesUserComponentsLoginPhone::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = "", inheritAttrs = GenPagesUserComponentsLoginPhone.inheritAttrs, inject = GenPagesUserComponentsLoginPhone.inject, props = GenPagesUserComponentsLoginPhone.props, propsNeedCastKeys = GenPagesUserComponentsLoginPhone.propsNeedCastKeys, emits = GenPagesUserComponentsLoginPhone.emits, components = GenPagesUserComponentsLoginPhone.components, styles = GenPagesUserComponentsLoginPhone.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesUserComponentsLoginPhone.setup(props as GenPagesUserComponentsLoginPhone)
    }
    )
}
, fun(instance, renderer): GenPagesUserComponentsLoginPhone {
    return GenPagesUserComponentsLoginPhone(instance)
}
)
open class EditForm (
    @JsonNotNull
    open var avatarUrl: String,
    @JsonNotNull
    open var nickName: String,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return EditFormReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class EditFormReactiveObject : EditForm, IUTSReactive<EditForm> {
    override var __v_raw: EditForm
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: EditForm, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(avatarUrl = __v_raw.avatarUrl, nickName = __v_raw.nickName) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): EditFormReactiveObject {
        return EditFormReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var avatarUrl: String
        get() {
            return _tRG(__v_raw, "avatarUrl", __v_raw.avatarUrl, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("avatarUrl")) {
                return
            }
            val oldValue = __v_raw.avatarUrl
            __v_raw.avatarUrl = value
            _tRS(__v_raw, "avatarUrl", oldValue, value)
        }
    override var nickName: String
        get() {
            return _tRG(__v_raw, "nickName", __v_raw.nickName, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("nickName")) {
                return
            }
            val oldValue = __v_raw.nickName
            __v_raw.nickName = value
            _tRS(__v_raw, "nickName", oldValue, value)
        }
}
val GenPagesUserComponentsLoginWxClass = CreateVueComponent(GenPagesUserComponentsLoginWx::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = "", inheritAttrs = GenPagesUserComponentsLoginWx.inheritAttrs, inject = GenPagesUserComponentsLoginWx.inject, props = GenPagesUserComponentsLoginWx.props, propsNeedCastKeys = GenPagesUserComponentsLoginWx.propsNeedCastKeys, emits = GenPagesUserComponentsLoginWx.emits, components = GenPagesUserComponentsLoginWx.components, styles = GenPagesUserComponentsLoginWx.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenPagesUserComponentsLoginWx.setup(props as GenPagesUserComponentsLoginWx, ctx)
    }
    )
}
, fun(instance, renderer): GenPagesUserComponentsLoginWx {
    return GenPagesUserComponentsLoginWx(instance)
}
)
val GenPagesUserLoginClass = CreateVueComponent(GenPagesUserLogin::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesUserLogin.inheritAttrs, inject = GenPagesUserLogin.inject, props = GenPagesUserLogin.props, propsNeedCastKeys = GenPagesUserLogin.propsNeedCastKeys, emits = GenPagesUserLogin.emits, components = GenPagesUserLogin.components, styles = GenPagesUserLogin.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesUserLogin.setup(props as GenPagesUserLogin)
    }
    )
}
, fun(instance, renderer): GenPagesUserLogin {
    return GenPagesUserLogin(instance, renderer)
}
)
val GenPagesDemoComponentsItemClass = CreateVueComponent(GenPagesDemoComponentsItem::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenPagesDemoComponentsItem.name, inheritAttrs = GenPagesDemoComponentsItem.inheritAttrs, inject = GenPagesDemoComponentsItem.inject, props = GenPagesDemoComponentsItem.props, propsNeedCastKeys = GenPagesDemoComponentsItem.propsNeedCastKeys, emits = GenPagesDemoComponentsItem.emits, components = GenPagesDemoComponentsItem.components, styles = GenPagesDemoComponentsItem.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoComponentsItem.setup(props as GenPagesDemoComponentsItem)
    }
    )
}
, fun(instance, renderer): GenPagesDemoComponentsItem {
    return GenPagesDemoComponentsItem(instance)
}
)
val GenPagesDemoBasicTextClass = CreateVueComponent(GenPagesDemoBasicText::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoBasicText.inheritAttrs, inject = GenPagesDemoBasicText.inject, props = GenPagesDemoBasicText.props, propsNeedCastKeys = GenPagesDemoBasicText.propsNeedCastKeys, emits = GenPagesDemoBasicText.emits, components = GenPagesDemoBasicText.components, styles = GenPagesDemoBasicText.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoBasicText.setup(props as GenPagesDemoBasicText)
    }
    )
}
, fun(instance, renderer): GenPagesDemoBasicText {
    return GenPagesDemoBasicText(instance, renderer)
}
)
open class Item3 (
    @JsonNotNull
    open var label: String,
    @JsonNotNull
    open var value: Any,
    @JsonNotNull
    open var disabled: Boolean = false,
    @JsonNotNull
    open var isActive: Boolean = false,
) : UTSObject()
open class PassThrough30 (
    open var className: String? = null,
    open var text: PassThroughProps? = null,
    open var item: PassThroughProps? = null,
    open var line: PassThroughProps? = null,
    open var slider: PassThroughProps? = null,
) : UTSObject()
open class ItemRect (
    @JsonNotNull
    open var left: Number,
    @JsonNotNull
    open var width: Number,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return ItemRectReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class ItemRectReactiveObject : ItemRect, IUTSReactive<ItemRect> {
    override var __v_raw: ItemRect
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: ItemRect, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(left = __v_raw.left, width = __v_raw.width) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): ItemRectReactiveObject {
        return ItemRectReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var left: Number
        get() {
            return _tRG(__v_raw, "left", __v_raw.left, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("left")) {
                return
            }
            val oldValue = __v_raw.left
            __v_raw.left = value
            _tRS(__v_raw, "left", oldValue, value)
        }
    override var width: Number
        get() {
            return _tRG(__v_raw, "width", __v_raw.width, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("width")) {
                return
            }
            val oldValue = __v_raw.width
            __v_raw.width = value
            _tRS(__v_raw, "width", oldValue, value)
        }
}
open class GenUniModulesCoolUiComponentsClTabsClTabsSlotDataItem (
    @JsonNotNull
    open var item: Item3,
    @JsonNotNull
    open var active: Boolean = false,
) : SlotData()
val GenUniModulesCoolUiComponentsClTabsClTabsClass = CreateVueComponent(GenUniModulesCoolUiComponentsClTabsClTabs::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClTabsClTabs.name, inheritAttrs = GenUniModulesCoolUiComponentsClTabsClTabs.inheritAttrs, inject = GenUniModulesCoolUiComponentsClTabsClTabs.inject, props = GenUniModulesCoolUiComponentsClTabsClTabs.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClTabsClTabs.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClTabsClTabs.emits, components = GenUniModulesCoolUiComponentsClTabsClTabs.components, styles = GenUniModulesCoolUiComponentsClTabsClTabs.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClTabsClTabs.setup(props as GenUniModulesCoolUiComponentsClTabsClTabs)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClTabsClTabs {
    return GenUniModulesCoolUiComponentsClTabsClTabs(instance)
}
)
val GenPagesDemoBasicButtonClass = CreateVueComponent(GenPagesDemoBasicButton::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoBasicButton.inheritAttrs, inject = GenPagesDemoBasicButton.inject, props = GenPagesDemoBasicButton.props, propsNeedCastKeys = GenPagesDemoBasicButton.propsNeedCastKeys, emits = GenPagesDemoBasicButton.emits, components = GenPagesDemoBasicButton.components, styles = GenPagesDemoBasicButton.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoBasicButton.setup(props as GenPagesDemoBasicButton)
    }
    )
}
, fun(instance, renderer): GenPagesDemoBasicButton {
    return GenPagesDemoBasicButton(instance, renderer)
}
)
val GenPagesDemoBasicImageClass = CreateVueComponent(GenPagesDemoBasicImage::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoBasicImage.inheritAttrs, inject = GenPagesDemoBasicImage.inject, props = GenPagesDemoBasicImage.props, propsNeedCastKeys = GenPagesDemoBasicImage.propsNeedCastKeys, emits = GenPagesDemoBasicImage.emits, components = GenPagesDemoBasicImage.components, styles = GenPagesDemoBasicImage.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoBasicImage.setup(props as GenPagesDemoBasicImage)
    }
    )
}
, fun(instance, renderer): GenPagesDemoBasicImage {
    return GenPagesDemoBasicImage(instance, renderer)
}
)
val GenPagesDemoBasicIconClass = CreateVueComponent(GenPagesDemoBasicIcon::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoBasicIcon.inheritAttrs, inject = GenPagesDemoBasicIcon.inject, props = GenPagesDemoBasicIcon.props, propsNeedCastKeys = GenPagesDemoBasicIcon.propsNeedCastKeys, emits = GenPagesDemoBasicIcon.emits, components = GenPagesDemoBasicIcon.components, styles = GenPagesDemoBasicIcon.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoBasicIcon.setup(props as GenPagesDemoBasicIcon)
    }
    )
}
, fun(instance, renderer): GenPagesDemoBasicIcon {
    return GenPagesDemoBasicIcon(instance, renderer)
}
)
val GenPagesDemoBasicTagClass = CreateVueComponent(GenPagesDemoBasicTag::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoBasicTag.inheritAttrs, inject = GenPagesDemoBasicTag.inject, props = GenPagesDemoBasicTag.props, propsNeedCastKeys = GenPagesDemoBasicTag.propsNeedCastKeys, emits = GenPagesDemoBasicTag.emits, components = GenPagesDemoBasicTag.components, styles = GenPagesDemoBasicTag.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoBasicTag.setup(props as GenPagesDemoBasicTag)
    }
    )
}
, fun(instance, renderer): GenPagesDemoBasicTag {
    return GenPagesDemoBasicTag(instance, renderer)
}
)
open class PassThrough31 (
    open var className: String? = null,
    open var outer: PassThroughProps? = null,
    open var inner: PassThroughProps? = null,
    open var text: PassThroughProps? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClProgressClProgressClass = CreateVueComponent(GenUniModulesCoolUiComponentsClProgressClProgress::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClProgressClProgress.name, inheritAttrs = GenUniModulesCoolUiComponentsClProgressClProgress.inheritAttrs, inject = GenUniModulesCoolUiComponentsClProgressClProgress.inject, props = GenUniModulesCoolUiComponentsClProgressClProgress.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClProgressClProgress.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClProgressClProgress.emits, components = GenUniModulesCoolUiComponentsClProgressClProgress.components, styles = GenUniModulesCoolUiComponentsClProgressClProgress.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClProgressClProgress.setup(props as GenUniModulesCoolUiComponentsClProgressClProgress)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClProgressClProgress {
    return GenUniModulesCoolUiComponentsClProgressClProgress(instance)
}
)
open class PassThrough32 (
    open var className: String? = null,
    open var item: PassThroughProps? = null,
    open var add: PassThroughProps? = null,
    open var image: PassThroughProps? = null,
    open var icon: PassThroughProps? = null,
    open var text: PassThroughProps? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClUploadClUploadClass = CreateVueComponent(GenUniModulesCoolUiComponentsClUploadClUpload::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClUploadClUpload.name, inheritAttrs = GenUniModulesCoolUiComponentsClUploadClUpload.inheritAttrs, inject = GenUniModulesCoolUiComponentsClUploadClUpload.inject, props = GenUniModulesCoolUiComponentsClUploadClUpload.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClUploadClUpload.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClUploadClUpload.emits, components = GenUniModulesCoolUiComponentsClUploadClUpload.components, styles = GenUniModulesCoolUiComponentsClUploadClUpload.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClUploadClUpload.setup(props as GenUniModulesCoolUiComponentsClUploadClUpload)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClUploadClUpload {
    return GenUniModulesCoolUiComponentsClUploadClUpload(instance)
}
)
open class PassThrough33 (
    open var className: String? = null,
    open var track: PassThroughProps? = null,
    open var progress: PassThroughProps? = null,
    open var thumb: PassThroughProps? = null,
    open var value: PassThroughProps? = null,
) : UTSObject()
open class RangePercentage (
    @JsonNotNull
    open var min: Number,
    @JsonNotNull
    open var max: Number,
) : UTSObject()
val GenUniModulesCoolUiComponentsClSliderClSliderClass = CreateVueComponent(GenUniModulesCoolUiComponentsClSliderClSlider::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClSliderClSlider.name, inheritAttrs = GenUniModulesCoolUiComponentsClSliderClSlider.inheritAttrs, inject = GenUniModulesCoolUiComponentsClSliderClSlider.inject, props = GenUniModulesCoolUiComponentsClSliderClSlider.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClSliderClSlider.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClSliderClSlider.emits, components = GenUniModulesCoolUiComponentsClSliderClSlider.components, styles = GenUniModulesCoolUiComponentsClSliderClSlider.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClSliderClSlider.setup(props as GenUniModulesCoolUiComponentsClSliderClSlider)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClSliderClSlider {
    return GenUniModulesCoolUiComponentsClSliderClSlider(instance)
}
)
open class FormData (
    @JsonNotNull
    open var avatarUrl: String,
    @JsonNotNull
    open var nickName: String,
    @JsonNotNull
    open var email: String,
    @JsonNotNull
    open var height: Number,
    @JsonNotNull
    open var weight: Number,
    @JsonNotNull
    open var gender: Number,
    @JsonNotNull
    open var description: String,
    @JsonNotNull
    open var pca: UTSArray<String>,
    @JsonNotNull
    open var tags: UTSArray<Number>,
    @JsonNotNull
    open var birthday: String,
    @JsonNotNull
    open var isPublic: Boolean = false,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return FormDataReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class FormDataReactiveObject : FormData, IUTSReactive<FormData> {
    override var __v_raw: FormData
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: FormData, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(avatarUrl = __v_raw.avatarUrl, nickName = __v_raw.nickName, email = __v_raw.email, height = __v_raw.height, weight = __v_raw.weight, gender = __v_raw.gender, description = __v_raw.description, pca = __v_raw.pca, tags = __v_raw.tags, birthday = __v_raw.birthday, isPublic = __v_raw.isPublic) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): FormDataReactiveObject {
        return FormDataReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var avatarUrl: String
        get() {
            return _tRG(__v_raw, "avatarUrl", __v_raw.avatarUrl, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("avatarUrl")) {
                return
            }
            val oldValue = __v_raw.avatarUrl
            __v_raw.avatarUrl = value
            _tRS(__v_raw, "avatarUrl", oldValue, value)
        }
    override var nickName: String
        get() {
            return _tRG(__v_raw, "nickName", __v_raw.nickName, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("nickName")) {
                return
            }
            val oldValue = __v_raw.nickName
            __v_raw.nickName = value
            _tRS(__v_raw, "nickName", oldValue, value)
        }
    override var email: String
        get() {
            return _tRG(__v_raw, "email", __v_raw.email, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("email")) {
                return
            }
            val oldValue = __v_raw.email
            __v_raw.email = value
            _tRS(__v_raw, "email", oldValue, value)
        }
    override var height: Number
        get() {
            return _tRG(__v_raw, "height", __v_raw.height, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("height")) {
                return
            }
            val oldValue = __v_raw.height
            __v_raw.height = value
            _tRS(__v_raw, "height", oldValue, value)
        }
    override var weight: Number
        get() {
            return _tRG(__v_raw, "weight", __v_raw.weight, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("weight")) {
                return
            }
            val oldValue = __v_raw.weight
            __v_raw.weight = value
            _tRS(__v_raw, "weight", oldValue, value)
        }
    override var gender: Number
        get() {
            return _tRG(__v_raw, "gender", __v_raw.gender, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("gender")) {
                return
            }
            val oldValue = __v_raw.gender
            __v_raw.gender = value
            _tRS(__v_raw, "gender", oldValue, value)
        }
    override var description: String
        get() {
            return _tRG(__v_raw, "description", __v_raw.description, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("description")) {
                return
            }
            val oldValue = __v_raw.description
            __v_raw.description = value
            _tRS(__v_raw, "description", oldValue, value)
        }
    override var pca: UTSArray<String>
        get() {
            return _tRG(__v_raw, "pca", __v_raw.pca, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("pca")) {
                return
            }
            val oldValue = __v_raw.pca
            __v_raw.pca = value
            _tRS(__v_raw, "pca", oldValue, value)
        }
    override var tags: UTSArray<Number>
        get() {
            return _tRG(__v_raw, "tags", __v_raw.tags, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("tags")) {
                return
            }
            val oldValue = __v_raw.tags
            __v_raw.tags = value
            _tRS(__v_raw, "tags", oldValue, value)
        }
    override var birthday: String
        get() {
            return _tRG(__v_raw, "birthday", __v_raw.birthday, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("birthday")) {
                return
            }
            val oldValue = __v_raw.birthday
            __v_raw.birthday = value
            _tRS(__v_raw, "birthday", oldValue, value)
        }
    override var isPublic: Boolean
        get() {
            return _tRG(__v_raw, "isPublic", __v_raw.isPublic, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("isPublic")) {
                return
            }
            val oldValue = __v_raw.isPublic
            __v_raw.isPublic = value
            _tRS(__v_raw, "isPublic", oldValue, value)
        }
}
val GenPagesDemoFormFormClass = CreateVueComponent(GenPagesDemoFormForm::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoFormForm.inheritAttrs, inject = GenPagesDemoFormForm.inject, props = GenPagesDemoFormForm.props, propsNeedCastKeys = GenPagesDemoFormForm.propsNeedCastKeys, emits = GenPagesDemoFormForm.emits, components = GenPagesDemoFormForm.components, styles = GenPagesDemoFormForm.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoFormForm.setup(props as GenPagesDemoFormForm)
    }
    )
}
, fun(instance, renderer): GenPagesDemoFormForm {
    return GenPagesDemoFormForm(instance, renderer)
}
)
val GenPagesDemoComponentsTipsClass = CreateVueComponent(GenPagesDemoComponentsTips::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenPagesDemoComponentsTips.name, inheritAttrs = GenPagesDemoComponentsTips.inheritAttrs, inject = GenPagesDemoComponentsTips.inject, props = GenPagesDemoComponentsTips.props, propsNeedCastKeys = GenPagesDemoComponentsTips.propsNeedCastKeys, emits = GenPagesDemoComponentsTips.emits, components = GenPagesDemoComponentsTips.components, styles = GenPagesDemoComponentsTips.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoComponentsTips.setup(props as GenPagesDemoComponentsTips)
    }
    )
}
, fun(instance, renderer): GenPagesDemoComponentsTips {
    return GenPagesDemoComponentsTips(instance)
}
)
val GenPagesDemoFormInputClass = CreateVueComponent(GenPagesDemoFormInput::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoFormInput.inheritAttrs, inject = GenPagesDemoFormInput.inject, props = GenPagesDemoFormInput.props, propsNeedCastKeys = GenPagesDemoFormInput.propsNeedCastKeys, emits = GenPagesDemoFormInput.emits, components = GenPagesDemoFormInput.components, styles = GenPagesDemoFormInput.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoFormInput.setup(props as GenPagesDemoFormInput)
    }
    )
}
, fun(instance, renderer): GenPagesDemoFormInput {
    return GenPagesDemoFormInput(instance, renderer)
}
)
val GenPagesDemoFormTextareaClass = CreateVueComponent(GenPagesDemoFormTextarea::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoFormTextarea.inheritAttrs, inject = GenPagesDemoFormTextarea.inject, props = GenPagesDemoFormTextarea.props, propsNeedCastKeys = GenPagesDemoFormTextarea.propsNeedCastKeys, emits = GenPagesDemoFormTextarea.emits, components = GenPagesDemoFormTextarea.components, styles = GenPagesDemoFormTextarea.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoFormTextarea.setup(props as GenPagesDemoFormTextarea)
    }
    )
}
, fun(instance, renderer): GenPagesDemoFormTextarea {
    return GenPagesDemoFormTextarea(instance, renderer)
}
)
open class ValuePassThrough (
    open var className: String? = null,
    open var input: PassThroughProps? = null,
) : UTSObject()
open class OpPassThrough (
    open var className: String? = null,
    open var minus: PassThroughProps? = null,
    open var plus: PassThroughProps? = null,
    open var icon: ClIconProps? = null,
) : UTSObject()
open class PassThrough34 (
    open var className: String? = null,
    open var value: ValuePassThrough? = null,
    open var op: OpPassThrough? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClInputNumberClInputNumberClass = CreateVueComponent(GenUniModulesCoolUiComponentsClInputNumberClInputNumber::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClInputNumberClInputNumber.name, inheritAttrs = GenUniModulesCoolUiComponentsClInputNumberClInputNumber.inheritAttrs, inject = GenUniModulesCoolUiComponentsClInputNumberClInputNumber.inject, props = GenUniModulesCoolUiComponentsClInputNumberClInputNumber.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClInputNumberClInputNumber.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClInputNumberClInputNumber.emits, components = GenUniModulesCoolUiComponentsClInputNumberClInputNumber.components, styles = GenUniModulesCoolUiComponentsClInputNumberClInputNumber.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClInputNumberClInputNumber.setup(props as GenUniModulesCoolUiComponentsClInputNumberClInputNumber)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClInputNumberClInputNumber {
    return GenUniModulesCoolUiComponentsClInputNumberClInputNumber(instance)
}
)
val GenPagesDemoFormInputNumberClass = CreateVueComponent(GenPagesDemoFormInputNumber::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoFormInputNumber.inheritAttrs, inject = GenPagesDemoFormInputNumber.inject, props = GenPagesDemoFormInputNumber.props, propsNeedCastKeys = GenPagesDemoFormInputNumber.propsNeedCastKeys, emits = GenPagesDemoFormInputNumber.emits, components = GenPagesDemoFormInputNumber.components, styles = GenPagesDemoFormInputNumber.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoFormInputNumber.setup(props as GenPagesDemoFormInputNumber)
    }
    )
}
, fun(instance, renderer): GenPagesDemoFormInputNumber {
    return GenPagesDemoFormInputNumber(instance, renderer)
}
)
open class PassThrough35 (
    open var className: String? = null,
    open var list: PassThroughProps? = null,
    open var item: PassThroughProps? = null,
    open var cursor: PassThroughProps? = null,
    open var value: PassThroughProps? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClInputOtpClInputOtpClass = CreateVueComponent(GenUniModulesCoolUiComponentsClInputOtpClInputOtp::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClInputOtpClInputOtp.name, inheritAttrs = GenUniModulesCoolUiComponentsClInputOtpClInputOtp.inheritAttrs, inject = GenUniModulesCoolUiComponentsClInputOtpClInputOtp.inject, props = GenUniModulesCoolUiComponentsClInputOtpClInputOtp.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClInputOtpClInputOtp.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClInputOtpClInputOtp.emits, components = GenUniModulesCoolUiComponentsClInputOtpClInputOtp.components, styles = GenUniModulesCoolUiComponentsClInputOtpClInputOtp.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClInputOtpClInputOtp.setup(props as GenUniModulesCoolUiComponentsClInputOtpClInputOtp)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClInputOtpClInputOtp {
    return GenUniModulesCoolUiComponentsClInputOtpClInputOtp(instance)
}
)
val GenPagesDemoFormInputOtpClass = CreateVueComponent(GenPagesDemoFormInputOtp::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoFormInputOtp.inheritAttrs, inject = GenPagesDemoFormInputOtp.inject, props = GenPagesDemoFormInputOtp.props, propsNeedCastKeys = GenPagesDemoFormInputOtp.propsNeedCastKeys, emits = GenPagesDemoFormInputOtp.emits, components = GenPagesDemoFormInputOtp.components, styles = GenPagesDemoFormInputOtp.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoFormInputOtp.setup(props as GenPagesDemoFormInputOtp)
    }
    )
}
, fun(instance, renderer): GenPagesDemoFormInputOtp {
    return GenPagesDemoFormInputOtp(instance, renderer)
}
)
open class PassThrough36 (
    open var className: String? = null,
    open var item: PassThroughProps? = null,
    open var value: PassThroughProps? = null,
    open var popup: ClPopupProps? = null,
) : UTSObject()
open class GenUniModulesCoolUiComponentsClKeyboardNumberClKeyboardNumberSlotDataValue (
    @JsonNotNull
    open var value: String,
) : SlotData()
open class GenUniModulesCoolUiComponentsClKeyboardNumberClKeyboardNumberSlotDataItem (
    @JsonNotNull
    open var item: String,
) : SlotData()
val GenUniModulesCoolUiComponentsClKeyboardNumberClKeyboardNumberClass = CreateVueComponent(GenUniModulesCoolUiComponentsClKeyboardNumberClKeyboardNumber::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClKeyboardNumberClKeyboardNumber.name, inheritAttrs = GenUniModulesCoolUiComponentsClKeyboardNumberClKeyboardNumber.inheritAttrs, inject = GenUniModulesCoolUiComponentsClKeyboardNumberClKeyboardNumber.inject, props = GenUniModulesCoolUiComponentsClKeyboardNumberClKeyboardNumber.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClKeyboardNumberClKeyboardNumber.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClKeyboardNumberClKeyboardNumber.emits, components = GenUniModulesCoolUiComponentsClKeyboardNumberClKeyboardNumber.components, styles = GenUniModulesCoolUiComponentsClKeyboardNumberClKeyboardNumber.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenUniModulesCoolUiComponentsClKeyboardNumberClKeyboardNumber.setup(props as GenUniModulesCoolUiComponentsClKeyboardNumberClKeyboardNumber, ctx)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClKeyboardNumberClKeyboardNumber {
    return GenUniModulesCoolUiComponentsClKeyboardNumberClKeyboardNumber(instance)
}
)
typealias ClKeyboardNumberComponentPublicInstance = GenUniModulesCoolUiComponentsClKeyboardNumberClKeyboardNumber
open class PassThrough37 (
    open var className: String? = null,
    open var item: PassThroughProps? = null,
    open var value: PassThroughProps? = null,
    open var popup: ClPopupProps? = null,
) : UTSObject()
open class GenUniModulesCoolUiComponentsClKeyboardCarClKeyboardCarSlotDataValue (
    @JsonNotNull
    open var value: String,
) : SlotData()
open class GenUniModulesCoolUiComponentsClKeyboardCarClKeyboardCarSlotDataItem (
    @JsonNotNull
    open var item: String,
) : SlotData()
val GenUniModulesCoolUiComponentsClKeyboardCarClKeyboardCarClass = CreateVueComponent(GenUniModulesCoolUiComponentsClKeyboardCarClKeyboardCar::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClKeyboardCarClKeyboardCar.name, inheritAttrs = GenUniModulesCoolUiComponentsClKeyboardCarClKeyboardCar.inheritAttrs, inject = GenUniModulesCoolUiComponentsClKeyboardCarClKeyboardCar.inject, props = GenUniModulesCoolUiComponentsClKeyboardCarClKeyboardCar.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClKeyboardCarClKeyboardCar.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClKeyboardCarClKeyboardCar.emits, components = GenUniModulesCoolUiComponentsClKeyboardCarClKeyboardCar.components, styles = GenUniModulesCoolUiComponentsClKeyboardCarClKeyboardCar.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenUniModulesCoolUiComponentsClKeyboardCarClKeyboardCar.setup(props as GenUniModulesCoolUiComponentsClKeyboardCarClKeyboardCar, ctx)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClKeyboardCarClKeyboardCar {
    return GenUniModulesCoolUiComponentsClKeyboardCarClKeyboardCar(instance)
}
)
typealias ClKeyboardCarComponentPublicInstance = GenUniModulesCoolUiComponentsClKeyboardCarClKeyboardCar
open class PassThrough38 (
    open var className: String? = null,
    open var item: PassThroughProps? = null,
    open var value: PassThroughProps? = null,
    open var popup: ClPopupProps? = null,
) : UTSObject()
open class GenUniModulesCoolUiComponentsClKeyboardPasswordClKeyboardPasswordSlotDataValue (
    @JsonNotNull
    open var value: String,
) : SlotData()
open class GenUniModulesCoolUiComponentsClKeyboardPasswordClKeyboardPasswordSlotDataItem (
    @JsonNotNull
    open var item: String,
) : SlotData()
val GenUniModulesCoolUiComponentsClKeyboardPasswordClKeyboardPasswordClass = CreateVueComponent(GenUniModulesCoolUiComponentsClKeyboardPasswordClKeyboardPassword::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClKeyboardPasswordClKeyboardPassword.name, inheritAttrs = GenUniModulesCoolUiComponentsClKeyboardPasswordClKeyboardPassword.inheritAttrs, inject = GenUniModulesCoolUiComponentsClKeyboardPasswordClKeyboardPassword.inject, props = GenUniModulesCoolUiComponentsClKeyboardPasswordClKeyboardPassword.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClKeyboardPasswordClKeyboardPassword.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClKeyboardPasswordClKeyboardPassword.emits, components = GenUniModulesCoolUiComponentsClKeyboardPasswordClKeyboardPassword.components, styles = GenUniModulesCoolUiComponentsClKeyboardPasswordClKeyboardPassword.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenUniModulesCoolUiComponentsClKeyboardPasswordClKeyboardPassword.setup(props as GenUniModulesCoolUiComponentsClKeyboardPasswordClKeyboardPassword, ctx)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClKeyboardPasswordClKeyboardPassword {
    return GenUniModulesCoolUiComponentsClKeyboardPasswordClKeyboardPassword(instance)
}
)
typealias ClKeyboardPasswordComponentPublicInstance = GenUniModulesCoolUiComponentsClKeyboardPasswordClKeyboardPassword
val GenPagesDemoFormKeyboardClass = CreateVueComponent(GenPagesDemoFormKeyboard::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoFormKeyboard.inheritAttrs, inject = GenPagesDemoFormKeyboard.inject, props = GenPagesDemoFormKeyboard.props, propsNeedCastKeys = GenPagesDemoFormKeyboard.propsNeedCastKeys, emits = GenPagesDemoFormKeyboard.emits, components = GenPagesDemoFormKeyboard.components, styles = GenPagesDemoFormKeyboard.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoFormKeyboard.setup(props as GenPagesDemoFormKeyboard)
    }
    )
}
, fun(instance, renderer): GenPagesDemoFormKeyboard {
    return GenPagesDemoFormKeyboard(instance, renderer)
}
)
open class PassThrough39 (
    open var className: String? = null,
    open var icon: ClIconProps? = null,
    open var label: PassThroughProps? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClRadioClRadioClass = CreateVueComponent(GenUniModulesCoolUiComponentsClRadioClRadio::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClRadioClRadio.name, inheritAttrs = GenUniModulesCoolUiComponentsClRadioClRadio.inheritAttrs, inject = GenUniModulesCoolUiComponentsClRadioClRadio.inject, props = GenUniModulesCoolUiComponentsClRadioClRadio.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClRadioClRadio.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClRadioClRadio.emits, components = GenUniModulesCoolUiComponentsClRadioClRadio.components, styles = GenUniModulesCoolUiComponentsClRadioClRadio.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClRadioClRadio.setup(props as GenUniModulesCoolUiComponentsClRadioClRadio)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClRadioClRadio {
    return GenUniModulesCoolUiComponentsClRadioClRadio(instance)
}
)
val GenPagesDemoFormRadioClass = CreateVueComponent(GenPagesDemoFormRadio::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoFormRadio.inheritAttrs, inject = GenPagesDemoFormRadio.inject, props = GenPagesDemoFormRadio.props, propsNeedCastKeys = GenPagesDemoFormRadio.propsNeedCastKeys, emits = GenPagesDemoFormRadio.emits, components = GenPagesDemoFormRadio.components, styles = GenPagesDemoFormRadio.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoFormRadio.setup(props as GenPagesDemoFormRadio)
    }
    )
}
, fun(instance, renderer): GenPagesDemoFormRadio {
    return GenPagesDemoFormRadio(instance, renderer)
}
)
val GenPagesDemoFormCheckboxClass = CreateVueComponent(GenPagesDemoFormCheckbox::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoFormCheckbox.inheritAttrs, inject = GenPagesDemoFormCheckbox.inject, props = GenPagesDemoFormCheckbox.props, propsNeedCastKeys = GenPagesDemoFormCheckbox.propsNeedCastKeys, emits = GenPagesDemoFormCheckbox.emits, components = GenPagesDemoFormCheckbox.components, styles = GenPagesDemoFormCheckbox.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoFormCheckbox.setup(props as GenPagesDemoFormCheckbox)
    }
    )
}
, fun(instance, renderer): GenPagesDemoFormCheckbox {
    return GenPagesDemoFormCheckbox(instance, renderer)
}
)
val GenPagesDemoFormSwitchClass = CreateVueComponent(GenPagesDemoFormSwitch::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoFormSwitch.inheritAttrs, inject = GenPagesDemoFormSwitch.inject, props = GenPagesDemoFormSwitch.props, propsNeedCastKeys = GenPagesDemoFormSwitch.propsNeedCastKeys, emits = GenPagesDemoFormSwitch.emits, components = GenPagesDemoFormSwitch.components, styles = GenPagesDemoFormSwitch.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoFormSwitch.setup(props as GenPagesDemoFormSwitch)
    }
    )
}
, fun(instance, renderer): GenPagesDemoFormSwitch {
    return GenPagesDemoFormSwitch(instance, renderer)
}
)
open class PassThrough40 (
    open var className: String? = null,
    open var item: PassThroughProps? = null,
    open var icon: ClIconProps? = null,
    open var score: PassThroughProps? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClRateClRateClass = CreateVueComponent(GenUniModulesCoolUiComponentsClRateClRate::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClRateClRate.name, inheritAttrs = GenUniModulesCoolUiComponentsClRateClRate.inheritAttrs, inject = GenUniModulesCoolUiComponentsClRateClRate.inject, props = GenUniModulesCoolUiComponentsClRateClRate.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClRateClRate.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClRateClRate.emits, components = GenUniModulesCoolUiComponentsClRateClRate.components, styles = GenUniModulesCoolUiComponentsClRateClRate.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClRateClRate.setup(props as GenUniModulesCoolUiComponentsClRateClRate)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClRateClRate {
    return GenUniModulesCoolUiComponentsClRateClRate(instance)
}
)
val GenPagesDemoFormRateClass = CreateVueComponent(GenPagesDemoFormRate::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoFormRate.inheritAttrs, inject = GenPagesDemoFormRate.inject, props = GenPagesDemoFormRate.props, propsNeedCastKeys = GenPagesDemoFormRate.propsNeedCastKeys, emits = GenPagesDemoFormRate.emits, components = GenPagesDemoFormRate.components, styles = GenPagesDemoFormRate.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoFormRate.setup(props as GenPagesDemoFormRate)
    }
    )
}
, fun(instance, renderer): GenPagesDemoFormRate {
    return GenPagesDemoFormRate(instance, renderer)
}
)
val GenPagesDemoFormSliderClass = CreateVueComponent(GenPagesDemoFormSlider::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoFormSlider.inheritAttrs, inject = GenPagesDemoFormSlider.inject, props = GenPagesDemoFormSlider.props, propsNeedCastKeys = GenPagesDemoFormSlider.propsNeedCastKeys, emits = GenPagesDemoFormSlider.emits, components = GenPagesDemoFormSlider.components, styles = GenPagesDemoFormSlider.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoFormSlider.setup(props as GenPagesDemoFormSlider)
    }
    )
}
, fun(instance, renderer): GenPagesDemoFormSlider {
    return GenPagesDemoFormSlider(instance, renderer)
}
)
open class Form1 (
    open var selected: Number? = null,
    @JsonNotNull
    open var selected2: String,
    @JsonNotNull
    open var selected3: UTSArray<Number>,
    open var selected4: Number? = null,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return Form1ReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class Form1ReactiveObject : Form1, IUTSReactive<Form1> {
    override var __v_raw: Form1
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: Form1, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(selected = __v_raw.selected, selected2 = __v_raw.selected2, selected3 = __v_raw.selected3, selected4 = __v_raw.selected4) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): Form1ReactiveObject {
        return Form1ReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var selected: Number?
        get() {
            return _tRG(__v_raw, "selected", __v_raw.selected, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("selected")) {
                return
            }
            val oldValue = __v_raw.selected
            __v_raw.selected = value
            _tRS(__v_raw, "selected", oldValue, value)
        }
    override var selected2: String
        get() {
            return _tRG(__v_raw, "selected2", __v_raw.selected2, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("selected2")) {
                return
            }
            val oldValue = __v_raw.selected2
            __v_raw.selected2 = value
            _tRS(__v_raw, "selected2", oldValue, value)
        }
    override var selected3: UTSArray<Number>
        get() {
            return _tRG(__v_raw, "selected3", __v_raw.selected3, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("selected3")) {
                return
            }
            val oldValue = __v_raw.selected3
            __v_raw.selected3 = value
            _tRS(__v_raw, "selected3", oldValue, value)
        }
    override var selected4: Number?
        get() {
            return _tRG(__v_raw, "selected4", __v_raw.selected4, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("selected4")) {
                return
            }
            val oldValue = __v_raw.selected4
            __v_raw.selected4 = value
            _tRS(__v_raw, "selected4", oldValue, value)
        }
}
val GenPagesDemoFormSelectClass = CreateVueComponent(GenPagesDemoFormSelect::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoFormSelect.inheritAttrs, inject = GenPagesDemoFormSelect.inject, props = GenPagesDemoFormSelect.props, propsNeedCastKeys = GenPagesDemoFormSelect.propsNeedCastKeys, emits = GenPagesDemoFormSelect.emits, components = GenPagesDemoFormSelect.components, styles = GenPagesDemoFormSelect.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoFormSelect.setup(props as GenPagesDemoFormSelect)
    }
    )
}
, fun(instance, renderer): GenPagesDemoFormSelect {
    return GenPagesDemoFormSelect(instance, renderer)
}
)
open class Form2 (
    @JsonNotNull
    open var date1: String,
    @JsonNotNull
    open var date2: String,
    @JsonNotNull
    open var date3: String,
    @JsonNotNull
    open var date4: String,
    @JsonNotNull
    open var date5: UTSArray<String>,
    @JsonNotNull
    open var date6: UTSArray<String>,
    @JsonNotNull
    open var date7: String,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return Form2ReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class Form2ReactiveObject : Form2, IUTSReactive<Form2> {
    override var __v_raw: Form2
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: Form2, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(date1 = __v_raw.date1, date2 = __v_raw.date2, date3 = __v_raw.date3, date4 = __v_raw.date4, date5 = __v_raw.date5, date6 = __v_raw.date6, date7 = __v_raw.date7) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): Form2ReactiveObject {
        return Form2ReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var date1: String
        get() {
            return _tRG(__v_raw, "date1", __v_raw.date1, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("date1")) {
                return
            }
            val oldValue = __v_raw.date1
            __v_raw.date1 = value
            _tRS(__v_raw, "date1", oldValue, value)
        }
    override var date2: String
        get() {
            return _tRG(__v_raw, "date2", __v_raw.date2, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("date2")) {
                return
            }
            val oldValue = __v_raw.date2
            __v_raw.date2 = value
            _tRS(__v_raw, "date2", oldValue, value)
        }
    override var date3: String
        get() {
            return _tRG(__v_raw, "date3", __v_raw.date3, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("date3")) {
                return
            }
            val oldValue = __v_raw.date3
            __v_raw.date3 = value
            _tRS(__v_raw, "date3", oldValue, value)
        }
    override var date4: String
        get() {
            return _tRG(__v_raw, "date4", __v_raw.date4, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("date4")) {
                return
            }
            val oldValue = __v_raw.date4
            __v_raw.date4 = value
            _tRS(__v_raw, "date4", oldValue, value)
        }
    override var date5: UTSArray<String>
        get() {
            return _tRG(__v_raw, "date5", __v_raw.date5, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("date5")) {
                return
            }
            val oldValue = __v_raw.date5
            __v_raw.date5 = value
            _tRS(__v_raw, "date5", oldValue, value)
        }
    override var date6: UTSArray<String>
        get() {
            return _tRG(__v_raw, "date6", __v_raw.date6, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("date6")) {
                return
            }
            val oldValue = __v_raw.date6
            __v_raw.date6 = value
            _tRS(__v_raw, "date6", oldValue, value)
        }
    override var date7: String
        get() {
            return _tRG(__v_raw, "date7", __v_raw.date7, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("date7")) {
                return
            }
            val oldValue = __v_raw.date7
            __v_raw.date7 = value
            _tRS(__v_raw, "date7", oldValue, value)
        }
}
val GenPagesDemoFormSelectDateClass = CreateVueComponent(GenPagesDemoFormSelectDate::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoFormSelectDate.inheritAttrs, inject = GenPagesDemoFormSelectDate.inject, props = GenPagesDemoFormSelectDate.props, propsNeedCastKeys = GenPagesDemoFormSelectDate.propsNeedCastKeys, emits = GenPagesDemoFormSelectDate.emits, components = GenPagesDemoFormSelectDate.components, styles = GenPagesDemoFormSelectDate.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoFormSelectDate.setup(props as GenPagesDemoFormSelectDate)
    }
    )
}
, fun(instance, renderer): GenPagesDemoFormSelectDate {
    return GenPagesDemoFormSelectDate(instance, renderer)
}
)
open class PassThrough41 (
    open var trigger: ClSelectTriggerPassThrough? = null,
    open var popup: ClPopupPassThrough? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClSelectTimeClSelectTimeClass = CreateVueComponent(GenUniModulesCoolUiComponentsClSelectTimeClSelectTime::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClSelectTimeClSelectTime.name, inheritAttrs = GenUniModulesCoolUiComponentsClSelectTimeClSelectTime.inheritAttrs, inject = GenUniModulesCoolUiComponentsClSelectTimeClSelectTime.inject, props = GenUniModulesCoolUiComponentsClSelectTimeClSelectTime.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClSelectTimeClSelectTime.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClSelectTimeClSelectTime.emits, components = GenUniModulesCoolUiComponentsClSelectTimeClSelectTime.components, styles = GenUniModulesCoolUiComponentsClSelectTimeClSelectTime.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenUniModulesCoolUiComponentsClSelectTimeClSelectTime.setup(props as GenUniModulesCoolUiComponentsClSelectTimeClSelectTime, ctx)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClSelectTimeClSelectTime {
    return GenUniModulesCoolUiComponentsClSelectTimeClSelectTime(instance)
}
)
typealias ClSelectTimeComponentPublicInstance = GenUniModulesCoolUiComponentsClSelectTimeClSelectTime
open class Form3 (
    @JsonNotNull
    open var time1: String,
    @JsonNotNull
    open var time2: String,
    @JsonNotNull
    open var time3: String,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return Form3ReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class Form3ReactiveObject : Form3, IUTSReactive<Form3> {
    override var __v_raw: Form3
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: Form3, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(time1 = __v_raw.time1, time2 = __v_raw.time2, time3 = __v_raw.time3) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): Form3ReactiveObject {
        return Form3ReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var time1: String
        get() {
            return _tRG(__v_raw, "time1", __v_raw.time1, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("time1")) {
                return
            }
            val oldValue = __v_raw.time1
            __v_raw.time1 = value
            _tRS(__v_raw, "time1", oldValue, value)
        }
    override var time2: String
        get() {
            return _tRG(__v_raw, "time2", __v_raw.time2, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("time2")) {
                return
            }
            val oldValue = __v_raw.time2
            __v_raw.time2 = value
            _tRS(__v_raw, "time2", oldValue, value)
        }
    override var time3: String
        get() {
            return _tRG(__v_raw, "time3", __v_raw.time3, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("time3")) {
                return
            }
            val oldValue = __v_raw.time3
            __v_raw.time3 = value
            _tRS(__v_raw, "time3", oldValue, value)
        }
}
val GenPagesDemoFormSelectTimeClass = CreateVueComponent(GenPagesDemoFormSelectTime::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoFormSelectTime.inheritAttrs, inject = GenPagesDemoFormSelectTime.inject, props = GenPagesDemoFormSelectTime.props, propsNeedCastKeys = GenPagesDemoFormSelectTime.propsNeedCastKeys, emits = GenPagesDemoFormSelectTime.emits, components = GenPagesDemoFormSelectTime.components, styles = GenPagesDemoFormSelectTime.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoFormSelectTime.setup(props as GenPagesDemoFormSelectTime)
    }
    )
}
, fun(instance, renderer): GenPagesDemoFormSelectTime {
    return GenPagesDemoFormSelectTime(instance, renderer)
}
)
open class Form4 (
    @JsonNotNull
    open var cascader1: UTSArray<String>,
    @JsonNotNull
    open var cascader2: UTSArray<String>,
    @JsonNotNull
    open var cascader3: UTSArray<String>,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return Form4ReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class Form4ReactiveObject : Form4, IUTSReactive<Form4> {
    override var __v_raw: Form4
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: Form4, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(cascader1 = __v_raw.cascader1, cascader2 = __v_raw.cascader2, cascader3 = __v_raw.cascader3) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): Form4ReactiveObject {
        return Form4ReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var cascader1: UTSArray<String>
        get() {
            return _tRG(__v_raw, "cascader1", __v_raw.cascader1, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("cascader1")) {
                return
            }
            val oldValue = __v_raw.cascader1
            __v_raw.cascader1 = value
            _tRS(__v_raw, "cascader1", oldValue, value)
        }
    override var cascader2: UTSArray<String>
        get() {
            return _tRG(__v_raw, "cascader2", __v_raw.cascader2, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("cascader2")) {
                return
            }
            val oldValue = __v_raw.cascader2
            __v_raw.cascader2 = value
            _tRS(__v_raw, "cascader2", oldValue, value)
        }
    override var cascader3: UTSArray<String>
        get() {
            return _tRG(__v_raw, "cascader3", __v_raw.cascader3, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("cascader3")) {
                return
            }
            val oldValue = __v_raw.cascader3
            __v_raw.cascader3 = value
            _tRS(__v_raw, "cascader3", oldValue, value)
        }
}
val GenPagesDemoFormCascaderClass = CreateVueComponent(GenPagesDemoFormCascader::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoFormCascader.inheritAttrs, inject = GenPagesDemoFormCascader.inject, props = GenPagesDemoFormCascader.props, propsNeedCastKeys = GenPagesDemoFormCascader.propsNeedCastKeys, emits = GenPagesDemoFormCascader.emits, components = GenPagesDemoFormCascader.components, styles = GenPagesDemoFormCascader.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoFormCascader.setup(props as GenPagesDemoFormCascader)
    }
    )
}
, fun(instance, renderer): GenPagesDemoFormCascader {
    return GenPagesDemoFormCascader(instance, renderer)
}
)
open class Form5 (
    @JsonNotNull
    open var upload1: String,
    @JsonNotNull
    open var upload2: UTSArray<String>,
    @JsonNotNull
    open var upload3: UTSArray<String>,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return Form5ReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class Form5ReactiveObject : Form5, IUTSReactive<Form5> {
    override var __v_raw: Form5
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: Form5, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(upload1 = __v_raw.upload1, upload2 = __v_raw.upload2, upload3 = __v_raw.upload3) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): Form5ReactiveObject {
        return Form5ReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var upload1: String
        get() {
            return _tRG(__v_raw, "upload1", __v_raw.upload1, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("upload1")) {
                return
            }
            val oldValue = __v_raw.upload1
            __v_raw.upload1 = value
            _tRS(__v_raw, "upload1", oldValue, value)
        }
    override var upload2: UTSArray<String>
        get() {
            return _tRG(__v_raw, "upload2", __v_raw.upload2, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("upload2")) {
                return
            }
            val oldValue = __v_raw.upload2
            __v_raw.upload2 = value
            _tRS(__v_raw, "upload2", oldValue, value)
        }
    override var upload3: UTSArray<String>
        get() {
            return _tRG(__v_raw, "upload3", __v_raw.upload3, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("upload3")) {
                return
            }
            val oldValue = __v_raw.upload3
            __v_raw.upload3 = value
            _tRS(__v_raw, "upload3", oldValue, value)
        }
}
val GenPagesDemoFormUploadClass = CreateVueComponent(GenPagesDemoFormUpload::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoFormUpload.inheritAttrs, inject = GenPagesDemoFormUpload.inject, props = GenPagesDemoFormUpload.props, propsNeedCastKeys = GenPagesDemoFormUpload.propsNeedCastKeys, emits = GenPagesDemoFormUpload.emits, components = GenPagesDemoFormUpload.components, styles = GenPagesDemoFormUpload.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoFormUpload.setup(props as GenPagesDemoFormUpload)
    }
    )
}
, fun(instance, renderer): GenPagesDemoFormUpload {
    return GenPagesDemoFormUpload(instance, renderer)
}
)
val GenPagesDemoLayoutFlexClass = CreateVueComponent(GenPagesDemoLayoutFlex::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoLayoutFlex.inheritAttrs, inject = GenPagesDemoLayoutFlex.inject, props = GenPagesDemoLayoutFlex.props, propsNeedCastKeys = GenPagesDemoLayoutFlex.propsNeedCastKeys, emits = GenPagesDemoLayoutFlex.emits, components = GenPagesDemoLayoutFlex.components, styles = GenPagesDemoLayoutFlex.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoLayoutFlex.setup(props as GenPagesDemoLayoutFlex)
    }
    )
}
, fun(instance, renderer): GenPagesDemoLayoutFlex {
    return GenPagesDemoLayoutFlex(instance, renderer)
}
)
open class Form6 (
    @JsonNotNull
    open var val1: String,
    @JsonNotNull
    open var val2: String,
    @JsonNotNull
    open var val3: String,
    @JsonNotNull
    open var val4: String,
    @JsonNotNull
    open var val5: String,
    @JsonNotNull
    open var val6: String,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return Form6ReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class Form6ReactiveObject : Form6, IUTSReactive<Form6> {
    override var __v_raw: Form6
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: Form6, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(val1 = __v_raw.val1, val2 = __v_raw.val2, val3 = __v_raw.val3, val4 = __v_raw.val4, val5 = __v_raw.val5, val6 = __v_raw.val6) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): Form6ReactiveObject {
        return Form6ReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var val1: String
        get() {
            return _tRG(__v_raw, "val1", __v_raw.val1, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("val1")) {
                return
            }
            val oldValue = __v_raw.val1
            __v_raw.val1 = value
            _tRS(__v_raw, "val1", oldValue, value)
        }
    override var val2: String
        get() {
            return _tRG(__v_raw, "val2", __v_raw.val2, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("val2")) {
                return
            }
            val oldValue = __v_raw.val2
            __v_raw.val2 = value
            _tRS(__v_raw, "val2", oldValue, value)
        }
    override var val3: String
        get() {
            return _tRG(__v_raw, "val3", __v_raw.val3, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("val3")) {
                return
            }
            val oldValue = __v_raw.val3
            __v_raw.val3 = value
            _tRS(__v_raw, "val3", oldValue, value)
        }
    override var val4: String
        get() {
            return _tRG(__v_raw, "val4", __v_raw.val4, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("val4")) {
                return
            }
            val oldValue = __v_raw.val4
            __v_raw.val4 = value
            _tRS(__v_raw, "val4", oldValue, value)
        }
    override var val5: String
        get() {
            return _tRG(__v_raw, "val5", __v_raw.val5, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("val5")) {
                return
            }
            val oldValue = __v_raw.val5
            __v_raw.val5 = value
            _tRS(__v_raw, "val5", oldValue, value)
        }
    override var val6: String
        get() {
            return _tRG(__v_raw, "val6", __v_raw.val6, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("val6")) {
                return
            }
            val oldValue = __v_raw.val6
            __v_raw.val6 = value
            _tRS(__v_raw, "val6", oldValue, value)
        }
}
val GenPagesDemoLayoutTabsClass = CreateVueComponent(GenPagesDemoLayoutTabs::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoLayoutTabs.inheritAttrs, inject = GenPagesDemoLayoutTabs.inject, props = GenPagesDemoLayoutTabs.props, propsNeedCastKeys = GenPagesDemoLayoutTabs.propsNeedCastKeys, emits = GenPagesDemoLayoutTabs.emits, components = GenPagesDemoLayoutTabs.components, styles = GenPagesDemoLayoutTabs.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoLayoutTabs.setup(props as GenPagesDemoLayoutTabs)
    }
    )
}
, fun(instance, renderer): GenPagesDemoLayoutTabs {
    return GenPagesDemoLayoutTabs(instance, renderer)
}
)
val GenPagesDemoLayoutCollapseClass = CreateVueComponent(GenPagesDemoLayoutCollapse::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoLayoutCollapse.inheritAttrs, inject = GenPagesDemoLayoutCollapse.inject, props = GenPagesDemoLayoutCollapse.props, propsNeedCastKeys = GenPagesDemoLayoutCollapse.propsNeedCastKeys, emits = GenPagesDemoLayoutCollapse.emits, components = GenPagesDemoLayoutCollapse.components, styles = GenPagesDemoLayoutCollapse.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoLayoutCollapse.setup(props as GenPagesDemoLayoutCollapse)
    }
    )
}
, fun(instance, renderer): GenPagesDemoLayoutCollapse {
    return GenPagesDemoLayoutCollapse(instance, renderer)
}
)
open class Rect1 (
    @JsonNotNull
    open var height: Number,
    @JsonNotNull
    open var width: Number,
    @JsonNotNull
    open var left: Number,
    @JsonNotNull
    open var top: Number,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return Rect1ReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class Rect1ReactiveObject : Rect1, IUTSReactive<Rect1> {
    override var __v_raw: Rect1
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: Rect1, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(height = __v_raw.height, width = __v_raw.width, left = __v_raw.left, top = __v_raw.top) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): Rect1ReactiveObject {
        return Rect1ReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var height: Number
        get() {
            return _tRG(__v_raw, "height", __v_raw.height, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("height")) {
                return
            }
            val oldValue = __v_raw.height
            __v_raw.height = value
            _tRS(__v_raw, "height", oldValue, value)
        }
    override var width: Number
        get() {
            return _tRG(__v_raw, "width", __v_raw.width, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("width")) {
                return
            }
            val oldValue = __v_raw.width
            __v_raw.width = value
            _tRS(__v_raw, "width", oldValue, value)
        }
    override var left: Number
        get() {
            return _tRG(__v_raw, "left", __v_raw.left, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("left")) {
                return
            }
            val oldValue = __v_raw.left
            __v_raw.left = value
            _tRS(__v_raw, "left", oldValue, value)
        }
    override var top: Number
        get() {
            return _tRG(__v_raw, "top", __v_raw.top, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("top")) {
                return
            }
            val oldValue = __v_raw.top
            __v_raw.top = value
            _tRS(__v_raw, "top", oldValue, value)
        }
}
open class GenUniModulesCoolUiComponentsClStickyClStickySlotDataContent (
    @JsonNotNull
    open var isSticky: Boolean = false,
) : SlotData()
val GenUniModulesCoolUiComponentsClStickyClStickyClass = CreateVueComponent(GenUniModulesCoolUiComponentsClStickyClSticky::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClStickyClSticky.name, inheritAttrs = GenUniModulesCoolUiComponentsClStickyClSticky.inheritAttrs, inject = GenUniModulesCoolUiComponentsClStickyClSticky.inject, props = GenUniModulesCoolUiComponentsClStickyClSticky.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClStickyClSticky.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClStickyClSticky.emits, components = GenUniModulesCoolUiComponentsClStickyClSticky.components, styles = GenUniModulesCoolUiComponentsClStickyClSticky.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenUniModulesCoolUiComponentsClStickyClSticky.setup(props as GenUniModulesCoolUiComponentsClStickyClSticky, ctx)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClStickyClSticky {
    return GenUniModulesCoolUiComponentsClStickyClSticky(instance)
}
)
val GenPagesDemoLayoutStickyClass = CreateVueComponent(GenPagesDemoLayoutSticky::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoLayoutSticky.inheritAttrs, inject = GenPagesDemoLayoutSticky.inject, props = GenPagesDemoLayoutSticky.props, propsNeedCastKeys = GenPagesDemoLayoutSticky.propsNeedCastKeys, emits = GenPagesDemoLayoutSticky.emits, components = GenPagesDemoLayoutSticky.components, styles = GenPagesDemoLayoutSticky.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoLayoutSticky.setup(props as GenPagesDemoLayoutSticky)
    }
    )
}
, fun(instance, renderer): GenPagesDemoLayoutSticky {
    return GenPagesDemoLayoutSticky(instance, renderer)
}
)
val GenPagesDemoLayoutTopbarClass = CreateVueComponent(GenPagesDemoLayoutTopbar::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoLayoutTopbar.inheritAttrs, inject = GenPagesDemoLayoutTopbar.inject, props = GenPagesDemoLayoutTopbar.props, propsNeedCastKeys = GenPagesDemoLayoutTopbar.propsNeedCastKeys, emits = GenPagesDemoLayoutTopbar.emits, components = GenPagesDemoLayoutTopbar.components, styles = GenPagesDemoLayoutTopbar.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoLayoutTopbar.setup(props as GenPagesDemoLayoutTopbar)
    }
    )
}
, fun(instance, renderer): GenPagesDemoLayoutTopbar {
    return GenPagesDemoLayoutTopbar(instance, renderer)
}
)
val GenPagesDemoLayoutFloatViewClass = CreateVueComponent(GenPagesDemoLayoutFloatView::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoLayoutFloatView.inheritAttrs, inject = GenPagesDemoLayoutFloatView.inject, props = GenPagesDemoLayoutFloatView.props, propsNeedCastKeys = GenPagesDemoLayoutFloatView.propsNeedCastKeys, emits = GenPagesDemoLayoutFloatView.emits, components = GenPagesDemoLayoutFloatView.components, styles = GenPagesDemoLayoutFloatView.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoLayoutFloatView.setup(props as GenPagesDemoLayoutFloatView)
    }
    )
}
, fun(instance, renderer): GenPagesDemoLayoutFloatView {
    return GenPagesDemoLayoutFloatView(instance, renderer)
}
)
val GenPagesDemoLayoutFooterClass = CreateVueComponent(GenPagesDemoLayoutFooter::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoLayoutFooter.inheritAttrs, inject = GenPagesDemoLayoutFooter.inject, props = GenPagesDemoLayoutFooter.props, propsNeedCastKeys = GenPagesDemoLayoutFooter.propsNeedCastKeys, emits = GenPagesDemoLayoutFooter.emits, components = GenPagesDemoLayoutFooter.components, styles = GenPagesDemoLayoutFooter.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoLayoutFooter.setup(props as GenPagesDemoLayoutFooter)
    }
    )
}
, fun(instance, renderer): GenPagesDemoLayoutFooter {
    return GenPagesDemoLayoutFooter(instance, renderer)
}
)
val GenPagesDemoDataListClass = CreateVueComponent(GenPagesDemoDataList::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoDataList.inheritAttrs, inject = GenPagesDemoDataList.inject, props = GenPagesDemoDataList.props, propsNeedCastKeys = GenPagesDemoDataList.propsNeedCastKeys, emits = GenPagesDemoDataList.emits, components = GenPagesDemoDataList.components, styles = GenPagesDemoDataList.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoDataList.setup(props as GenPagesDemoDataList)
    }
    )
}
, fun(instance, renderer): GenPagesDemoDataList {
    return GenPagesDemoDataList(instance, renderer)
}
)
val GenPagesDemoDataListViewClass = CreateVueComponent(GenPagesDemoDataListView::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoDataListView.inheritAttrs, inject = GenPagesDemoDataListView.inject, props = GenPagesDemoDataListView.props, propsNeedCastKeys = GenPagesDemoDataListView.propsNeedCastKeys, emits = GenPagesDemoDataListView.emits, components = GenPagesDemoDataListView.components, styles = GenPagesDemoDataListView.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoDataListView.setup(props as GenPagesDemoDataListView)
    }
    )
}
, fun(instance, renderer): GenPagesDemoDataListView {
    return GenPagesDemoDataListView(instance, renderer)
}
)
open class PassThrough42 (
    open var className: String? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClSafeAreaClSafeAreaClass = CreateVueComponent(GenUniModulesCoolUiComponentsClSafeAreaClSafeArea::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClSafeAreaClSafeArea.name, inheritAttrs = GenUniModulesCoolUiComponentsClSafeAreaClSafeArea.inheritAttrs, inject = GenUniModulesCoolUiComponentsClSafeAreaClSafeArea.inject, props = GenUniModulesCoolUiComponentsClSafeAreaClSafeArea.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClSafeAreaClSafeArea.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClSafeAreaClSafeArea.emits, components = GenUniModulesCoolUiComponentsClSafeAreaClSafeArea.components, styles = GenUniModulesCoolUiComponentsClSafeAreaClSafeArea.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClSafeAreaClSafeArea.setup(props as GenUniModulesCoolUiComponentsClSafeAreaClSafeArea)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClSafeAreaClSafeArea {
    return GenUniModulesCoolUiComponentsClSafeAreaClSafeArea(instance)
}
)
open class PassThrough43 (
    open var className: String? = null,
    open var icon: PassThroughProps? = null,
    open var text: PassThroughProps? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClLoadmoreClLoadmoreClass = CreateVueComponent(GenUniModulesCoolUiComponentsClLoadmoreClLoadmore::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClLoadmoreClLoadmore.name, inheritAttrs = GenUniModulesCoolUiComponentsClLoadmoreClLoadmore.inheritAttrs, inject = GenUniModulesCoolUiComponentsClLoadmoreClLoadmore.inject, props = GenUniModulesCoolUiComponentsClLoadmoreClLoadmore.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClLoadmoreClLoadmore.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClLoadmoreClLoadmore.emits, components = GenUniModulesCoolUiComponentsClLoadmoreClLoadmore.components, styles = GenUniModulesCoolUiComponentsClLoadmoreClLoadmore.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClLoadmoreClLoadmore.setup(props as GenUniModulesCoolUiComponentsClLoadmoreClLoadmore)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClLoadmoreClLoadmore {
    return GenUniModulesCoolUiComponentsClLoadmoreClLoadmore(instance)
}
)
open class GoodsItem (
    @JsonNotNull
    open var id: Number,
    @JsonNotNull
    open var title: String,
    @JsonNotNull
    open var image: String,
) : UTSObject()
val GenPagesDemoComponentsGoodsItemClass = CreateVueComponent(GenPagesDemoComponentsGoodsItem::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenPagesDemoComponentsGoodsItem.name, inheritAttrs = GenPagesDemoComponentsGoodsItem.inheritAttrs, inject = GenPagesDemoComponentsGoodsItem.inject, props = GenPagesDemoComponentsGoodsItem.props, propsNeedCastKeys = GenPagesDemoComponentsGoodsItem.propsNeedCastKeys, emits = GenPagesDemoComponentsGoodsItem.emits, components = GenPagesDemoComponentsGoodsItem.components, styles = GenPagesDemoComponentsGoodsItem.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoComponentsGoodsItem.setup(props as GenPagesDemoComponentsGoodsItem)
    }
    )
}
, fun(instance, renderer): GenPagesDemoComponentsGoodsItem {
    return GenPagesDemoComponentsGoodsItem(instance)
}
)
val GenPagesDemoDataListViewRefreshClass = CreateVueComponent(GenPagesDemoDataListViewRefresh::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoDataListViewRefresh.inheritAttrs, inject = GenPagesDemoDataListViewRefresh.inject, props = GenPagesDemoDataListViewRefresh.props, propsNeedCastKeys = GenPagesDemoDataListViewRefresh.propsNeedCastKeys, emits = GenPagesDemoDataListViewRefresh.emits, components = GenPagesDemoDataListViewRefresh.components, styles = GenPagesDemoDataListViewRefresh.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoDataListViewRefresh.setup(props as GenPagesDemoDataListViewRefresh)
    }
    )
}
, fun(instance, renderer): GenPagesDemoDataListViewRefresh {
    return GenPagesDemoDataListViewRefresh(instance, renderer)
}
)
open class PassThrough44 (
    open var classNames: String? = null,
) : UTSObject()
open class GenUniModulesCoolUiComponentsClWaterfallClWaterfallSlotDataItem (
    @JsonNotNull
    open var item: UTSJSONObject,
    @JsonNotNull
    open var index: Number,
) : SlotData()
val GenUniModulesCoolUiComponentsClWaterfallClWaterfallClass = CreateVueComponent(GenUniModulesCoolUiComponentsClWaterfallClWaterfall::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClWaterfallClWaterfall.name, inheritAttrs = GenUniModulesCoolUiComponentsClWaterfallClWaterfall.inheritAttrs, inject = GenUniModulesCoolUiComponentsClWaterfallClWaterfall.inject, props = GenUniModulesCoolUiComponentsClWaterfallClWaterfall.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClWaterfallClWaterfall.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClWaterfallClWaterfall.emits, components = GenUniModulesCoolUiComponentsClWaterfallClWaterfall.components, styles = GenUniModulesCoolUiComponentsClWaterfallClWaterfall.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenUniModulesCoolUiComponentsClWaterfallClWaterfall.setup(props as GenUniModulesCoolUiComponentsClWaterfallClWaterfall, ctx)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClWaterfallClWaterfall {
    return GenUniModulesCoolUiComponentsClWaterfallClWaterfall(instance)
}
)
typealias ClWaterfallComponentPublicInstance = GenUniModulesCoolUiComponentsClWaterfallClWaterfall
val GenPagesDemoDataWaterfallClass = CreateVueComponent(GenPagesDemoDataWaterfall::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoDataWaterfall.inheritAttrs, inject = GenPagesDemoDataWaterfall.inject, props = GenPagesDemoDataWaterfall.props, propsNeedCastKeys = GenPagesDemoDataWaterfall.propsNeedCastKeys, emits = GenPagesDemoDataWaterfall.emits, components = GenPagesDemoDataWaterfall.components, styles = GenPagesDemoDataWaterfall.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoDataWaterfall.setup(props as GenPagesDemoDataWaterfall)
    }
    )
}
, fun(instance, renderer): GenPagesDemoDataWaterfall {
    return GenPagesDemoDataWaterfall(instance, renderer)
}
)
open class Item4 (
    @JsonNotNull
    open var url: String,
    @JsonNotNull
    open var isActive: Boolean = false,
) : UTSObject()
open class PassThrough45 (
    open var className: String? = null,
    open var item: PassThroughProps? = null,
    open var itemActive: PassThroughProps? = null,
    open var image: PassThroughProps? = null,
    open var dots: PassThroughProps? = null,
    open var dot: PassThroughProps? = null,
    open var dotActive: PassThroughProps? = null,
) : UTSObject()
open class GenUniModulesCoolUiComponentsClBannerClBannerSlotDataItem (
    @JsonNotNull
    open var item: Item4,
    @JsonNotNull
    open var index: Number,
) : SlotData()
val GenUniModulesCoolUiComponentsClBannerClBannerClass = CreateVueComponent(GenUniModulesCoolUiComponentsClBannerClBanner::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClBannerClBanner.name, inheritAttrs = GenUniModulesCoolUiComponentsClBannerClBanner.inheritAttrs, inject = GenUniModulesCoolUiComponentsClBannerClBanner.inject, props = GenUniModulesCoolUiComponentsClBannerClBanner.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClBannerClBanner.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClBannerClBanner.emits, components = GenUniModulesCoolUiComponentsClBannerClBanner.components, styles = GenUniModulesCoolUiComponentsClBannerClBanner.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClBannerClBanner.setup(props as GenUniModulesCoolUiComponentsClBannerClBanner)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClBannerClBanner {
    return GenUniModulesCoolUiComponentsClBannerClBanner(instance)
}
)
val GenPagesDemoDataBannerClass = CreateVueComponent(GenPagesDemoDataBanner::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoDataBanner.inheritAttrs, inject = GenPagesDemoDataBanner.inject, props = GenPagesDemoDataBanner.props, propsNeedCastKeys = GenPagesDemoDataBanner.propsNeedCastKeys, emits = GenPagesDemoDataBanner.emits, components = GenPagesDemoDataBanner.components, styles = GenPagesDemoDataBanner.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoDataBanner.setup(props as GenPagesDemoDataBanner)
    }
    )
}
, fun(instance, renderer): GenPagesDemoDataBanner {
    return GenPagesDemoDataBanner(instance, renderer)
}
)
open class PassThrough46 (
    open var className: String? = null,
    open var item: PassThroughProps? = null,
    open var prev: PassThroughProps? = null,
    open var next: PassThroughProps? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClPaginationClPaginationClass = CreateVueComponent(GenUniModulesCoolUiComponentsClPaginationClPagination::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClPaginationClPagination.name, inheritAttrs = GenUniModulesCoolUiComponentsClPaginationClPagination.inheritAttrs, inject = GenUniModulesCoolUiComponentsClPaginationClPagination.inject, props = GenUniModulesCoolUiComponentsClPaginationClPagination.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClPaginationClPagination.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClPaginationClPagination.emits, components = GenUniModulesCoolUiComponentsClPaginationClPagination.components, styles = GenUniModulesCoolUiComponentsClPaginationClPagination.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenUniModulesCoolUiComponentsClPaginationClPagination.setup(props as GenUniModulesCoolUiComponentsClPaginationClPagination, ctx)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClPaginationClPagination {
    return GenUniModulesCoolUiComponentsClPaginationClPagination(instance)
}
)
val GenPagesDemoDataPaginationClass = CreateVueComponent(GenPagesDemoDataPagination::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoDataPagination.inheritAttrs, inject = GenPagesDemoDataPagination.inject, props = GenPagesDemoDataPagination.props, propsNeedCastKeys = GenPagesDemoDataPagination.propsNeedCastKeys, emits = GenPagesDemoDataPagination.emits, components = GenPagesDemoDataPagination.components, styles = GenPagesDemoDataPagination.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoDataPagination.setup(props as GenPagesDemoDataPagination)
    }
    )
}
, fun(instance, renderer): GenPagesDemoDataPagination {
    return GenPagesDemoDataPagination(instance, renderer)
}
)
open class PassThrough47 (
    open var classNames: String? = null,
    open var icon: PassThroughProps? = null,
    open var title: PassThroughProps? = null,
    open var content: PassThroughProps? = null,
    open var date: PassThroughProps? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClTimelineItemClTimelineItemClass = CreateVueComponent(GenUniModulesCoolUiComponentsClTimelineItemClTimelineItem::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClTimelineItemClTimelineItem.name, inheritAttrs = GenUniModulesCoolUiComponentsClTimelineItemClTimelineItem.inheritAttrs, inject = GenUniModulesCoolUiComponentsClTimelineItemClTimelineItem.inject, props = GenUniModulesCoolUiComponentsClTimelineItemClTimelineItem.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClTimelineItemClTimelineItem.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClTimelineItemClTimelineItem.emits, components = GenUniModulesCoolUiComponentsClTimelineItemClTimelineItem.components, styles = GenUniModulesCoolUiComponentsClTimelineItemClTimelineItem.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClTimelineItemClTimelineItem.setup(props as GenUniModulesCoolUiComponentsClTimelineItemClTimelineItem)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClTimelineItemClTimelineItem {
    return GenUniModulesCoolUiComponentsClTimelineItemClTimelineItem(instance)
}
)
open class PassThrough48 (
    open var classNames: String? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClTimelineClTimelineClass = CreateVueComponent(GenUniModulesCoolUiComponentsClTimelineClTimeline::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClTimelineClTimeline.name, inheritAttrs = GenUniModulesCoolUiComponentsClTimelineClTimeline.inheritAttrs, inject = GenUniModulesCoolUiComponentsClTimelineClTimeline.inject, props = GenUniModulesCoolUiComponentsClTimelineClTimeline.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClTimelineClTimeline.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClTimelineClTimeline.emits, components = GenUniModulesCoolUiComponentsClTimelineClTimeline.components, styles = GenUniModulesCoolUiComponentsClTimelineClTimeline.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClTimelineClTimeline.setup(props as GenUniModulesCoolUiComponentsClTimelineClTimeline)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClTimelineClTimeline {
    return GenUniModulesCoolUiComponentsClTimelineClTimeline(instance)
}
)
val GenPagesDemoDataTimelineClass = CreateVueComponent(GenPagesDemoDataTimeline::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoDataTimeline.inheritAttrs, inject = GenPagesDemoDataTimeline.inject, props = GenPagesDemoDataTimeline.props, propsNeedCastKeys = GenPagesDemoDataTimeline.propsNeedCastKeys, emits = GenPagesDemoDataTimeline.emits, components = GenPagesDemoDataTimeline.components, styles = GenPagesDemoDataTimeline.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoDataTimeline.setup(props as GenPagesDemoDataTimeline)
    }
    )
}
, fun(instance, renderer): GenPagesDemoDataTimeline {
    return GenPagesDemoDataTimeline(instance, renderer)
}
)
val GenPagesDemoDataAvatarClass = CreateVueComponent(GenPagesDemoDataAvatar::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoDataAvatar.inheritAttrs, inject = GenPagesDemoDataAvatar.inject, props = GenPagesDemoDataAvatar.props, propsNeedCastKeys = GenPagesDemoDataAvatar.propsNeedCastKeys, emits = GenPagesDemoDataAvatar.emits, components = GenPagesDemoDataAvatar.components, styles = GenPagesDemoDataAvatar.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoDataAvatar.setup(props as GenPagesDemoDataAvatar)
    }
    )
}
, fun(instance, renderer): GenPagesDemoDataAvatar {
    return GenPagesDemoDataAvatar(instance, renderer)
}
)
open class ItemPosition (
    @JsonNotNull
    open var top: Number,
    @JsonNotNull
    open var left: Number,
    @JsonNotNull
    open var width: Number,
    @JsonNotNull
    open var height: Number,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return ItemPositionReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class ItemPositionReactiveObject : ItemPosition, IUTSReactive<ItemPosition> {
    override var __v_raw: ItemPosition
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: ItemPosition, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(top = __v_raw.top, left = __v_raw.left, width = __v_raw.width, height = __v_raw.height) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): ItemPositionReactiveObject {
        return ItemPositionReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var top: Number
        get() {
            return _tRG(__v_raw, "top", __v_raw.top, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("top")) {
                return
            }
            val oldValue = __v_raw.top
            __v_raw.top = value
            _tRS(__v_raw, "top", oldValue, value)
        }
    override var left: Number
        get() {
            return _tRG(__v_raw, "left", __v_raw.left, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("left")) {
                return
            }
            val oldValue = __v_raw.left
            __v_raw.left = value
            _tRS(__v_raw, "left", oldValue, value)
        }
    override var width: Number
        get() {
            return _tRG(__v_raw, "width", __v_raw.width, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("width")) {
                return
            }
            val oldValue = __v_raw.width
            __v_raw.width = value
            _tRS(__v_raw, "width", oldValue, value)
        }
    override var height: Number
        get() {
            return _tRG(__v_raw, "height", __v_raw.height, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("height")) {
                return
            }
            val oldValue = __v_raw.height
            __v_raw.height = value
            _tRS(__v_raw, "height", oldValue, value)
        }
}
open class TranslateOffset (
    @JsonNotNull
    open var x: Number,
    @JsonNotNull
    open var y: Number,
) : UTSObject()
open class PassThrough49 (
    open var className: String? = null,
    open var ghost: PassThroughProps? = null,
) : UTSObject()
open class GenUniModulesCoolUiComponentsClDraggableClDraggableSlotDataItem (
    @JsonNotNull
    open var item: UTSJSONObject,
    @JsonNotNull
    open var index: Number,
    @JsonNotNull
    open var dragging: Boolean = false,
    @JsonNotNull
    open var dragIndex: Number,
    @JsonNotNull
    open var insertIndex: Number,
) : SlotData()
val GenUniModulesCoolUiComponentsClDraggableClDraggableClass = CreateVueComponent(GenUniModulesCoolUiComponentsClDraggableClDraggable::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClDraggableClDraggable.name, inheritAttrs = GenUniModulesCoolUiComponentsClDraggableClDraggable.inheritAttrs, inject = GenUniModulesCoolUiComponentsClDraggableClDraggable.inject, props = GenUniModulesCoolUiComponentsClDraggableClDraggable.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClDraggableClDraggable.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClDraggableClDraggable.emits, components = GenUniModulesCoolUiComponentsClDraggableClDraggable.components, styles = GenUniModulesCoolUiComponentsClDraggableClDraggable.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClDraggableClDraggable.setup(props as GenUniModulesCoolUiComponentsClDraggableClDraggable)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClDraggableClDraggable {
    return GenUniModulesCoolUiComponentsClDraggableClDraggable(instance)
}
)
val GenPagesDemoDataDraggableClass = CreateVueComponent(GenPagesDemoDataDraggable::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoDataDraggable.inheritAttrs, inject = GenPagesDemoDataDraggable.inject, props = GenPagesDemoDataDraggable.props, propsNeedCastKeys = GenPagesDemoDataDraggable.propsNeedCastKeys, emits = GenPagesDemoDataDraggable.emits, components = GenPagesDemoDataDraggable.components, styles = GenPagesDemoDataDraggable.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoDataDraggable.setup(props as GenPagesDemoDataDraggable)
    }
    )
}
, fun(instance, renderer): GenPagesDemoDataDraggable {
    return GenPagesDemoDataDraggable(instance, renderer)
}
)
val GenPagesDemoStatusBadgeClass = CreateVueComponent(GenPagesDemoStatusBadge::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoStatusBadge.inheritAttrs, inject = GenPagesDemoStatusBadge.inject, props = GenPagesDemoStatusBadge.props, propsNeedCastKeys = GenPagesDemoStatusBadge.propsNeedCastKeys, emits = GenPagesDemoStatusBadge.emits, components = GenPagesDemoStatusBadge.components, styles = GenPagesDemoStatusBadge.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoStatusBadge.setup(props as GenPagesDemoStatusBadge)
    }
    )
}
, fun(instance, renderer): GenPagesDemoStatusBadge {
    return GenPagesDemoStatusBadge(instance, renderer)
}
)
open class PassThrough50 (
    open var className: String? = null,
    open var text: PassThroughProps? = null,
) : UTSObject()
open class Scroll (
    @JsonNotNull
    open var left: Number,
    @JsonNotNull
    open var top: Number,
    @JsonNotNull
    open var translateX: Number,
    @JsonNotNull
    open var duration: Number,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return ScrollReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class ScrollReactiveObject : Scroll, IUTSReactive<Scroll> {
    override var __v_raw: Scroll
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: Scroll, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(left = __v_raw.left, top = __v_raw.top, translateX = __v_raw.translateX, duration = __v_raw.duration) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): ScrollReactiveObject {
        return ScrollReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var left: Number
        get() {
            return _tRG(__v_raw, "left", __v_raw.left, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("left")) {
                return
            }
            val oldValue = __v_raw.left
            __v_raw.left = value
            _tRS(__v_raw, "left", oldValue, value)
        }
    override var top: Number
        get() {
            return _tRG(__v_raw, "top", __v_raw.top, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("top")) {
                return
            }
            val oldValue = __v_raw.top
            __v_raw.top = value
            _tRS(__v_raw, "top", oldValue, value)
        }
    override var translateX: Number
        get() {
            return _tRG(__v_raw, "translateX", __v_raw.translateX, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("translateX")) {
                return
            }
            val oldValue = __v_raw.translateX
            __v_raw.translateX = value
            _tRS(__v_raw, "translateX", oldValue, value)
        }
    override var duration: Number
        get() {
            return _tRG(__v_raw, "duration", __v_raw.duration, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("duration")) {
                return
            }
            val oldValue = __v_raw.duration
            __v_raw.duration = value
            _tRS(__v_raw, "duration", oldValue, value)
        }
}
open class GenUniModulesCoolUiComponentsClNoticebarClNoticebarSlotDataText (
    @JsonNotNull
    open var item: String,
) : SlotData()
val GenUniModulesCoolUiComponentsClNoticebarClNoticebarClass = CreateVueComponent(GenUniModulesCoolUiComponentsClNoticebarClNoticebar::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClNoticebarClNoticebar.name, inheritAttrs = GenUniModulesCoolUiComponentsClNoticebarClNoticebar.inheritAttrs, inject = GenUniModulesCoolUiComponentsClNoticebarClNoticebar.inject, props = GenUniModulesCoolUiComponentsClNoticebarClNoticebar.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClNoticebarClNoticebar.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClNoticebarClNoticebar.emits, components = GenUniModulesCoolUiComponentsClNoticebarClNoticebar.components, styles = GenUniModulesCoolUiComponentsClNoticebarClNoticebar.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClNoticebarClNoticebar.setup(props as GenUniModulesCoolUiComponentsClNoticebarClNoticebar)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClNoticebarClNoticebar {
    return GenUniModulesCoolUiComponentsClNoticebarClNoticebar(instance)
}
)
val GenPagesDemoStatusNoticebarClass = CreateVueComponent(GenPagesDemoStatusNoticebar::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoStatusNoticebar.inheritAttrs, inject = GenPagesDemoStatusNoticebar.inject, props = GenPagesDemoStatusNoticebar.props, propsNeedCastKeys = GenPagesDemoStatusNoticebar.propsNeedCastKeys, emits = GenPagesDemoStatusNoticebar.emits, components = GenPagesDemoStatusNoticebar.components, styles = GenPagesDemoStatusNoticebar.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoStatusNoticebar.setup(props as GenPagesDemoStatusNoticebar)
    }
    )
}
, fun(instance, renderer): GenPagesDemoStatusNoticebar {
    return GenPagesDemoStatusNoticebar(instance, renderer)
}
)
open class Item5 (
    @JsonNotNull
    open var value: String,
    @JsonNotNull
    open var isSplitor: Boolean = false,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return Item5ReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class Item5ReactiveObject : Item5, IUTSReactive<Item5> {
    override var __v_raw: Item5
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: Item5, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(value = __v_raw.value, isSplitor = __v_raw.isSplitor) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): Item5ReactiveObject {
        return Item5ReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var value: String
        get() {
            return _tRG(__v_raw, "value", __v_raw.value, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("value")) {
                return
            }
            val oldValue = __v_raw.value
            __v_raw.value = value
            _tRS(__v_raw, "value", oldValue, value)
        }
    override var isSplitor: Boolean
        get() {
            return _tRG(__v_raw, "isSplitor", __v_raw.isSplitor, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("isSplitor")) {
                return
            }
            val oldValue = __v_raw.isSplitor
            __v_raw.isSplitor = value
            _tRS(__v_raw, "isSplitor", oldValue, value)
        }
}
open class PassThrough51 (
    open var className: String? = null,
    open var text: PassThroughProps? = null,
    open var splitor: PassThroughProps? = null,
) : UTSObject()
open class Options (
    open var day: Number? = null,
    open var hour: Number? = null,
    open var minute: Number? = null,
    open var second: Number? = null,
    open var datetime: Any? = null,
) : UTSObject()
open class GenUniModulesCoolUiComponentsClCountdownClCountdownSlotDataItem (
    @JsonNotNull
    open var item: Item5,
) : SlotData()
val GenUniModulesCoolUiComponentsClCountdownClCountdownClass = CreateVueComponent(GenUniModulesCoolUiComponentsClCountdownClCountdown::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClCountdownClCountdown.name, inheritAttrs = GenUniModulesCoolUiComponentsClCountdownClCountdown.inheritAttrs, inject = GenUniModulesCoolUiComponentsClCountdownClCountdown.inject, props = GenUniModulesCoolUiComponentsClCountdownClCountdown.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClCountdownClCountdown.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClCountdownClCountdown.emits, components = GenUniModulesCoolUiComponentsClCountdownClCountdown.components, styles = GenUniModulesCoolUiComponentsClCountdownClCountdown.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenUniModulesCoolUiComponentsClCountdownClCountdown.setup(props as GenUniModulesCoolUiComponentsClCountdownClCountdown, ctx)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClCountdownClCountdown {
    return GenUniModulesCoolUiComponentsClCountdownClCountdown(instance)
}
)
val GenPagesDemoStatusCountdownClass = CreateVueComponent(GenPagesDemoStatusCountdown::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoStatusCountdown.inheritAttrs, inject = GenPagesDemoStatusCountdown.inject, props = GenPagesDemoStatusCountdown.props, propsNeedCastKeys = GenPagesDemoStatusCountdown.propsNeedCastKeys, emits = GenPagesDemoStatusCountdown.emits, components = GenPagesDemoStatusCountdown.components, styles = GenPagesDemoStatusCountdown.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoStatusCountdown.setup(props as GenPagesDemoStatusCountdown)
    }
    )
}
, fun(instance, renderer): GenPagesDemoStatusCountdown {
    return GenPagesDemoStatusCountdown(instance, renderer)
}
)
val GenPagesDemoStatusProgressClass = CreateVueComponent(GenPagesDemoStatusProgress::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoStatusProgress.inheritAttrs, inject = GenPagesDemoStatusProgress.inject, props = GenPagesDemoStatusProgress.props, propsNeedCastKeys = GenPagesDemoStatusProgress.propsNeedCastKeys, emits = GenPagesDemoStatusProgress.emits, components = GenPagesDemoStatusProgress.components, styles = GenPagesDemoStatusProgress.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoStatusProgress.setup(props as GenPagesDemoStatusProgress)
    }
    )
}
, fun(instance, renderer): GenPagesDemoStatusProgress {
    return GenPagesDemoStatusProgress(instance, renderer)
}
)
open class PassThrough52 (
    open var className: String? = null,
    open var text: PassThroughProps? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClProgressCircleClProgressCircleClass = CreateVueComponent(GenUniModulesCoolUiComponentsClProgressCircleClProgressCircle::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClProgressCircleClProgressCircle.name, inheritAttrs = GenUniModulesCoolUiComponentsClProgressCircleClProgressCircle.inheritAttrs, inject = GenUniModulesCoolUiComponentsClProgressCircleClProgressCircle.inject, props = GenUniModulesCoolUiComponentsClProgressCircleClProgressCircle.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClProgressCircleClProgressCircle.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClProgressCircleClProgressCircle.emits, components = GenUniModulesCoolUiComponentsClProgressCircleClProgressCircle.components, styles = GenUniModulesCoolUiComponentsClProgressCircleClProgressCircle.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenUniModulesCoolUiComponentsClProgressCircleClProgressCircle.setup(props as GenUniModulesCoolUiComponentsClProgressCircleClProgressCircle, ctx)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClProgressCircleClProgressCircle {
    return GenUniModulesCoolUiComponentsClProgressCircleClProgressCircle(instance)
}
)
val GenPagesDemoStatusProgressCircleClass = CreateVueComponent(GenPagesDemoStatusProgressCircle::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoStatusProgressCircle.inheritAttrs, inject = GenPagesDemoStatusProgressCircle.inject, props = GenPagesDemoStatusProgressCircle.props, propsNeedCastKeys = GenPagesDemoStatusProgressCircle.propsNeedCastKeys, emits = GenPagesDemoStatusProgressCircle.emits, components = GenPagesDemoStatusProgressCircle.components, styles = GenPagesDemoStatusProgressCircle.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoStatusProgressCircle.setup(props as GenPagesDemoStatusProgressCircle)
    }
    )
}
, fun(instance, renderer): GenPagesDemoStatusProgressCircle {
    return GenPagesDemoStatusProgressCircle(instance, renderer)
}
)
open class PassThrough53 (
    open var className: String? = null,
    open var loading: PassThroughProps? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClSkeletonClSkeletonClass = CreateVueComponent(GenUniModulesCoolUiComponentsClSkeletonClSkeleton::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClSkeletonClSkeleton.name, inheritAttrs = GenUniModulesCoolUiComponentsClSkeletonClSkeleton.inheritAttrs, inject = GenUniModulesCoolUiComponentsClSkeletonClSkeleton.inject, props = GenUniModulesCoolUiComponentsClSkeletonClSkeleton.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClSkeletonClSkeleton.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClSkeletonClSkeleton.emits, components = GenUniModulesCoolUiComponentsClSkeletonClSkeleton.components, styles = GenUniModulesCoolUiComponentsClSkeletonClSkeleton.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenUniModulesCoolUiComponentsClSkeletonClSkeleton.setup(props as GenUniModulesCoolUiComponentsClSkeletonClSkeleton)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClSkeletonClSkeleton {
    return GenUniModulesCoolUiComponentsClSkeletonClSkeleton(instance)
}
)
val GenPagesDemoStatusSkeletonClass = CreateVueComponent(GenPagesDemoStatusSkeleton::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoStatusSkeleton.inheritAttrs, inject = GenPagesDemoStatusSkeleton.inject, props = GenPagesDemoStatusSkeleton.props, propsNeedCastKeys = GenPagesDemoStatusSkeleton.propsNeedCastKeys, emits = GenPagesDemoStatusSkeleton.emits, components = GenPagesDemoStatusSkeleton.components, styles = GenPagesDemoStatusSkeleton.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoStatusSkeleton.setup(props as GenPagesDemoStatusSkeleton)
    }
    )
}
, fun(instance, renderer): GenPagesDemoStatusSkeleton {
    return GenPagesDemoStatusSkeleton(instance, renderer)
}
)
val GenPagesDemoStatusLoadmoreClass = CreateVueComponent(GenPagesDemoStatusLoadmore::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoStatusLoadmore.inheritAttrs, inject = GenPagesDemoStatusLoadmore.inject, props = GenPagesDemoStatusLoadmore.props, propsNeedCastKeys = GenPagesDemoStatusLoadmore.propsNeedCastKeys, emits = GenPagesDemoStatusLoadmore.emits, components = GenPagesDemoStatusLoadmore.components, styles = GenPagesDemoStatusLoadmore.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoStatusLoadmore.setup(props as GenPagesDemoStatusLoadmore)
    }
    )
}
, fun(instance, renderer): GenPagesDemoStatusLoadmore {
    return GenPagesDemoStatusLoadmore(instance, renderer)
}
)
val GenPagesDemoStatusRollingNumberClass = CreateVueComponent(GenPagesDemoStatusRollingNumber::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoStatusRollingNumber.inheritAttrs, inject = GenPagesDemoStatusRollingNumber.inject, props = GenPagesDemoStatusRollingNumber.props, propsNeedCastKeys = GenPagesDemoStatusRollingNumber.propsNeedCastKeys, emits = GenPagesDemoStatusRollingNumber.emits, components = GenPagesDemoStatusRollingNumber.components, styles = GenPagesDemoStatusRollingNumber.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoStatusRollingNumber.setup(props as GenPagesDemoStatusRollingNumber)
    }
    )
}
, fun(instance, renderer): GenPagesDemoStatusRollingNumber {
    return GenPagesDemoStatusRollingNumber(instance, renderer)
}
)
open class PassThrough54 (
    open var className: String? = null,
    open var item: PassThroughProps? = null,
    open var list: PassThroughProps? = null,
) : UTSObject()
open class GenUniModulesCoolUiComponentsClActionSheetClActionSheetSlotDataItem (
    @JsonNotNull
    open var item: ClActionSheetItem,
) : SlotData()
val GenUniModulesCoolUiComponentsClActionSheetClActionSheetClass = CreateVueComponent(GenUniModulesCoolUiComponentsClActionSheetClActionSheet::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClActionSheetClActionSheet.name, inheritAttrs = GenUniModulesCoolUiComponentsClActionSheetClActionSheet.inheritAttrs, inject = GenUniModulesCoolUiComponentsClActionSheetClActionSheet.inject, props = GenUniModulesCoolUiComponentsClActionSheetClActionSheet.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClActionSheetClActionSheet.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClActionSheetClActionSheet.emits, components = GenUniModulesCoolUiComponentsClActionSheetClActionSheet.components, styles = GenUniModulesCoolUiComponentsClActionSheetClActionSheet.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenUniModulesCoolUiComponentsClActionSheetClActionSheet.setup(props as GenUniModulesCoolUiComponentsClActionSheetClActionSheet, ctx)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClActionSheetClActionSheet {
    return GenUniModulesCoolUiComponentsClActionSheetClActionSheet(instance)
}
)
typealias ClActionSheetComponentPublicInstance = GenUniModulesCoolUiComponentsClActionSheetClActionSheet
val GenPagesDemoFeedbackActionSheetClass = CreateVueComponent(GenPagesDemoFeedbackActionSheet::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoFeedbackActionSheet.inheritAttrs, inject = GenPagesDemoFeedbackActionSheet.inject, props = GenPagesDemoFeedbackActionSheet.props, propsNeedCastKeys = GenPagesDemoFeedbackActionSheet.propsNeedCastKeys, emits = GenPagesDemoFeedbackActionSheet.emits, components = GenPagesDemoFeedbackActionSheet.components, styles = GenPagesDemoFeedbackActionSheet.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoFeedbackActionSheet.setup(props as GenPagesDemoFeedbackActionSheet)
    }
    )
}
, fun(instance, renderer): GenPagesDemoFeedbackActionSheet {
    return GenPagesDemoFeedbackActionSheet(instance, renderer)
}
)
val GenPagesDemoFeedbackPopupClass = CreateVueComponent(GenPagesDemoFeedbackPopup::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoFeedbackPopup.inheritAttrs, inject = GenPagesDemoFeedbackPopup.inject, props = GenPagesDemoFeedbackPopup.props, propsNeedCastKeys = GenPagesDemoFeedbackPopup.propsNeedCastKeys, emits = GenPagesDemoFeedbackPopup.emits, components = GenPagesDemoFeedbackPopup.components, styles = GenPagesDemoFeedbackPopup.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoFeedbackPopup.setup(props as GenPagesDemoFeedbackPopup)
    }
    )
}
, fun(instance, renderer): GenPagesDemoFeedbackPopup {
    return GenPagesDemoFeedbackPopup(instance, renderer)
}
)
val GenPagesDemoFeedbackConfirmClass = CreateVueComponent(GenPagesDemoFeedbackConfirm::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoFeedbackConfirm.inheritAttrs, inject = GenPagesDemoFeedbackConfirm.inject, props = GenPagesDemoFeedbackConfirm.props, propsNeedCastKeys = GenPagesDemoFeedbackConfirm.propsNeedCastKeys, emits = GenPagesDemoFeedbackConfirm.emits, components = GenPagesDemoFeedbackConfirm.components, styles = GenPagesDemoFeedbackConfirm.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoFeedbackConfirm.setup(props as GenPagesDemoFeedbackConfirm)
    }
    )
}
, fun(instance, renderer): GenPagesDemoFeedbackConfirm {
    return GenPagesDemoFeedbackConfirm(instance, renderer)
}
)
val GenPagesDemoFeedbackToastClass = CreateVueComponent(GenPagesDemoFeedbackToast::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoFeedbackToast.inheritAttrs, inject = GenPagesDemoFeedbackToast.inject, props = GenPagesDemoFeedbackToast.props, propsNeedCastKeys = GenPagesDemoFeedbackToast.propsNeedCastKeys, emits = GenPagesDemoFeedbackToast.emits, components = GenPagesDemoFeedbackToast.components, styles = GenPagesDemoFeedbackToast.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoFeedbackToast.setup(props as GenPagesDemoFeedbackToast)
    }
    )
}
, fun(instance, renderer): GenPagesDemoFeedbackToast {
    return GenPagesDemoFeedbackToast(instance, renderer)
}
)
open class GenerateFrameResult (
    @JsonNotNull
    open var frameBuffer: Uint8Array,
    @JsonNotNull
    open var width: Number,
) : UTSObject()
val ALIGNMENT_DELTA = _uA<Number>(0, 11, 15, 19, 23, 27, 31, 16, 18, 20, 22, 24, 26, 28, 20, 22, 24, 24, 26, 28, 28, 22, 24, 24, 26, 26, 28, 28, 24, 24, 26, 26, 26, 28, 28, 24, 26, 26, 26, 28, 28)
val ECC_BLOCKS = _uA<Number>(1, 0, 19, 7, 1, 0, 16, 10, 1, 0, 13, 13, 1, 0, 9, 17, 1, 0, 34, 10, 1, 0, 28, 16, 1, 0, 22, 22, 1, 0, 16, 28, 1, 0, 55, 15, 1, 0, 44, 26, 2, 0, 17, 18, 2, 0, 13, 22, 1, 0, 80, 20, 2, 0, 32, 18, 2, 0, 24, 26, 4, 0, 9, 16, 1, 0, 108, 26, 2, 0, 43, 24, 2, 2, 15, 18, 2, 2, 11, 22, 2, 0, 68, 18, 4, 0, 27, 16, 4, 0, 19, 24, 4, 0, 15, 28, 2, 0, 78, 20, 4, 0, 31, 18, 2, 4, 14, 18, 4, 1, 13, 26, 2, 0, 97, 24, 2, 2, 38, 22, 4, 2, 18, 22, 4, 2, 14, 26, 2, 0, 116, 30, 3, 2, 36, 22, 4, 4, 16, 20, 4, 4, 12, 24, 2, 2, 68, 18, 4, 1, 43, 26, 6, 2, 19, 24, 6, 2, 15, 28, 4, 0, 81, 20, 1, 4, 50, 30, 4, 4, 22, 28, 3, 8, 12, 24, 2, 2, 92, 24, 6, 2, 36, 22, 4, 6, 20, 26, 7, 4, 14, 28, 4, 0, 107, 26, 8, 1, 37, 22, 8, 4, 20, 24, 12, 4, 11, 22, 3, 1, 115, 30, 4, 5, 40, 24, 11, 5, 16, 20, 11, 5, 12, 24, 5, 1, 87, 22, 5, 5, 41, 24, 5, 7, 24, 30, 11, 7, 12, 24, 5, 1, 98, 24, 7, 3, 45, 28, 15, 2, 19, 24, 3, 13, 15, 30, 1, 5, 107, 28, 10, 1, 46, 28, 1, 15, 22, 28, 2, 17, 14, 28, 5, 1, 120, 30, 9, 4, 43, 26, 17, 1, 22, 28, 2, 19, 14, 28, 3, 4, 113, 28, 3, 11, 44, 26, 17, 4, 21, 26, 9, 16, 13, 26, 3, 5, 107, 28, 3, 13, 41, 26, 15, 5, 24, 30, 15, 10, 15, 28, 4, 4, 116, 28, 17, 0, 42, 26, 17, 6, 22, 28, 19, 6, 16, 30, 2, 7, 111, 28, 17, 0, 46, 28, 7, 16, 24, 30, 34, 0, 13, 24, 4, 5, 121, 30, 4, 14, 47, 28, 11, 14, 24, 30, 16, 14, 15, 30, 6, 4, 117, 30, 6, 14, 45, 28, 11, 16, 24, 30, 30, 2, 16, 30, 8, 4, 106, 26, 8, 13, 47, 28, 7, 22, 24, 30, 22, 13, 15, 30, 10, 2, 114, 28, 19, 4, 46, 28, 28, 6, 22, 28, 33, 4, 16, 30, 8, 4, 122, 30, 22, 3, 45, 28, 8, 26, 23, 30, 12, 28, 15, 30, 3, 10, 117, 30, 3, 23, 45, 28, 4, 31, 24, 30, 11, 31, 15, 30, 7, 7, 116, 30, 21, 7, 45, 28, 1, 37, 23, 30, 19, 26, 15, 30, 5, 10, 115, 30, 19, 10, 47, 28, 15, 25, 24, 30, 23, 25, 15, 30, 13, 3, 115, 30, 2, 29, 46, 28, 42, 1, 24, 30, 23, 28, 15, 30, 17, 0, 115, 30, 10, 23, 46, 28, 10, 35, 24, 30, 19, 35, 15, 30, 17, 1, 115, 30, 14, 21, 46, 28, 29, 19, 24, 30, 11, 46, 15, 30, 13, 6, 115, 30, 14, 23, 46, 28, 44, 7, 24, 30, 59, 1, 16, 30, 12, 7, 121, 30, 12, 26, 47, 28, 39, 14, 24, 30, 22, 41, 15, 30, 6, 14, 121, 30, 6, 34, 47, 28, 46, 10, 24, 30, 2, 64, 15, 30, 17, 4, 122, 30, 29, 14, 46, 28, 49, 10, 24, 30, 24, 46, 15, 30, 4, 18, 122, 30, 13, 32, 46, 28, 48, 14, 24, 30, 42, 32, 15, 30, 20, 4, 117, 30, 40, 7, 47, 28, 43, 22, 24, 30, 10, 67, 15, 30, 19, 6, 118, 30, 18, 31, 47, 28, 34, 34, 24, 30, 20, 61, 15, 30)
val ECC_LEVELS = Map<String, Number>(_uA(
    _uA(
        "L",
        1
    ),
    _uA(
        "M",
        0
    ),
    _uA(
        "Q",
        3
    ),
    _uA(
        "H",
        2
    )
))
val FINAL_FORMAT: UTSArray<Number> = _uA(
    0x77c4,
    0x72f3,
    0x7daa,
    0x789d,
    0x662f,
    0x6318,
    0x6c41,
    0x6976,
    0x5412,
    0x5125,
    0x5e7c,
    0x5b4b,
    0x45f9,
    0x40ce,
    0x4f97,
    0x4aa0,
    0x355f,
    0x3068,
    0x3f31,
    0x3a06,
    0x24b4,
    0x2183,
    0x2eda,
    0x2bed,
    0x1689,
    0x13be,
    0x1ce7,
    0x19d0,
    0x0762,
    0x0255,
    0x0d0c,
    0x083b
)
val GALOIS_EXPONENT: UTSArray<Number> = _uA(
    0x01,
    0x02,
    0x04,
    0x08,
    0x10,
    0x20,
    0x40,
    0x80,
    0x1d,
    0x3a,
    0x74,
    0xe8,
    0xcd,
    0x87,
    0x13,
    0x26,
    0x4c,
    0x98,
    0x2d,
    0x5a,
    0xb4,
    0x75,
    0xea,
    0xc9,
    0x8f,
    0x03,
    0x06,
    0x0c,
    0x18,
    0x30,
    0x60,
    0xc0,
    0x9d,
    0x27,
    0x4e,
    0x9c,
    0x25,
    0x4a,
    0x94,
    0x35,
    0x6a,
    0xd4,
    0xb5,
    0x77,
    0xee,
    0xc1,
    0x9f,
    0x23,
    0x46,
    0x8c,
    0x05,
    0x0a,
    0x14,
    0x28,
    0x50,
    0xa0,
    0x5d,
    0xba,
    0x69,
    0xd2,
    0xb9,
    0x6f,
    0xde,
    0xa1,
    0x5f,
    0xbe,
    0x61,
    0xc2,
    0x99,
    0x2f,
    0x5e,
    0xbc,
    0x65,
    0xca,
    0x89,
    0x0f,
    0x1e,
    0x3c,
    0x78,
    0xf0,
    0xfd,
    0xe7,
    0xd3,
    0xbb,
    0x6b,
    0xd6,
    0xb1,
    0x7f,
    0xfe,
    0xe1,
    0xdf,
    0xa3,
    0x5b,
    0xb6,
    0x71,
    0xe2,
    0xd9,
    0xaf,
    0x43,
    0x86,
    0x11,
    0x22,
    0x44,
    0x88,
    0x0d,
    0x1a,
    0x34,
    0x68,
    0xd0,
    0xbd,
    0x67,
    0xce,
    0x81,
    0x1f,
    0x3e,
    0x7c,
    0xf8,
    0xed,
    0xc7,
    0x93,
    0x3b,
    0x76,
    0xec,
    0xc5,
    0x97,
    0x33,
    0x66,
    0xcc,
    0x85,
    0x17,
    0x2e,
    0x5c,
    0xb8,
    0x6d,
    0xda,
    0xa9,
    0x4f,
    0x9e,
    0x21,
    0x42,
    0x84,
    0x15,
    0x2a,
    0x54,
    0xa8,
    0x4d,
    0x9a,
    0x29,
    0x52,
    0xa4,
    0x55,
    0xaa,
    0x49,
    0x92,
    0x39,
    0x72,
    0xe4,
    0xd5,
    0xb7,
    0x73,
    0xe6,
    0xd1,
    0xbf,
    0x63,
    0xc6,
    0x91,
    0x3f,
    0x7e,
    0xfc,
    0xe5,
    0xd7,
    0xb3,
    0x7b,
    0xf6,
    0xf1,
    0xff,
    0xe3,
    0xdb,
    0xab,
    0x4b,
    0x96,
    0x31,
    0x62,
    0xc4,
    0x95,
    0x37,
    0x6e,
    0xdc,
    0xa5,
    0x57,
    0xae,
    0x41,
    0x82,
    0x19,
    0x32,
    0x64,
    0xc8,
    0x8d,
    0x07,
    0x0e,
    0x1c,
    0x38,
    0x70,
    0xe0,
    0xdd,
    0xa7,
    0x53,
    0xa6,
    0x51,
    0xa2,
    0x59,
    0xb2,
    0x79,
    0xf2,
    0xf9,
    0xef,
    0xc3,
    0x9b,
    0x2b,
    0x56,
    0xac,
    0x45,
    0x8a,
    0x09,
    0x12,
    0x24,
    0x48,
    0x90,
    0x3d,
    0x7a,
    0xf4,
    0xf5,
    0xf7,
    0xf3,
    0xfb,
    0xeb,
    0xcb,
    0x8b,
    0x0b,
    0x16,
    0x2c,
    0x58,
    0xb0,
    0x7d,
    0xfa,
    0xe9,
    0xcf,
    0x83,
    0x1b,
    0x36,
    0x6c,
    0xd8,
    0xad,
    0x47,
    0x8e,
    0x00
)
val GALOIS_LOG: UTSArray<Number> = _uA(
    0xff,
    0x00,
    0x01,
    0x19,
    0x02,
    0x32,
    0x1a,
    0xc6,
    0x03,
    0xdf,
    0x33,
    0xee,
    0x1b,
    0x68,
    0xc7,
    0x4b,
    0x04,
    0x64,
    0xe0,
    0x0e,
    0x34,
    0x8d,
    0xef,
    0x81,
    0x1c,
    0xc1,
    0x69,
    0xf8,
    0xc8,
    0x08,
    0x4c,
    0x71,
    0x05,
    0x8a,
    0x65,
    0x2f,
    0xe1,
    0x24,
    0x0f,
    0x21,
    0x35,
    0x93,
    0x8e,
    0xda,
    0xf0,
    0x12,
    0x82,
    0x45,
    0x1d,
    0xb5,
    0xc2,
    0x7d,
    0x6a,
    0x27,
    0xf9,
    0xb9,
    0xc9,
    0x9a,
    0x09,
    0x78,
    0x4d,
    0xe4,
    0x72,
    0xa6,
    0x06,
    0xbf,
    0x8b,
    0x62,
    0x66,
    0xdd,
    0x30,
    0xfd,
    0xe2,
    0x98,
    0x25,
    0xb3,
    0x10,
    0x91,
    0x22,
    0x88,
    0x36,
    0xd0,
    0x94,
    0xce,
    0x8f,
    0x96,
    0xdb,
    0xbd,
    0xf1,
    0xd2,
    0x13,
    0x5c,
    0x83,
    0x38,
    0x46,
    0x40,
    0x1e,
    0x42,
    0xb6,
    0xa3,
    0xc3,
    0x48,
    0x7e,
    0x6e,
    0x6b,
    0x3a,
    0x28,
    0x54,
    0xfa,
    0x85,
    0xba,
    0x3d,
    0xca,
    0x5e,
    0x9b,
    0x9f,
    0x0a,
    0x15,
    0x79,
    0x2b,
    0x4e,
    0xd4,
    0xe5,
    0xac,
    0x73,
    0xf3,
    0xa7,
    0x57,
    0x07,
    0x70,
    0xc0,
    0xf7,
    0x8c,
    0x80,
    0x63,
    0x0d,
    0x67,
    0x4a,
    0xde,
    0xed,
    0x31,
    0xc5,
    0xfe,
    0x18,
    0xe3,
    0xa5,
    0x99,
    0x77,
    0x26,
    0xb8,
    0xb4,
    0x7c,
    0x11,
    0x44,
    0x92,
    0xd9,
    0x23,
    0x20,
    0x89,
    0x2e,
    0x37,
    0x3f,
    0xd1,
    0x5b,
    0x95,
    0xbc,
    0xcf,
    0xcd,
    0x90,
    0x87,
    0x97,
    0xb2,
    0xdc,
    0xfc,
    0xbe,
    0x61,
    0xf2,
    0x56,
    0xd3,
    0xab,
    0x14,
    0x2a,
    0x5d,
    0x9e,
    0x84,
    0x3c,
    0x39,
    0x53,
    0x47,
    0x6d,
    0x41,
    0xa2,
    0x1f,
    0x2d,
    0x43,
    0xd8,
    0xb7,
    0x7b,
    0xa4,
    0x76,
    0xc4,
    0x17,
    0x49,
    0xec,
    0x7f,
    0x0c,
    0x6f,
    0xf6,
    0x6c,
    0xa1,
    0x3b,
    0x52,
    0x29,
    0x9d,
    0x55,
    0xaa,
    0xfb,
    0x60,
    0x86,
    0xb1,
    0xbb,
    0xcc,
    0x3e,
    0x5a,
    0xcb,
    0x59,
    0x5f,
    0xb0,
    0x9c,
    0xa9,
    0xa0,
    0x51,
    0x0b,
    0xf5,
    0x16,
    0xeb,
    0x7a,
    0x75,
    0x2c,
    0xd7,
    0x4f,
    0xae,
    0xd5,
    0xe9,
    0xe6,
    0xe7,
    0xad,
    0xe8,
    0x74,
    0xd6,
    0xf4,
    0xea,
    0xa8,
    0x50,
    0x58,
    0xaf
)
val N1: Number = 3
val N2: Number = 3
val N3: Number = 40
val N4: Number = 10
val VERSION_BLOCK: UTSArray<Number> = _uA(
    0xc94,
    0x5bc,
    0xa99,
    0x4d3,
    0xbf6,
    0x762,
    0x847,
    0x60d,
    0x928,
    0xb78,
    0x45d,
    0xa17,
    0x532,
    0x9a6,
    0x683,
    0x8c9,
    0x7ec,
    0xec4,
    0x1e1,
    0xfab,
    0x08e,
    0xc1a,
    0x33f,
    0xd75,
    0x250,
    0x9d5,
    0x6f0,
    0x8ba,
    0x79f,
    0xb0b,
    0x42e,
    0xa64,
    0x541,
    0xc69
)
fun generateFrame(_str: String? = null, ecc: String? = null): GenerateFrameResult {
    var i: Number
    var t: Number
    var j: Number
    var k: Number
    var m: Number
    var v: Number
    var x: Number
    var y: Number
    var version: Number
    var str = if (_str == null) {
        ""
    } else {
        _str
    }
    var width: Number = 0
    var eccLevel = ECC_LEVELS.get(if (ecc == null) {
        "L"
    } else {
        ecc
    }
    )!!
    var dataBlock: Number
    var eccBlock: Number
    var neccBlock1: Number
    var neccBlock2: Number
    var eccBuffer: Uint8Array
    var frameBuffer = Uint8Array(0)
    var frameMask = Uint8Array(0)
    var polynomial = Uint8Array(0)
    var stringBuffer = Uint8Array(0)
    fun setMask(_x: Number, _y: Number) {
        var bit: Number
        var x = _x
        var y = _y
        if (x > y) {
            bit = x
            x = y
            y = bit
        }
        bit = y
        bit *= y
        bit += y
        bit = bit shr 1
        bit += x
        frameMask[bit] = 1
    }
    fun addAlignment(_x: Number, _y: Number) {
        var i: Number
        var x = _x
        var y = _y
        frameBuffer[x + width * y] = 1
        run {
            i = -2
            while(i < 2){
                frameBuffer[x + i + width * (y - 2)] = 1
                frameBuffer[x - 2 + width * (y + i + 1)] = 1
                frameBuffer[x + 2 + width * (y + i)] = 1
                frameBuffer[x + i + 1 + width * (y + 2)] = 1
                i++
            }
        }
        run {
            i = 0
            while(i < 2){
                setMask(x - 1, y + i)
                setMask(x + 1, y - i)
                setMask(x - i, y - 1)
                setMask(x + i, y + 1)
                i++
            }
        }
        run {
            i = 2
            while(i < 4){
                frameBuffer[x + i + width * (y - 2)] = 1
                frameBuffer[x - 2 + width * (y + i - 1)] = 1
                frameBuffer[x + 2 + width * (y + i - 2)] = 1
                frameBuffer[x - 1 + width * (y + i - 2)] = 1
                i++
            }
        }
    }
    fun modN(_x: Number): Number {
        var x = _x
        while(x >= 255){
            x -= 255
            x = (x shr 8) + (x and 255)
        }
        return x
    }
    fun appendData(_data: Number, _dataLength: Number, _ecc: Number, _eccLength: Number) {
        var bit: Number
        var i: Number
        var j: Number
        var data = _data
        var dataLength = _dataLength
        var ecc = _ecc
        var eccLength = _eccLength
        run {
            i = 0
            while(i < eccLength){
                stringBuffer[ecc + i] = 0
                i++
            }
        }
        run {
            i = 0
            while(i < dataLength){
                bit = GALOIS_LOG[stringBuffer[data + i] xor stringBuffer[ecc]]
                if (bit != 255) {
                    run {
                        j = 1
                        while(j < eccLength){
                            stringBuffer[ecc + j - 1] = stringBuffer[ecc + j] xor GALOIS_EXPONENT[modN(bit + polynomial[eccLength - j])]
                            j++
                        }
                    }
                } else {
                    run {
                        j = ecc
                        while(j < ecc + eccLength){
                            stringBuffer[j] = stringBuffer[j + 1]
                            j++
                        }
                    }
                }
                stringBuffer[ecc + eccLength - 1] = if (bit == 255) {
                    0
                } else {
                    GALOIS_EXPONENT[modN(bit + polynomial[0])]
                }
                i++
            }
        }
    }
    fun isMasked(_x: Number, _y: Number): Boolean {
        var bit: Number
        var x = _x
        var y = _y
        if (x > y) {
            bit = x
            x = y
            y = bit
        }
        bit = y
        bit += y * y
        bit = bit shr 1
        bit += x
        return frameMask[bit] == 1
    }
    fun applyMask(mask: Number) {
        run {
            var y: Number = 0
            while(y < width){
                run {
                    var x: Number = 0
                    while(x < width){
                        if (!isMasked(x, y)) {
                            var shouldInvert = false
                            when (mask) {
                                0 -> 
                                    shouldInvert = (x + y) % 2 == 0
                                1 -> 
                                    shouldInvert = y % 2 == 0
                                2 -> 
                                    shouldInvert = x % 3 == 0
                                3 -> 
                                    shouldInvert = (x + y) % 3 == 0
                                4 -> 
                                    shouldInvert = (Math.floor(y / 2) + Math.floor(x / 3)) % 2 == 0
                                5 -> 
                                    shouldInvert = ((x * y) % 2) + ((x * y) % 3) == 0
                                6 -> 
                                    shouldInvert = (((x * y) % 2) + ((x * y) % 3)) % 2 == 0
                                7 -> 
                                    shouldInvert = (((x + y) % 2) + ((x * y) % 3)) % 2 == 0
                            }
                            if (shouldInvert) {
                                frameBuffer[x + y * width] = frameBuffer[x + y * width] xor 1
                            }
                        }
                        x++
                    }
                }
                y++
            }
        }
    }
    fun getBadRuns(runLengths: UTSArray<Number>, length: Number): Number {
        var badRuns: Number = 0
        var i: Number
        run {
            i = 0
            while(i <= length){
                if (i < runLengths.length && runLengths[i] >= 5) {
                    badRuns += N1 + runLengths[i] - 5
                }
                i++
            }
        }
        run {
            i = 3
            while(i < length - 1){
                if (i + 2 >= runLengths.length || i - 3 < 0) {
                    i += 2
                    continue
                }
                if (runLengths[i - 2] == runLengths[i + 2] && runLengths[i + 2] == runLengths[i - 1] && runLengths[i - 1] == runLengths[i + 1] && runLengths[i - 1] * 3 == runLengths[i] && (runLengths[i - 3] == 0 || i + 3 > length || runLengths[i - 3] * 3 >= runLengths[i] * 4 || runLengths[i + 3] * 3 >= runLengths[i] * 4)) {
                    badRuns += N3
                }
                i += 2
            }
        }
        return badRuns
    }
    fun checkBadness(): Number {
        var b: Number
        var b1: Number
        var bad: Number = 0
        var big: Number
        var bw: Number = 0
        var count: Number = 0
        var h: Number
        var x: Number
        var y: Number
        var badBuffer = UTSArray<Number>(width)
        run {
            y = 0
            while(y < width - 1){
                run {
                    x = 0
                    while(x < width - 1){
                        if ((frameBuffer[x + width * y] == 1 && frameBuffer[x + 1 + width * y] == 1 && frameBuffer[x + width * (y + 1)] == 1 && frameBuffer[x + 1 + width * (y + 1)] == 1) || (frameBuffer[x + width * y] == 0 && frameBuffer[x + 1 + width * y] == 0 && frameBuffer[x + width * (y + 1)] == 0 && frameBuffer[x + 1 + width * (y + 1)] == 0)) {
                            bad += N2
                        }
                        x++
                    }
                }
                y++
            }
        }
        run {
            y = 0
            while(y < width){
                h = 0
                badBuffer[h] = 0
                b = 0
                run {
                    x = 0
                    while(x < width){
                        b1 = frameBuffer[x + width * y]
                        if (b1 == b) {
                            if (h < badBuffer.length) {
                                badBuffer[h]++
                            }
                        } else {
                            h++
                            if (h < badBuffer.length) {
                                badBuffer[h] = 1
                            }
                        }
                        b = b1
                        bw += if (b > 0) {
                            1
                        } else {
                            -1
                        }
                        x++
                    }
                }
                bad += getBadRuns(badBuffer, h)
                y++
            }
        }
        if (bw < 0) {
            bw = -bw
        }
        big = bw
        big += big shl 2
        big = big shl 1
        while(big > width * width){
            big -= width * width
            count++
        }
        bad += count * N4
        run {
            x = 0
            while(x < width){
                h = 0
                badBuffer[h] = 0
                b = 0
                run {
                    y = 0
                    while(y < width){
                        b1 = frameBuffer[x + width * y]
                        if (b1 == b) {
                            if (h < badBuffer.length) {
                                badBuffer[h]++
                            }
                        } else {
                            h++
                            if (h < badBuffer.length) {
                                badBuffer[h] = 1
                            }
                        }
                        b = b1
                        y++
                    }
                }
                bad += getBadRuns(badBuffer, h)
                x++
            }
        }
        return bad
    }
    fun toUtf8(str: String): String {
        var out = ""
        var i: Number
        var len: Number
        var c: Number
        len = str.length
        run {
            i = 0
            while(i < len){
                c = str.charCodeAt(i)!!
                if (c >= 0x0001 && c <= 0x007f) {
                    out += str.charAt(i)
                } else if (c > 0x07ff) {
                    out += String.fromCharCode(0xe0 or ((c shr 12) and 0x0f))
                    out += String.fromCharCode(0x80 or ((c shr 6) and 0x3f))
                    out += String.fromCharCode(0x80 or ((c shr 0) and 0x3f))
                } else {
                    out += String.fromCharCode(0xc0 or ((c shr 6) and 0x1f))
                    out += String.fromCharCode(0x80 or ((c shr 0) and 0x3f))
                }
                i++
            }
        }
        return out
    }
    str = toUtf8(str)
    t = str.length
    version = 0
    do {
        version++
        k = (eccLevel - 1) * 4 + (version - 1) * 16
        neccBlock1 = ECC_BLOCKS[k++]
        neccBlock2 = ECC_BLOCKS[k++]
        dataBlock = ECC_BLOCKS[k++]
        eccBlock = ECC_BLOCKS[k]
        k = dataBlock * (neccBlock1 + neccBlock2) + neccBlock2 - 3 + (if (version <= 9) {
            1
        } else {
            0
        }
        )
        if (t <= k) {
            break
        }
    }
    while (version < 40)
    width = 17 + 4 * version
    v = dataBlock + (dataBlock + eccBlock) * (neccBlock1 + neccBlock2) + neccBlock2
    eccBuffer = Uint8Array(v)
    stringBuffer = Uint8Array(v)
    frameBuffer = Uint8Array(width * width)
    frameMask = Uint8Array(Math.floor((width * (width + 1) + 1) / 2))
    run {
        t = 0
        while(t < 3){
            k = 0
            y = 0
            if (t == 1) {
                k = width - 7
            }
            if (t == 2) {
                y = width - 7
            }
            frameBuffer[y + 3 + width * (k + 3)] = 1
            run {
                x = 0
                while(x < 6){
                    frameBuffer[y + x + width * k] = 1
                    frameBuffer[y + width * (k + x + 1)] = 1
                    frameBuffer[y + 6 + width * (k + x)] = 1
                    frameBuffer[y + x + 1 + width * (k + 6)] = 1
                    x++
                }
            }
            run {
                x = 1
                while(x < 5){
                    setMask(y + x, k + 1)
                    setMask(y + 1, k + x + 1)
                    setMask(y + 5, k + x)
                    setMask(y + x + 1, k + 5)
                    x++
                }
            }
            run {
                x = 2
                while(x < 4){
                    frameBuffer[y + x + width * (k + 2)] = 1
                    frameBuffer[y + 2 + width * (k + x + 1)] = 1
                    frameBuffer[y + 4 + width * (k + x)] = 1
                    frameBuffer[y + x + 1 + width * (k + 4)] = 1
                    x++
                }
            }
            t++
        }
    }
    if (version > 1) {
        t = ALIGNMENT_DELTA[version]
        y = width - 7
        while(true){
            x = width - 7
            while(x > t - 3){
                addAlignment(x, y)
                if (x < t) {
                    break
                }
                x -= t
            }
            if (y <= t + 9) {
                break
            }
            y -= t
            addAlignment(6, y)
            addAlignment(y, 6)
        }
    }
    frameBuffer[8 + width * (width - 8)] = 1
    run {
        y = 0
        while(y < 7){
            setMask(7, y)
            setMask(width - 8, y)
            setMask(7, y + width - 7)
            y++
        }
    }
    run {
        x = 0
        while(x < 8){
            setMask(x, 7)
            setMask(x + width - 8, 7)
            setMask(x, width - 8)
            x++
        }
    }
    run {
        x = 0
        while(x < 9){
            setMask(x, 8)
            x++
        }
    }
    run {
        x = 0
        while(x < 8){
            setMask(x + width - 8, 8)
            setMask(8, x)
            x++
        }
    }
    run {
        y = 0
        while(y < 7){
            setMask(8, y + width - 7)
            y++
        }
    }
    run {
        x = 0
        while(x < width - 14){
            if ((x and 1) > 0) {
                setMask(8 + x, 6)
                setMask(6, 8 + x)
            } else {
                frameBuffer[8 + x + width * 6] = 1
                frameBuffer[6 + width * (8 + x)] = 1
            }
            x++
        }
    }
    if (version > 6) {
        t = VERSION_BLOCK[version - 7]
        k = 17
        run {
            x = 0
            while(x < 6){
                run {
                    y = 0
                    while(y < 3){
                        if ((1 and (if (k > 11) {
                            version shr (k - 12)
                        } else {
                            t shr k
                        }
                        )) > 0) {
                            frameBuffer[5 - x + width * (2 - y + width - 11)] = 1
                            frameBuffer[2 - y + width - 11 + width * (5 - x)] = 1
                        } else {
                            setMask(5 - x, 2 - y + width - 11)
                            setMask(2 - y + width - 11, 5 - x)
                        }
                        k--
                        y++
                    }
                }
                x++
            }
        }
    }
    run {
        y = 0
        while(y < width){
            run {
                x = 0
                while(x <= y){
                    if (frameBuffer[x + width * y] > 0) {
                        setMask(x, y)
                    }
                    x++
                }
            }
            y++
        }
    }
    v = str.length
    run {
        i = 0
        while(i < v){
            eccBuffer[i.toInt()] = str.charCodeAt(i)!!
            i++
        }
    }
    stringBuffer.set(eccBuffer.subarray(0, v))
    x = dataBlock * (neccBlock1 + neccBlock2) + neccBlock2
    if (v >= x - 2) {
        v = x - 2
        if (version > 9) {
            v--
        }
    }
    i = v
    if (version > 9) {
        stringBuffer[i + 2] = 0
        stringBuffer[i + 3] = 0
        while(i-- > 0){
            t = stringBuffer[i]
            stringBuffer[i + 3] = stringBuffer[i + 3] or (255 and (t shl 4))
            stringBuffer[i + 2] = t shr 4
        }
        stringBuffer[2] = stringBuffer[2] or (255 and (v shl 4))
        stringBuffer[1] = v shr 4
        stringBuffer[0] = 0x40 or (v shr 12)
    } else {
        stringBuffer[i + 1] = 0
        stringBuffer[i + 2] = 0
        while(i-- > 0){
            t = stringBuffer[i]
            stringBuffer[i + 2] = stringBuffer[i + 2] or (255 and (t shl 4))
            stringBuffer[i + 1] = t shr 4
        }
        stringBuffer[1] = stringBuffer[1] or (255 and (v shl 4))
        stringBuffer[0] = 0x40 or (v shr 4)
    }
    i = v + 3 - (if (version < 10) {
        1
    } else {
        0
    }
    )
    while(i < x){
        stringBuffer[i++] = 0xec
        stringBuffer[i++] = 0x11
    }
    polynomial = Uint8Array(eccBlock + 1)
    polynomial[0] = 1
    run {
        i = 0
        while(i < eccBlock){
            polynomial[i + 1] = 1
            run {
                j = i
                while(j > 0){
                    polynomial[j] = if (polynomial[j] > 0) {
                        polynomial[j - 1] xor GALOIS_EXPONENT[modN(GALOIS_LOG[polynomial[j]] + i)]
                    } else {
                        polynomial[j - 1]
                    }
                    j--
                }
            }
            polynomial[0] = GALOIS_EXPONENT[modN(GALOIS_LOG[polynomial[0]] + i)]
            i++
        }
    }
    run {
        i = 0
        while(i < eccBlock){
            polynomial[i] = GALOIS_LOG[polynomial[i]]
            i++
        }
    }
    k = x
    y = 0
    run {
        i = 0
        while(i < neccBlock1){
            appendData(y, dataBlock, k, eccBlock)
            y += dataBlock
            k += eccBlock
            i++
        }
    }
    run {
        i = 0
        while(i < neccBlock2){
            appendData(y, dataBlock + 1, k, eccBlock)
            y += dataBlock + 1
            k += eccBlock
            i++
        }
    }
    y = 0
    run {
        i = 0
        while(i < dataBlock){
            run {
                j = 0
                while(j < neccBlock1){
                    eccBuffer[y++] = stringBuffer[i + j * dataBlock]
                    j++
                }
            }
            run {
                j = 0
                while(j < neccBlock2){
                    eccBuffer[y++] = stringBuffer[neccBlock1 * dataBlock + i + j * (dataBlock + 1)]
                    j++
                }
            }
            i++
        }
    }
    run {
        j = 0
        while(j < neccBlock2){
            eccBuffer[y++] = stringBuffer[neccBlock1 * dataBlock + i + j * (dataBlock + 1)]
            j++
        }
    }
    run {
        i = 0
        while(i < eccBlock){
            run {
                j = 0
                while(j < neccBlock1 + neccBlock2){
                    eccBuffer[y++] = stringBuffer[x + i + j * eccBlock]
                    j++
                }
            }
            i++
        }
    }
    stringBuffer.set(eccBuffer)
    x = width - 1
    y = width - 1
    k = 1
    v = 1
    m = (dataBlock + eccBlock) * (neccBlock1 + neccBlock2) + neccBlock2
    run {
        i = 0
        while(i < m){
            t = stringBuffer[i]
            run {
                j = 0
                while(j < 8){
                    if ((0x80 and t) > 0) {
                        frameBuffer[x + width * y] = 1
                    }
                    do {
                        if (v > 0) {
                            x--
                        } else {
                            x++
                            if (k > 0) {
                                if (y != 0) {
                                    y--
                                } else {
                                    x -= 2
                                    k = if (k == 0) {
                                        1
                                    } else {
                                        0
                                    }
                                    if (x == 6) {
                                        x--
                                        y = 9
                                    }
                                }
                            } else {
                                if (y != width - 1) {
                                    y++
                                } else {
                                    x -= 2
                                    k = if (k == 0) {
                                        1
                                    } else {
                                        0
                                    }
                                    if (x == 6) {
                                        x--
                                        y -= 8
                                    }
                                }
                            }
                        }
                        v = if (v == 0) {
                            1
                        } else {
                            0
                        }
                    }
                    while (isMasked(x, y))
                    t = t shl 1
                    j++
                }
            }
            i++
        }
    }
    val frameBufferCopy = frameBuffer.slice(0)
    t = 0
    y = 30000
    run {
        k = 0
        while(k < 8){
            applyMask(k)
            x = checkBadness()
            if (x < y) {
                y = x
                t = k
            }
            if (t == 7) {
                break
            }
            frameBuffer.set(frameBufferCopy)
            k++
        }
    }
    if (t != k) {
        frameBuffer.set(frameBufferCopy)
        applyMask(t)
    }
    y = FINAL_FORMAT[t + ((eccLevel - 1) shl 3)]
    run {
        k = 0
        while(k < 8){
            if ((y and 1) > 0) {
                frameBuffer[width - 1 - k + width * 8] = 1
                if (k < 6) {
                    frameBuffer[8 + width * k] = 1
                } else {
                    frameBuffer[8 + width * (k + 1)] = 1
                }
            }
            y = y shr 1
            k++
        }
    }
    run {
        k = 0
        while(k < 7){
            if ((y and 1) > 0) {
                frameBuffer[8 + width * (width - 7 + k)] = 1
                if (k > 0) {
                    frameBuffer[6 - k + width * 8] = 1
                } else {
                    frameBuffer[7 + width * 8] = 1
                }
            }
            y = y shr 1
            k++
        }
    }
    return GenerateFrameResult(frameBuffer = frameBuffer, width = width)
}
open class QrcodeOptions (
    @JsonNotNull
    open var ecc: String,
    @JsonNotNull
    open var text: String,
    @JsonNotNull
    open var size: Number,
    @JsonNotNull
    open var foreground: String,
    @JsonNotNull
    open var background: String,
    @JsonNotNull
    open var padding: Number,
    @JsonNotNull
    open var logo: String,
    @JsonNotNull
    open var logoSize: Number,
    @JsonNotNull
    open var mode: ClQrcodeMode,
    open var pdColor: String? = null,
    @JsonNotNull
    open var pdRadius: Number,
) : UTSObject()
fun getRatio(): Number {
    return uni_getWindowInfo().pixelRatio
}
fun drawRoundedRect(ctx: CanvasRenderingContext2D, x: Number, y: Number, width: Number, height: Number, radius: Number) {
    if (radius <= 0) {
        ctx.fillRect(x, y, width, height)
        return
    }
    val maxRadius = Math.min(width, height) / 2
    val r = Math.min(radius, maxRadius)
    ctx.beginPath()
    ctx.moveTo(x + r, y)
    ctx.lineTo(x + width - r, y)
    ctx.arcTo(x + width, y, x + width, y + r, r)
    ctx.lineTo(x + width, y + height - r)
    ctx.arcTo(x + width, y + height, x + width - r, y + height, r)
    ctx.lineTo(x + r, y + height)
    ctx.arcTo(x, y + height, x, y + height - r, r)
    ctx.lineTo(x, y + r)
    ctx.arcTo(x, y, x + r, y, r)
    ctx.closePath()
    ctx.fill()
}
fun drawPositionPattern(ctx: CanvasRenderingContext2D, startX: Number, startY: Number, px: Number, pdColor: String, background: String, radius: Number) {
    val patternSize = px * 7
    ctx.fillStyle = pdColor
    drawRoundedRect(ctx, startX, startY, patternSize, patternSize, radius)
    ctx.fillStyle = background
    val innerStartX = startX + px
    val innerStartY = startY + px
    val innerSize = px * 5
    val innerRadius = Math.max(0, radius - px)
    drawRoundedRect(ctx, innerStartX, innerStartY, innerSize, innerSize, innerRadius)
    ctx.fillStyle = pdColor
    val centerStartX = startX + px * 2
    val centerStartY = startY + px * 2
    val centerSize = px * 3
    val centerRadius = Math.max(0, radius - px * 2)
    drawRoundedRect(ctx, centerStartX, centerStartY, centerSize, centerSize, centerRadius)
}
fun drawQrcode(context: CanvasContext, options: QrcodeOptions) {
    val ctx = context.getContext("2d")!!
    if (isNull(ctx)) {
        return
    }
    val ratio = getRatio()
    val c1 = ctx.canvas
    ctx.clearRect(0, 0, c1.offsetWidth, c1.offsetHeight)
    c1.width = c1.offsetWidth * ratio
    c1.height = c1.offsetHeight * ratio
    ctx.reset()
    ctx.scale(ratio, ratio)
    val frame = generateFrame(options.text, options.ecc)
    val points = frame.frameBuffer
    val width = frame.width
    val contentSize = options.size - options.padding * 2
    val px = contentSize / width
    val offsetX = options.padding
    val offsetY = options.padding
    ctx.fillStyle = options.background
    ctx.fillRect(0, 0, options.size, options.size)
    fun isPositionDetectionPattern(i: Number, j: Number, width: Number): Boolean {
        if (i < 7 && j < 7) {
            return true
        }
        if (i > width - 8 && j < 7) {
            return true
        }
        if (i < 7 && j > width - 8) {
            return true
        }
        return false
    }
    fun isInLogoArea(i: Number, j: Number, width: Number, logoSize: Number, px: Number): Boolean {
        if (logoSize <= 0) {
            return false
        }
        val logoPoints = Math.ceil(logoSize / px)
        val buffer: Number = 1
        val totalLogoPoints = logoPoints + buffer * 2
        val centerI = Math.floor(width / 2)
        val centerJ = Math.floor(width / 2)
        val halfSize = Math.floor(totalLogoPoints / 2)
        val minI = centerI - halfSize
        val maxI = centerI + halfSize
        val minJ = centerJ - halfSize
        val maxJ = centerJ + halfSize
        return i >= minI && i <= maxI && j >= minJ && j <= maxJ
    }
    val pdColor = options.pdColor ?: options.foreground
    val radius = options.pdRadius
    drawPositionPattern(ctx, offsetX, offsetY, px, pdColor, options.background, radius)
    drawPositionPattern(ctx, offsetX + (width - 7) * px, offsetY, px, pdColor, options.background, radius)
    drawPositionPattern(ctx, offsetX, offsetY + (width - 7) * px, px, pdColor, options.background, radius)
    val dot = px * 0.1
    run {
        var i: Number = 0
        while(i < width){
            run {
                var j: Number = 0
                while(j < width){
                    if (points[j * width + i] > 0) {
                        if (isPositionDetectionPattern(i, j, width)) {
                            j++
                            continue
                        }
                        if (options.logo != "" && isInLogoArea(i, j, width, options.logoSize, px)) {
                            j++
                            continue
                        }
                        ctx.fillStyle = options.foreground
                        val x = offsetX + px * i
                        val y = offsetY + px * j
                        when (options.mode) {
                            "line" -> 
                                ctx.fillRect(x, y, px, px / 2)
                            "circular" -> 
                                {
                                    ctx.beginPath()
                                    val rx = x + px / 2 - dot
                                    val ry = y + px / 2 - dot
                                    ctx.arc(rx, ry, px / 2 - dot, 0, 2 * Math.PI)
                                    ctx.fill()
                                    ctx.closePath()
                                }
                            "rectSmall" -> 
                                ctx.fillRect(x + dot, y + dot, px - dot * 2, px - dot * 2)
                            else -> 
                                ctx.fillRect(x, y, px, px)
                        }
                    }
                    j++
                }
            }
            i++
        }
    }
    if (options.logo != "") {
        var img: Image
        img = Image(options.logoSize, options.logoSize)
        img.src = options.logo
        img.onload = fun(){
            drawLogo(ctx, options, img)
        }
    }
}
fun drawLogo(ctx: CanvasRenderingContext2D, options: QrcodeOptions, img: Image) {
    ctx.save()
    val contentSize = options.size - options.padding * 2
    val contentCenterX = options.padding + contentSize / 2
    val contentCenterY = options.padding + contentSize / 2
    val backgroundPadding: Number = 6
    val backgroundSize = options.logoSize + backgroundPadding * 2
    ctx.fillStyle = "#fff"
    val backgroundX = contentCenterX - backgroundSize / 2
    val backgroundY = contentCenterY - backgroundSize / 2
    ctx.fillRect(backgroundX, backgroundY, backgroundSize, backgroundSize)
    uni_getImageInfo(GetImageInfoOptions(src = options.logo, success = fun(imgInfo){
        val logoX = contentCenterX - options.logoSize / 2
        val logoY = contentCenterY - options.logoSize / 2
        ctx.drawImage(img, logoX + 3, logoY + 3, options.logoSize - 6, options.logoSize - 6)
        ctx.restore()
    }
    , fail = fun(err) {
        console.error(err)
    }
    ))
}
val GenUniModulesCoolUiComponentsClQrcodeClQrcodeClass = CreateVueComponent(GenUniModulesCoolUiComponentsClQrcodeClQrcode::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClQrcodeClQrcode.name, inheritAttrs = GenUniModulesCoolUiComponentsClQrcodeClQrcode.inheritAttrs, inject = GenUniModulesCoolUiComponentsClQrcodeClQrcode.inject, props = GenUniModulesCoolUiComponentsClQrcodeClQrcode.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClQrcodeClQrcode.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClQrcodeClQrcode.emits, components = GenUniModulesCoolUiComponentsClQrcodeClQrcode.components, styles = GenUniModulesCoolUiComponentsClQrcodeClQrcode.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenUniModulesCoolUiComponentsClQrcodeClQrcode.setup(props as GenUniModulesCoolUiComponentsClQrcodeClQrcode, ctx)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClQrcodeClQrcode {
    return GenUniModulesCoolUiComponentsClQrcodeClQrcode(instance)
}
)
typealias ClQrcodeComponentPublicInstance = GenUniModulesCoolUiComponentsClQrcodeClQrcode
val GenPagesDemoOtherQrcodeClass = CreateVueComponent(GenPagesDemoOtherQrcode::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoOtherQrcode.inheritAttrs, inject = GenPagesDemoOtherQrcode.inject, props = GenPagesDemoOtherQrcode.props, propsNeedCastKeys = GenPagesDemoOtherQrcode.propsNeedCastKeys, emits = GenPagesDemoOtherQrcode.emits, components = GenPagesDemoOtherQrcode.components, styles = GenPagesDemoOtherQrcode.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoOtherQrcode.setup(props as GenPagesDemoOtherQrcode)
    }
    )
}
, fun(instance, renderer): GenPagesDemoOtherQrcode {
    return GenPagesDemoOtherQrcode(instance, renderer)
}
)
open class Point (
    @JsonNotNull
    open var x: Number,
    @JsonNotNull
    open var y: Number,
    @JsonNotNull
    open var time: Number,
) : UTSObject()
open class Rect2 (
    @JsonNotNull
    open var left: Number,
    @JsonNotNull
    open var top: Number,
) : UTSObject()
open class PassThrough55 (
    open var className: String? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClSignClSignClass = CreateVueComponent(GenUniModulesCoolUiComponentsClSignClSign::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClSignClSign.name, inheritAttrs = GenUniModulesCoolUiComponentsClSignClSign.inheritAttrs, inject = GenUniModulesCoolUiComponentsClSignClSign.inject, props = GenUniModulesCoolUiComponentsClSignClSign.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClSignClSign.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClSignClSign.emits, components = GenUniModulesCoolUiComponentsClSignClSign.components, styles = GenUniModulesCoolUiComponentsClSignClSign.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenUniModulesCoolUiComponentsClSignClSign.setup(props as GenUniModulesCoolUiComponentsClSignClSign, ctx)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClSignClSign {
    return GenUniModulesCoolUiComponentsClSignClSign(instance)
}
)
typealias ClSignComponentPublicInstance = GenUniModulesCoolUiComponentsClSignClSign
val GenPagesDemoOtherSignClass = CreateVueComponent(GenPagesDemoOtherSign::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoOtherSign.inheritAttrs, inject = GenPagesDemoOtherSign.inject, props = GenPagesDemoOtherSign.props, propsNeedCastKeys = GenPagesDemoOtherSign.propsNeedCastKeys, emits = GenPagesDemoOtherSign.emits, components = GenPagesDemoOtherSign.components, styles = GenPagesDemoOtherSign.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoOtherSign.setup(props as GenPagesDemoOtherSign)
    }
    )
}
, fun(instance, renderer): GenPagesDemoOtherSign {
    return GenPagesDemoOtherSign(instance, renderer)
}
)
val GenPagesDemoOtherDayUtsClass = CreateVueComponent(GenPagesDemoOtherDayUts::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoOtherDayUts.inheritAttrs, inject = GenPagesDemoOtherDayUts.inject, props = GenPagesDemoOtherDayUts.props, propsNeedCastKeys = GenPagesDemoOtherDayUts.propsNeedCastKeys, emits = GenPagesDemoOtherDayUts.emits, components = GenPagesDemoOtherDayUts.components, styles = GenPagesDemoOtherDayUts.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoOtherDayUts.setup(props as GenPagesDemoOtherDayUts)
    }
    )
}
, fun(instance, renderer): GenPagesDemoOtherDayUts {
    return GenPagesDemoOtherDayUts(instance, renderer)
}
)
val GenPagesDemoOtherVibrateClass = CreateVueComponent(GenPagesDemoOtherVibrate::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoOtherVibrate.inheritAttrs, inject = GenPagesDemoOtherVibrate.inject, props = GenPagesDemoOtherVibrate.props, propsNeedCastKeys = GenPagesDemoOtherVibrate.propsNeedCastKeys, emits = GenPagesDemoOtherVibrate.emits, components = GenPagesDemoOtherVibrate.components, styles = GenPagesDemoOtherVibrate.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoOtherVibrate.setup(props as GenPagesDemoOtherVibrate)
    }
    )
}
, fun(instance, renderer): GenPagesDemoOtherVibrate {
    return GenPagesDemoOtherVibrate(instance, renderer)
}
)
open class MaskStyle (
    @JsonNotNull
    open var top: UTSJSONObject,
    @JsonNotNull
    open var right: UTSJSONObject,
    @JsonNotNull
    open var bottom: UTSJSONObject,
    @JsonNotNull
    open var left: UTSJSONObject,
) : UTSObject()
open class ImageInfo (
    @JsonNotNull
    open var width: Number,
    @JsonNotNull
    open var height: Number,
    @JsonNotNull
    open var isLoaded: Boolean = false,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return ImageInfoReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class ImageInfoReactiveObject : ImageInfo, IUTSReactive<ImageInfo> {
    override var __v_raw: ImageInfo
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: ImageInfo, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(width = __v_raw.width, height = __v_raw.height, isLoaded = __v_raw.isLoaded) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): ImageInfoReactiveObject {
        return ImageInfoReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var width: Number
        get() {
            return _tRG(__v_raw, "width", __v_raw.width, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("width")) {
                return
            }
            val oldValue = __v_raw.width
            __v_raw.width = value
            _tRS(__v_raw, "width", oldValue, value)
        }
    override var height: Number
        get() {
            return _tRG(__v_raw, "height", __v_raw.height, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("height")) {
                return
            }
            val oldValue = __v_raw.height
            __v_raw.height = value
            _tRS(__v_raw, "height", oldValue, value)
        }
    override var isLoaded: Boolean
        get() {
            return _tRG(__v_raw, "isLoaded", __v_raw.isLoaded, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("isLoaded")) {
                return
            }
            val oldValue = __v_raw.isLoaded
            __v_raw.isLoaded = value
            _tRS(__v_raw, "isLoaded", oldValue, value)
        }
}
open class Transform (
    @JsonNotNull
    open var translateX: Number,
    @JsonNotNull
    open var translateY: Number,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return TransformReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class TransformReactiveObject : Transform, IUTSReactive<Transform> {
    override var __v_raw: Transform
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: Transform, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(translateX = __v_raw.translateX, translateY = __v_raw.translateY) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): TransformReactiveObject {
        return TransformReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var translateX: Number
        get() {
            return _tRG(__v_raw, "translateX", __v_raw.translateX, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("translateX")) {
                return
            }
            val oldValue = __v_raw.translateX
            __v_raw.translateX = value
            _tRS(__v_raw, "translateX", oldValue, value)
        }
    override var translateY: Number
        get() {
            return _tRG(__v_raw, "translateY", __v_raw.translateY, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("translateY")) {
                return
            }
            val oldValue = __v_raw.translateY
            __v_raw.translateY = value
            _tRS(__v_raw, "translateY", oldValue, value)
        }
}
open class Size2 (
    @JsonNotNull
    open var width: Number,
    @JsonNotNull
    open var height: Number,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return Size2ReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class Size2ReactiveObject : Size2, IUTSReactive<Size2> {
    override var __v_raw: Size2
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: Size2, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(width = __v_raw.width, height = __v_raw.height) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): Size2ReactiveObject {
        return Size2ReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var width: Number
        get() {
            return _tRG(__v_raw, "width", __v_raw.width, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("width")) {
                return
            }
            val oldValue = __v_raw.width
            __v_raw.width = value
            _tRS(__v_raw, "width", oldValue, value)
        }
    override var height: Number
        get() {
            return _tRG(__v_raw, "height", __v_raw.height, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("height")) {
                return
            }
            val oldValue = __v_raw.height
            __v_raw.height = value
            _tRS(__v_raw, "height", oldValue, value)
        }
}
open class CropBox (
    @JsonNotNull
    open var x: Number,
    @JsonNotNull
    open var y: Number,
    @JsonNotNull
    open var width: Number,
    @JsonNotNull
    open var height: Number,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return CropBoxReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class CropBoxReactiveObject : CropBox, IUTSReactive<CropBox> {
    override var __v_raw: CropBox
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: CropBox, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(x = __v_raw.x, y = __v_raw.y, width = __v_raw.width, height = __v_raw.height) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): CropBoxReactiveObject {
        return CropBoxReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var x: Number
        get() {
            return _tRG(__v_raw, "x", __v_raw.x, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("x")) {
                return
            }
            val oldValue = __v_raw.x
            __v_raw.x = value
            _tRS(__v_raw, "x", oldValue, value)
        }
    override var y: Number
        get() {
            return _tRG(__v_raw, "y", __v_raw.y, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("y")) {
                return
            }
            val oldValue = __v_raw.y
            __v_raw.y = value
            _tRS(__v_raw, "y", oldValue, value)
        }
    override var width: Number
        get() {
            return _tRG(__v_raw, "width", __v_raw.width, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("width")) {
                return
            }
            val oldValue = __v_raw.width
            __v_raw.width = value
            _tRS(__v_raw, "width", oldValue, value)
        }
    override var height: Number
        get() {
            return _tRG(__v_raw, "height", __v_raw.height, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("height")) {
                return
            }
            val oldValue = __v_raw.height
            __v_raw.height = value
            _tRS(__v_raw, "height", oldValue, value)
        }
}
open class TouchState (
    @JsonNotNull
    open var startX: Number,
    @JsonNotNull
    open var startY: Number,
    @JsonNotNull
    open var startDistance: Number,
    @JsonNotNull
    open var startImageWidth: Number,
    @JsonNotNull
    open var startImageHeight: Number,
    @JsonNotNull
    open var startTranslateX: Number,
    @JsonNotNull
    open var startTranslateY: Number,
    @JsonNotNull
    open var startCropBoxWidth: Number,
    @JsonNotNull
    open var startCropBoxHeight: Number,
    @JsonNotNull
    open var isTouching: Boolean = false,
    @JsonNotNull
    open var mode: String,
    @JsonNotNull
    open var direction: String,
) : UTSReactiveObject() {
    override fun __v_create(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): UTSReactiveObject {
        return TouchStateReactiveObject(this, __v_isReadonly, __v_isShallow, __v_skip)
    }
}
open class TouchStateReactiveObject : TouchState, IUTSReactive<TouchState> {
    override var __v_raw: TouchState
    override var __v_isReadonly: Boolean
    override var __v_isShallow: Boolean
    override var __v_skip: Boolean
    constructor(__v_raw: TouchState, __v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean) : super(startX = __v_raw.startX, startY = __v_raw.startY, startDistance = __v_raw.startDistance, startImageWidth = __v_raw.startImageWidth, startImageHeight = __v_raw.startImageHeight, startTranslateX = __v_raw.startTranslateX, startTranslateY = __v_raw.startTranslateY, startCropBoxWidth = __v_raw.startCropBoxWidth, startCropBoxHeight = __v_raw.startCropBoxHeight, isTouching = __v_raw.isTouching, mode = __v_raw.mode, direction = __v_raw.direction) {
        this.__v_raw = __v_raw
        this.__v_isReadonly = __v_isReadonly
        this.__v_isShallow = __v_isShallow
        this.__v_skip = __v_skip
    }
    override fun __v_clone(__v_isReadonly: Boolean, __v_isShallow: Boolean, __v_skip: Boolean): TouchStateReactiveObject {
        return TouchStateReactiveObject(this.__v_raw, __v_isReadonly, __v_isShallow, __v_skip)
    }
    override var startX: Number
        get() {
            return _tRG(__v_raw, "startX", __v_raw.startX, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("startX")) {
                return
            }
            val oldValue = __v_raw.startX
            __v_raw.startX = value
            _tRS(__v_raw, "startX", oldValue, value)
        }
    override var startY: Number
        get() {
            return _tRG(__v_raw, "startY", __v_raw.startY, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("startY")) {
                return
            }
            val oldValue = __v_raw.startY
            __v_raw.startY = value
            _tRS(__v_raw, "startY", oldValue, value)
        }
    override var startDistance: Number
        get() {
            return _tRG(__v_raw, "startDistance", __v_raw.startDistance, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("startDistance")) {
                return
            }
            val oldValue = __v_raw.startDistance
            __v_raw.startDistance = value
            _tRS(__v_raw, "startDistance", oldValue, value)
        }
    override var startImageWidth: Number
        get() {
            return _tRG(__v_raw, "startImageWidth", __v_raw.startImageWidth, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("startImageWidth")) {
                return
            }
            val oldValue = __v_raw.startImageWidth
            __v_raw.startImageWidth = value
            _tRS(__v_raw, "startImageWidth", oldValue, value)
        }
    override var startImageHeight: Number
        get() {
            return _tRG(__v_raw, "startImageHeight", __v_raw.startImageHeight, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("startImageHeight")) {
                return
            }
            val oldValue = __v_raw.startImageHeight
            __v_raw.startImageHeight = value
            _tRS(__v_raw, "startImageHeight", oldValue, value)
        }
    override var startTranslateX: Number
        get() {
            return _tRG(__v_raw, "startTranslateX", __v_raw.startTranslateX, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("startTranslateX")) {
                return
            }
            val oldValue = __v_raw.startTranslateX
            __v_raw.startTranslateX = value
            _tRS(__v_raw, "startTranslateX", oldValue, value)
        }
    override var startTranslateY: Number
        get() {
            return _tRG(__v_raw, "startTranslateY", __v_raw.startTranslateY, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("startTranslateY")) {
                return
            }
            val oldValue = __v_raw.startTranslateY
            __v_raw.startTranslateY = value
            _tRS(__v_raw, "startTranslateY", oldValue, value)
        }
    override var startCropBoxWidth: Number
        get() {
            return _tRG(__v_raw, "startCropBoxWidth", __v_raw.startCropBoxWidth, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("startCropBoxWidth")) {
                return
            }
            val oldValue = __v_raw.startCropBoxWidth
            __v_raw.startCropBoxWidth = value
            _tRS(__v_raw, "startCropBoxWidth", oldValue, value)
        }
    override var startCropBoxHeight: Number
        get() {
            return _tRG(__v_raw, "startCropBoxHeight", __v_raw.startCropBoxHeight, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("startCropBoxHeight")) {
                return
            }
            val oldValue = __v_raw.startCropBoxHeight
            __v_raw.startCropBoxHeight = value
            _tRS(__v_raw, "startCropBoxHeight", oldValue, value)
        }
    override var isTouching: Boolean
        get() {
            return _tRG(__v_raw, "isTouching", __v_raw.isTouching, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("isTouching")) {
                return
            }
            val oldValue = __v_raw.isTouching
            __v_raw.isTouching = value
            _tRS(__v_raw, "isTouching", oldValue, value)
        }
    override var mode: String
        get() {
            return _tRG(__v_raw, "mode", __v_raw.mode, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("mode")) {
                return
            }
            val oldValue = __v_raw.mode
            __v_raw.mode = value
            _tRS(__v_raw, "mode", oldValue, value)
        }
    override var direction: String
        get() {
            return _tRG(__v_raw, "direction", __v_raw.direction, __v_isReadonly, __v_isShallow)
        }
        set(value) {
            if (!__v_canSet("direction")) {
                return
            }
            val oldValue = __v_raw.direction
            __v_raw.direction = value
            _tRS(__v_raw, "direction", oldValue, value)
        }
}
open class PassThrough56 (
    open var className: String? = null,
    open var image: PassThroughProps? = null,
    open var op: PassThroughProps? = null,
    open var opItem: PassThroughProps? = null,
    open var mask: PassThroughProps? = null,
    open var cropBox: PassThroughProps? = null,
) : UTSObject()
val GenUniModulesCoolUiComponentsClCropperClCropperClass = CreateVueComponent(GenUniModulesCoolUiComponentsClCropperClCropper::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "component", name = GenUniModulesCoolUiComponentsClCropperClCropper.name, inheritAttrs = GenUniModulesCoolUiComponentsClCropperClCropper.inheritAttrs, inject = GenUniModulesCoolUiComponentsClCropperClCropper.inject, props = GenUniModulesCoolUiComponentsClCropperClCropper.props, propsNeedCastKeys = GenUniModulesCoolUiComponentsClCropperClCropper.propsNeedCastKeys, emits = GenUniModulesCoolUiComponentsClCropperClCropper.emits, components = GenUniModulesCoolUiComponentsClCropperClCropper.components, styles = GenUniModulesCoolUiComponentsClCropperClCropper.styles, setup = fun(props: ComponentPublicInstance, ctx: SetupContext): Any? {
        return GenUniModulesCoolUiComponentsClCropperClCropper.setup(props as GenUniModulesCoolUiComponentsClCropperClCropper, ctx)
    }
    )
}
, fun(instance, renderer): GenUniModulesCoolUiComponentsClCropperClCropper {
    return GenUniModulesCoolUiComponentsClCropperClCropper(instance)
}
)
typealias ClCropperComponentPublicInstance = GenUniModulesCoolUiComponentsClCropperClCropper
val GenPagesDemoOtherCropperClass = CreateVueComponent(GenPagesDemoOtherCropper::class.java, fun(): VueComponentOptions {
    return VueComponentOptions(type = "page", name = "", inheritAttrs = GenPagesDemoOtherCropper.inheritAttrs, inject = GenPagesDemoOtherCropper.inject, props = GenPagesDemoOtherCropper.props, propsNeedCastKeys = GenPagesDemoOtherCropper.propsNeedCastKeys, emits = GenPagesDemoOtherCropper.emits, components = GenPagesDemoOtherCropper.components, styles = GenPagesDemoOtherCropper.styles, setup = fun(props: ComponentPublicInstance): Any? {
        return GenPagesDemoOtherCropper.setup(props as GenPagesDemoOtherCropper)
    }
    )
}
, fun(instance, renderer): GenPagesDemoOtherCropper {
    return GenPagesDemoOtherCropper(instance, renderer)
}
)
fun createApp(): UTSJSONObject {
    val app = createSSRApp(GenAppClass)
    cool(app)
    return _uO("app" to app)
}
fun main(app: IApp) {
    definePageRoutes()
    defineAppConfig()
    (createApp()["app"] as VueApp).mount(app, GenUniApp())
}
open class UniAppConfig : io.dcloud.uniapp.appframe.AppConfig {
    override var name: String = "cool-unix"
    override var appid: String = "__UNI__BC2A3BF"
    override var versionName: String = "1.0.0"
    override var versionCode: String = "100"
    override var uniCompilerVersion: String = "4.76"
    constructor() : super() {}
}
fun definePageRoutes() {
    __uniRoutes.push(UniPageRoute(path = "pages/index/home", component = GenPagesIndexHomeClass, meta = UniPageMeta(isQuit = true), style = _uM("navigationStyle" to "custom")))
    __uniRoutes.push(UniPageRoute(path = "pages/index/my", component = GenPagesIndexMyClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationStyle" to "custom")))
    __uniRoutes.push(UniPageRoute(path = "pages/set/index", component = GenPagesSetIndexClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "%page.设置%")))
    __uniRoutes.push(UniPageRoute(path = "pages/set/general", component = GenPagesSetGeneralClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "%page.通用设置%")))
    __uniRoutes.push(UniPageRoute(path = "pages/set/notice", component = GenPagesSetNoticeClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "%page.通知设置%")))
    __uniRoutes.push(UniPageRoute(path = "pages/set/about", component = GenPagesSetAboutClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "")))
    __uniRoutes.push(UniPageRoute(path = "pages/set/cs", component = GenPagesSetCsClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "%page.联系客服%")))
    __uniRoutes.push(UniPageRoute(path = "pages/user/edit", component = GenPagesUserEditClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "%page.编辑资料%")))
    __uniRoutes.push(UniPageRoute(path = "pages/user/edit-name", component = GenPagesUserEditNameClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationStyle" to "custom")))
    __uniRoutes.push(UniPageRoute(path = "pages/user/edit-description", component = GenPagesUserEditDescriptionClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationStyle" to "custom")))
    __uniRoutes.push(UniPageRoute(path = "pages/user/login", component = GenPagesUserLoginClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationStyle" to "custom", "disableScroll" to true)))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/basic/text", component = GenPagesDemoBasicTextClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Text 文本")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/basic/button", component = GenPagesDemoBasicButtonClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Button 按钮")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/basic/image", component = GenPagesDemoBasicImageClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Image 图片")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/basic/icon", component = GenPagesDemoBasicIconClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Icon 图标")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/basic/tag", component = GenPagesDemoBasicTagClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Tag 标签")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/form/form", component = GenPagesDemoFormFormClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Form 表单验证")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/form/input", component = GenPagesDemoFormInputClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Input 输入框")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/form/textarea", component = GenPagesDemoFormTextareaClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Textarea 文本域")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/form/input-number", component = GenPagesDemoFormInputNumberClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "InputNumber 计数器")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/form/input-otp", component = GenPagesDemoFormInputOtpClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "InputOtp 口令输入")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/form/keyboard", component = GenPagesDemoFormKeyboardClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Keyboard 键盘")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/form/radio", component = GenPagesDemoFormRadioClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Radio 单选框")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/form/checkbox", component = GenPagesDemoFormCheckboxClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Checkbox 多选框")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/form/switch", component = GenPagesDemoFormSwitchClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Switch 开关")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/form/rate", component = GenPagesDemoFormRateClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Rate 评分")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/form/slider", component = GenPagesDemoFormSliderClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Slider 滑块")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/form/select", component = GenPagesDemoFormSelectClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Select 选择器")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/form/select-date", component = GenPagesDemoFormSelectDateClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "SelectDate 日期选择器")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/form/select-time", component = GenPagesDemoFormSelectTimeClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "SelectTime 时间选择器")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/form/cascader", component = GenPagesDemoFormCascaderClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Cascader 级联选择器")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/form/upload", component = GenPagesDemoFormUploadClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Upload 文件上传")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/layout/flex", component = GenPagesDemoLayoutFlexClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Flex 弹性布局")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/layout/tabs", component = GenPagesDemoLayoutTabsClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Tabs 标签页")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/layout/collapse", component = GenPagesDemoLayoutCollapseClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Collapse 折叠面板")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/layout/sticky", component = GenPagesDemoLayoutStickyClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Sticky 吸顶")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/layout/topbar", component = GenPagesDemoLayoutTopbarClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "TopBar 导航栏")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/layout/float-view", component = GenPagesDemoLayoutFloatViewClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "FloatView 悬浮视图")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/layout/footer", component = GenPagesDemoLayoutFooterClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Footer 底部视图")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/data/list", component = GenPagesDemoDataListClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "List 列表")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/data/list-view", component = GenPagesDemoDataListViewClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "ListView 列表视图")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/data/list-view-refresh", component = GenPagesDemoDataListViewRefreshClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "ListViewRefresh 列表刷新")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/data/waterfall", component = GenPagesDemoDataWaterfallClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Waterfall 瀑布流")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/data/banner", component = GenPagesDemoDataBannerClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Banner 轮播图")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/data/pagination", component = GenPagesDemoDataPaginationClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Pagination 分页")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/data/timeline", component = GenPagesDemoDataTimelineClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Timeline 时间轴")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/data/avatar", component = GenPagesDemoDataAvatarClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Avatar 头像")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/data/draggable", component = GenPagesDemoDataDraggableClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Draggable 拖拽")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/status/badge", component = GenPagesDemoStatusBadgeClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Badge 角标")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/status/noticebar", component = GenPagesDemoStatusNoticebarClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "NoticeBar 通知栏")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/status/countdown", component = GenPagesDemoStatusCountdownClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Countdown 倒计时")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/status/progress", component = GenPagesDemoStatusProgressClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Progress 进度条")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/status/progress-circle", component = GenPagesDemoStatusProgressCircleClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "ProgressCircle 圆形进度条")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/status/skeleton", component = GenPagesDemoStatusSkeletonClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Skeleton 骨架图")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/status/loadmore", component = GenPagesDemoStatusLoadmoreClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "LoadMore 加载更多")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/status/rolling-number", component = GenPagesDemoStatusRollingNumberClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "RollingNumber 数字滚动")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/feedback/action-sheet", component = GenPagesDemoFeedbackActionSheetClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "ActionSheet 操作菜单")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/feedback/popup", component = GenPagesDemoFeedbackPopupClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Popup 弹窗")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/feedback/confirm", component = GenPagesDemoFeedbackConfirmClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Confirm 确认框")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/feedback/toast", component = GenPagesDemoFeedbackToastClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Toast 提示框")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/other/qrcode", component = GenPagesDemoOtherQrcodeClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "QRCode 二维码")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/other/sign", component = GenPagesDemoOtherSignClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Sign 签名")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/other/day-uts", component = GenPagesDemoOtherDayUtsClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "DayUts 日期")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/other/vibrate", component = GenPagesDemoOtherVibrateClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Vibrate 震动")))
    __uniRoutes.push(UniPageRoute(path = "pages/demo/other/cropper", component = GenPagesDemoOtherCropperClass, meta = UniPageMeta(isQuit = false), style = _uM("navigationBarTitleText" to "Cropper 图片裁剪")))
}
val __uniTabBar: Map<String, Any?>? = _uM("custom" to true, "color" to "@tabColor", "selectedColor" to "@tabSelectedColor", "backgroundColor" to "@tabBgColor", "borderStyle" to "@tabBorderStyle", "height" to "60px", "list" to _uA(
    _uM("pagePath" to "pages/index/home", "iconPath" to "/static/icon/tabbar/home.png", "selectedIconPath" to "/static/icon/tabbar/home2.png", "text" to "%首页%"),
    _uM("pagePath" to "pages/index/my", "iconPath" to "/static/icon/tabbar/my.png", "selectedIconPath" to "/static/icon/tabbar/my2.png", "text" to "%我的%")
))
val __uniLaunchPage: Map<String, Any?> = _uM("url" to "pages/index/home", "style" to _uM("navigationStyle" to "custom"))
fun defineAppConfig() {
    __uniConfig.entryPagePath = "/pages/index/home"
    __uniConfig.globalStyle = _uM("navigationBarTitleText" to "cool-unix", "navigationBarTextStyle" to "@navTextStyle", "backgroundColorContent" to "@bgContentColor", "backgroundColor" to "@bgColor", "navigationBarBackgroundColor" to "@navBgColor")
    __uniConfig.getTabBarConfig = fun(): Map<String, Any>? {
        return _uM("custom" to true, "color" to "@tabColor", "selectedColor" to "@tabSelectedColor", "backgroundColor" to "@tabBgColor", "borderStyle" to "@tabBorderStyle", "height" to "60px", "list" to _uA(
            _uM("pagePath" to "pages/index/home", "iconPath" to "/static/icon/tabbar/home.png", "selectedIconPath" to "/static/icon/tabbar/home2.png", "text" to "%首页%"),
            _uM("pagePath" to "pages/index/my", "iconPath" to "/static/icon/tabbar/my.png", "selectedIconPath" to "/static/icon/tabbar/my2.png", "text" to "%我的%")
        ))
    }
    __uniConfig.tabBar = __uniConfig.getTabBarConfig()
    __uniConfig.conditionUrl = ""
    __uniConfig.uniIdRouter = _uM()
    __uniConfig.themeConfig = _uM("light" to _uM("bgColor" to "#f8f8f8", "bgContentColor" to "#f8f8f8", "navBgColor" to "#ffffff", "navTextStyle" to "black", "tabColor" to "#999999", "tabSelectedColor" to "#14b8a6", "tabBorderStyle" to "white", "tabBgColor" to "#ffffff"), "dark" to _uM("bgColor" to "#191919", "bgContentColor" to "#191919", "navBgColor" to "#191919", "navTextStyle" to "white", "tabColor" to "#cccccc", "tabSelectedColor" to "#ffffff", "tabBorderStyle" to "black", "tabBgColor" to "#191919"))
    __uniConfig.ready = true
}
open class GenUniApp : UniAppImpl() {
    open val vm: GenApp?
        get() {
            return getAppVm() as GenApp?
        }
    open val `$vm`: GenApp?
        get() {
            return getAppVm() as GenApp?
        }
}
fun getApp(): GenUniApp {
    return getUniApp() as GenUniApp
}
